using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace GQLDEMOTUT.Migrations
{
    public partial class AddingBookmoduleExample : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Authors",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    AuthorName = table.Column<string>(type: "TEXT", nullable: false),
                    DateOfBirth = table.Column<DateTime>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Authors", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Publishers",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    PublisherName = table.Column<string>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Publishers", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Books",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    AutherId = table.Column<int>(type: "INTEGER", nullable: false),
                    PublisherId = table.Column<int>(type: "INTEGER", nullable: false),
                    BookName = table.Column<string>(type: "TEXT", nullable: false),
                    BookDescription = table.Column<string>(type: "TEXT", nullable: false),
                    DateOfRelease = table.Column<DateTime>(type: "TEXT", nullable: true),
                    Edetion = table.Column<byte>(type: "INTEGER", nullable: true),
                    Language = table.Column<string>(type: "TEXT", nullable: true),
                    GeneresTags = table.Column<string>(type: "TEXT", nullable: true),
                    Characters = table.Column<string>(type: "TEXT", nullable: true),
                    NumberOfPages = table.Column<int>(type: "INTEGER", nullable: true),
                    ISBN = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Books", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Books_Authors_AutherId",
                        column: x => x.AutherId,
                        principalTable: "Authors",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Books_Publishers_PublisherId",
                        column: x => x.PublisherId,
                        principalTable: "Publishers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "BookReviews",
                columns: table => new
                {
                    Id = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    BookId = table.Column<int>(type: "INTEGER", nullable: false),
                    ReviewRate = table.Column<byte>(type: "INTEGER", nullable: false),
                    DateOfReview = table.Column<DateTime>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BookReviews", x => x.Id);
                    table.ForeignKey(
                        name: "FK_BookReviews_Books_BookId",
                        column: x => x.BookId,
                        principalTable: "Books",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1, "Suzanne Collins", new DateTime(1939, 12, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7491) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2, "\"J.K. Rowling", new DateTime(1916, 10, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7665) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3, "Harper Lee", new DateTime(1942, 2, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7669) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 4, "\"Jane Austen", new DateTime(1949, 7, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7672) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 5, "Stephenie Meyer", new DateTime(1964, 6, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7675) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 6, "Markus Zusak (Goodreads Author)", new DateTime(1906, 7, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7687) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 7, "\"George Orwell", new DateTime(1979, 9, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 8, "\"C.S. Lewis", new DateTime(1980, 5, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7693) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 9, "J.R.R. Tolkien", new DateTime(1907, 5, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 10, "Margaret Mitchell", new DateTime(1970, 9, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7702) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 11, "John Green (Goodreads Author)", new DateTime(1894, 2, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7704) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 12, "Douglas Adams", new DateTime(1997, 11, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7707) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 13, "Shel Silverstein", new DateTime(1919, 10, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7709) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 14, "\"Emily Brontë", new DateTime(1900, 7, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7714) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 15, "Dan Brown (Goodreads Author)", new DateTime(1898, 4, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7717) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 16, "Arthur Golden", new DateTime(2012, 7, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7720) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 17, "\"Oscar Wilde", new DateTime(1896, 2, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7722) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 18, "\"Lewis Carroll", new DateTime(2001, 4, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7729) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 19, "\"Charlotte Brontë", new DateTime(1903, 10, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7731) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 20, "\"Victor Hugo", new DateTime(1887, 6, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 21, "Ray Bradbury", new DateTime(1941, 6, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7736) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 22, "Veronica Roth (Goodreads Author)", new DateTime(1907, 1, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7742) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 23, "William Golding", new DateTime(1980, 10, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7744) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 24, "\"William Shakespeare", new DateTime(1977, 9, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7747) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 25, "\"Paulo Coelho (Goodreads Author)", new DateTime(1913, 9, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7749) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 26, "\"Fyodor Dostoyevsky", new DateTime(1908, 7, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7755) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 27, "Stephen Chbosky", new DateTime(1902, 12, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7757) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 28, "\"F. Scott Fitzgerald", new DateTime(1991, 3, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7760) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 29, "Cassandra Clare (Goodreads Author)", new DateTime(1947, 10, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7822) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 30, "\"Orson Scott Card", new DateTime(1987, 4, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7828) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 31, "Kathryn Stockett (Goodreads Author)", new DateTime(1888, 8, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7831) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 32, "L.M. Montgomery", new DateTime(1917, 3, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7833) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 34, "\"Antoine de Saint-Exupéry", new DateTime(1944, 11, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7842) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 35, "\"E.B. White", new DateTime(2004, 9, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7845) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 36, "John Steinbeck", new DateTime(1893, 6, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7847) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 37, "Audrey Niffenegger (Goodreads Author)", new DateTime(1957, 5, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7849) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 38, "\"Bram Stoker", new DateTime(1896, 1, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7855) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 39, "Aldous Huxley", new DateTime(1883, 7, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7857) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 40, "\"Gabriel García Márquez", new DateTime(1962, 6, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7859) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 41, "J.D. Salinger", new DateTime(2003, 9, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7862) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 42, "William Goldman", new DateTime(1968, 5, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7867) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 43, "Rick Riordan (Goodreads Author)", new DateTime(1904, 3, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7870) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 44, "Frances Hodgson Burnett", new DateTime(1990, 12, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7872) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 45, "Khaled Hosseini (Goodreads Author)", new DateTime(1889, 8, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7874) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 46, "Madeleine L'Engle", new DateTime(1913, 10, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 47, "George R.R. Martin", new DateTime(1932, 1, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7882) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 48, "\"Mark Twain", new DateTime(1978, 3, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7885) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 49, "Alice Sebold", new DateTime(1994, 5, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7887) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 50, "S.E. Hinton (Goodreads Author)", new DateTime(1925, 7, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7893) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 51, "Maurice Sendak", new DateTime(1919, 1, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7895) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 52, "Dr. Seuss", new DateTime(1920, 4, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7898) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 53, "\"Homer", new DateTime(1973, 12, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7900) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 54, "Yann Martel", new DateTime(1983, 7, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 55, "\"Charles Dickens", new DateTime(1974, 10, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7908) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 56, "Sara Gruen (Goodreads Author)", new DateTime(1967, 3, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7910) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 57, "\"Vladimir Nabokov", new DateTime(1914, 6, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 58, "Kurt Vonnegut Jr.", new DateTime(1912, 11, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7918) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 59, "\"Mary Wollstonecraft Shelley", new DateTime(2004, 7, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7921) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 60, "\"Khaled Hosseini (Goodreads Author)", new DateTime(1931, 5, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7923) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 61, "Margaret Atwood (Goodreads Author)", new DateTime(1903, 7, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7925) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 62, "Lois Lowry (Goodreads Author)", new DateTime(1973, 11, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7931) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 63, "Joseph Heller", new DateTime(1996, 9, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7933) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 64, "Frank Herbert", new DateTime(1885, 7, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7936) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 65, "Ken Follett (Goodreads Author)", new DateTime(1994, 7, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 66, "\"Stephen King (Goodreads Author)", new DateTime(1951, 1, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7945) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 67, "Arthur Conan Doyle", new DateTime(1937, 8, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7947) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 68, "Richard Adams", new DateTime(1921, 8, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7950) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 70, "Louisa May Alcott", new DateTime(1884, 11, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7959) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 71, "Sylvia Plath", new DateTime(1919, 11, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7961) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 72, "J.K. Rowling", new DateTime(1903, 10, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7963) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 73, "Ken Kesey", new DateTime(1903, 2, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7966) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 74, "\"Leo Tolstoy", new DateTime(1999, 2, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7971) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 75, "Diana Gabaldon (Goodreads Author)", new DateTime(1981, 2, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7973) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 76, "Jodi Picoult (Goodreads Author)", new DateTime(1991, 9, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7976) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 77, "\"Roald Dahl", new DateTime(1979, 3, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7979) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 79, "\"Stieg Larsson", new DateTime(1893, 6, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7987) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 80, "Daphne du Maurier", new DateTime(1980, 2, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(7989) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 81, "George Orwell", new DateTime(2004, 9, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8039) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 82, "Alice Walker", new DateTime(1969, 9, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8044) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 83, "Betty Smith", new DateTime(1953, 8, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8047) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 84, "Anthony Burgess", new DateTime(1890, 9, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8049) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 85, "Cormac McCarthy", new DateTime(1941, 1, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8054) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 87, "Frank McCourt", new DateTime(1967, 10, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8062) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 88, "Richelle Mead (Goodreads Author)", new DateTime(1964, 4, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8064) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 89, "\"Hermann Hesse", new DateTime(1949, 5, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8067) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 90, "Barbara Kingsolver", new DateTime(1919, 11, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8072) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 91, "Philip Pullman", new DateTime(2015, 9, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8074) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 92, "\"Miguel de Cervantes Saavedra", new DateTime(1901, 3, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8077) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 93, "\"Ayn Rand", new DateTime(1970, 12, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8079) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 95, "Ernest Hemingway", new DateTime(1932, 10, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8087) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 96, "Nicholas Sparks (Goodreads Author)", new DateTime(1916, 8, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8090) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 97, "\"A.A. Milne", new DateTime(1892, 1, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8093) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 98, "Edgar Allan Poe", new DateTime(1904, 3, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8098) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 99, "Anne Rice", new DateTime(1911, 7, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8100) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 100, "John Irving (Goodreads Author)", new DateTime(1927, 12, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8103) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 101, " the Whale\"", new DateTime(1922, 5, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8105) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 102, "Anita Diamant (Goodreads Author)", new DateTime(1981, 8, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8111) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 103, "Sue Monk Kidd (Goodreads Author)", new DateTime(1958, 4, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8113) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 105, "\"Cassandra Clare (Goodreads Author)", new DateTime(1998, 9, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8118) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 107, "Agatha Christie", new DateTime(1890, 10, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8125) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 108, "Jeffrey Eugenides", new DateTime(1949, 9, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8128) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 109, "\"Albert Camus", new DateTime(1954, 3, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8130) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 110, "\"Mikhail Bulgakov", new DateTime(1939, 6, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8135) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 111, "Patrick Rothfuss (Goodreads Author)", new DateTime(1901, 7, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8138) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 112, "Stephen King (Goodreads Author)", new DateTime(1929, 4, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8140) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 114, "Christopher Paolini (Goodreads Author)", new DateTime(2001, 1, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8148) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 116, "Daniel Keyes", new DateTime(2004, 2, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8153) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 117, "Jack Kerouac", new DateTime(1913, 8, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8155) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 118, "\"Franz Kafka", new DateTime(1890, 7, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8161) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 120, "\"Carlos Ruiz Zafón", new DateTime(1993, 10, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8165) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 121, "Mark Haddon", new DateTime(1931, 7, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8168) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 122, "Eric Carle", new DateTime(1901, 5, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8173) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 123, "Mitch Albom (Goodreads Author)", new DateTime(1967, 2, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8176) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 124, "\"Milan Kundera", new DateTime(2006, 12, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8178) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 125, "\"Umberto Eco", new DateTime(1959, 3, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8181) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 126, "Wilson Rawls", new DateTime(1903, 5, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8186) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 128, "\"Mario Puzo", new DateTime(1994, 4, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8191) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 129, "\"Nathaniel Hawthorne", new DateTime(1941, 10, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8193) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 130, "Truman Capote", new DateTime(1969, 8, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8251) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 131, "Chuck Palahniuk (Goodreads Author)", new DateTime(1971, 3, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8254) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 133, " Hush\"", new DateTime(1961, 10, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8259) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 135, "Neil Gaiman (Goodreads Author)", new DateTime(1910, 12, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8267) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 136, "\"Alexandre Dumas", new DateTime(2014, 8, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8269) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 137, "Larry McMurtry", new DateTime(2004, 8, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8272) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 138, "\"Patrick Süskind", new DateTime(1891, 11, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8277) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 139, "Louis Sachar (Goodreads Author)", new DateTime(2016, 1, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8280) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 140, " the Witch and the Wardrobe\"", new DateTime(1899, 11, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8282) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 141, "\"Alan Moore (Goodreads Author)", new DateTime(1953, 10, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8285) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 144, "\"Laura Ingalls Wilder", new DateTime(1898, 11, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8295) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 145, "\"Dante Alighieri", new DateTime(1913, 6, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8297) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 146, "\"J.M. Barrie", new DateTime(2017, 2, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8303) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 147, "\"Erich Maria Remarque", new DateTime(1954, 2, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8305) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 148, " or There and Back Again\"", new DateTime(1975, 4, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8308) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 149, "\"Reduced Shakespeare Company", new DateTime(1910, 10, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8310) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 153, "Colleen McCullough", new DateTime(1940, 1, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8323) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 157, "Ian McEwan", new DateTime(2009, 4, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8335) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 158, "Oscar Wilde", new DateTime(1884, 10, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8340) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 159, " Pray", new DateTime(2006, 6, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8343) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 160, "Zora Neale Hurston", new DateTime(1976, 12, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8345) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 161, "Alexandre Dumas", new DateTime(1928, 3, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8348) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 162, "\"L. Frank Baum", new DateTime(1993, 3, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8353) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 164, "\"Margaret Wise Brown", new DateTime(1930, 1, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8358) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 166, " Witch\"", new DateTime(1991, 3, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8366) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 168, "\"Thomas Hardy", new DateTime(1999, 9, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8371) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 169, "Pearl S. Buck", new DateTime(1919, 1, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8373) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 170, "\"Joseph Conrad", new DateTime(2013, 6, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8378) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 174, "Kahlil Gibran", new DateTime(1922, 1, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8391) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 175, "Marion Zimmer Bradley", new DateTime(1903, 2, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8393) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 178, "Amy Tan (Goodreads Author)", new DateTime(1987, 12, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8403) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 179, "\"Jane Carruth (Adapted By)", new DateTime(1969, 12, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8406) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 180, "\"Jack London", new DateTime(1921, 3, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8408) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 181, "\"Richard Bach (Goodreads Author)", new DateTime(1904, 6, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8411) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 182, "\"Gustave Flaubert", new DateTime(1889, 3, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8416) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 183, "\"Norton Juster", new DateTime(1985, 6, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8418) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 184, "Katherine Paterson", new DateTime(1912, 1, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8420) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 185, "\"Suzanne Collins", new DateTime(2015, 11, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8423) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 186, " the Places You'll Go!\"", new DateTime(1926, 4, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8428) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 188, "James Dashner (Goodreads Author)", new DateTime(2008, 12, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8433) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 189, "\"Michael Ende", new DateTime(1926, 8, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8435) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 191, "\"James Joyce", new DateTime(1890, 7, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8443) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 192, "\"Robert Louis Stevenson", new DateTime(1884, 10, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8543) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 193, "E.L. James (Goodreads Author)", new DateTime(1982, 5, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8547) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 194, "Jean M. Auel", new DateTime(1943, 4, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8552) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 196, "\"Geoffrey Chaucer", new DateTime(1890, 5, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8557) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 200, "\"Jay Asher (Goodreads Author)", new DateTime(1965, 5, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8570) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 201, "\"Gregory Maguire", new DateTime(1999, 6, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8572) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 202, "James Clavell", new DateTime(1912, 11, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8577) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 203, "Jonathan Safran Foer (Goodreads Author)", new DateTime(1962, 5, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8580) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 206, "\"Frances Hodgson Burnett", new DateTime(1966, 7, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8589) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 207, "Philippa Gregory (Goodreads Author)", new DateTime(2000, 11, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8592) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 208, "Thomas Keneally", new DateTime(1917, 8, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8594) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 209, "John Boyne", new DateTime(1910, 3, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8597) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 210, "Michael Crichton", new DateTime(1914, 12, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8602) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 212, "Erin Morgenstern (Goodreads Author)", new DateTime(1985, 10, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8607) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 213, "Lauren Kate (Goodreads Author)", new DateTime(1931, 8, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8609) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 214, "\"J.R.R. Tolkien", new DateTime(1999, 9, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8615) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 215, "Ki Longfellow (Goodreads Author)", new DateTime(1958, 10, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8617) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 216, "Toni Morrison", new DateTime(1946, 7, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8620) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 218, "\"John Kennedy Toole", new DateTime(1956, 12, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8627) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 220, "Kiera Cass (Goodreads Author)", new DateTime(1933, 3, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8632) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 221, "\"Margery Williams Bianco", new DateTime(1921, 9, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8635) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 224, "Sarah J. Maas (Goodreads Author)", new DateTime(1913, 9, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8645) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 228, "\"Arthur Miller", new DateTime(1883, 9, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 230, "\"Arundhati Roy (Goodreads Author)", new DateTime(1934, 12, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8665) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 231, "\"Kenneth Grahame", new DateTime(1960, 5, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8667) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 232, "C.S. Lewis", new DateTime(1885, 10, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 233, "Tracy Chevalier (Goodreads Author)", new DateTime(1917, 7, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8672) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 234, "\"Corrie ten Boom", new DateTime(1885, 4, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8677) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 236, "Thomas Harris", new DateTime(1929, 2, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8683) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 237, "Maggie Stiefvater (Goodreads Author)", new DateTime(1963, 6, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8685) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 238, "Scott Westerfeld (Goodreads Author)", new DateTime(1898, 7, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 240, "\"Viktor E. Frankl", new DateTime(1943, 3, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 241, "Wally Lamb (Goodreads Author)", new DateTime(1968, 7, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8698) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 242, "\"Gaston Leroux", new DateTime(1886, 8, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8703) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 243, "John Grogan", new DateTime(2001, 5, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8706) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 244, "Gail Carson Levine (Goodreads Author)", new DateTime(1987, 10, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 245, "\"Haruki Murakami", new DateTime(2009, 12, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8710) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 246, "Marissa Meyer (Goodreads Author)", new DateTime(1988, 7, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8716) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 248, "José Saramago", new DateTime(1969, 10, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8721) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 250, "William Faulkner", new DateTime(1900, 4, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8728) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 251, "William Paul Young", new DateTime(1975, 11, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8731) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 252, "\"P.C. Cast (Goodreads Author)", new DateTime(1938, 3, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 253, "\"Mary Ann Shaffer", new DateTime(1989, 12, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8735) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 255, "\"Hunter S. Thompson", new DateTime(1936, 2, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8743) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 256, "\"Isabel Allende (Goodreads Author)", new DateTime(1990, 2, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8799) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 257, "Bill Watterson", new DateTime(1977, 11, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8801) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 258, "Alex Haley", new DateTime(2008, 9, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8810) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 260, "Diana Wynne Jones", new DateTime(1983, 11, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8814) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 261, "Robert A. Heinlein", new DateTime(1995, 7, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8817) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 262, "Scott O'Dell", new DateTime(1937, 1, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8822) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 265, "Donna Tartt", new DateTime(1928, 10, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8829) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 266, "Janet Fitch (Goodreads Author)", new DateTime(1979, 3, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8835) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 267, "\"Anne Frank", new DateTime(1918, 2, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8837) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 268, "Lauren Oliver (Goodreads Author)", new DateTime(1918, 9, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8840) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 269, "Jamie McGuire (Goodreads Author)", new DateTime(1964, 1, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8842) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 270, "William Shakespeare", new DateTime(2011, 12, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8847) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 274, "Laurie Halse Anderson (Goodreads Author)", new DateTime(1955, 11, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8860) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 277, "T.H. White", new DateTime(1950, 8, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8867) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 280, "Jon Krakauer (Goodreads Author)", new DateTime(1940, 10, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8877) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 281, "\"Cornelia Funke (Goodreads Author)", new DateTime(1890, 1, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 282, "Harriet Beecher Stowe", new DateTime(2016, 2, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8885) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 283, " Christ's Childhood Pal\"", new DateTime(1988, 8, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8887) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 284, "Elizabeth Kostova", new DateTime(1964, 6, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8890) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 286, "\"Voltaire", new DateTime(1884, 8, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8898) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 288, "Ralph Ellison", new DateTime(1978, 11, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8952) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 289, "Gillian Flynn (Goodreads Author)", new DateTime(1953, 4, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8954) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 290, "Tim Butcher (Goodreads Author)", new DateTime(1988, 2, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8959) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 291, "\"John Milton", new DateTime(2011, 7, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8962) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 292, "Walt Whitman", new DateTime(1910, 1, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8964) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 293, "James Herriot", new DateTime(1962, 5, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8967) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 294, "Kristin Cashore", new DateTime(1942, 4, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8972) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 296, "Diane Setterfield (Goodreads Author)", new DateTime(1908, 1, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8977) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 297, "Isaac Asimov", new DateTime(1966, 9, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8979) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 299, "Tim O'Brien", new DateTime(1928, 2, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8987) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 301, "\"H.G. Wells", new DateTime(1937, 1, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(8992) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 304, "\"Johanna Spyri", new DateTime(1944, 1, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9002) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 305, " Margaret\"", new DateTime(2007, 5, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9004) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 307, "\"Jostein Gaarder", new DateTime(1937, 7, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9012) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 308, "Henry David Thoreau", new DateTime(1883, 9, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9014) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 310, "سید مرتضی مصطفوی (Goodreads Author)", new DateTime(1969, 12, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9022) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 311, "Kate Chopin", new DateTime(1949, 11, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9024) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 312, "Rainbow Rowell (Goodreads Author)", new DateTime(1975, 1, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9027) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 313, "William Styron", new DateTime(1967, 11, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9029) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 314, "Pat Conroy", new DateTime(1923, 7, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9034) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 315, "Kazuo Ishiguro", new DateTime(1996, 6, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9037) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 317, "Charlaine Harris (Goodreads Author)", new DateTime(1988, 10, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9042) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 318, "Fannie Flagg", new DateTime(2005, 1, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9047) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 320, "Ernest Cline (Goodreads Author)", new DateTime(1951, 6, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9052) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 321, "\"George Eliot", new DateTime(1978, 4, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9054) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 322, "\"Jon Stone", new DateTime(1935, 10, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9059) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 324, "Chinua Achebe", new DateTime(2011, 11, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9064) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 325, "\"Helen Fielding (Goodreads Author)", new DateTime(1942, 7, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9067) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 326, "\"Virginia Woolf", new DateTime(1887, 11, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9072) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 329, "Bryce Courtenay", new DateTime(1917, 4, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9079) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 332, "John Grisham (Goodreads Author)", new DateTime(1933, 8, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9090) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 335, "Philip K. Dick", new DateTime(1931, 7, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9100) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 338, "Bill Bryson", new DateTime(1915, 7, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9110) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 340, "Jojo Moyes (Goodreads Author)", new DateTime(1933, 11, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9115) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 342, "Garth Stein (Goodreads Author)", new DateTime(1957, 3, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9122) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 343, "Brandon Sanderson (Goodreads Author)", new DateTime(1963, 10, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9125) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 344, "Gayle Forman (Goodreads Author)", new DateTime(1904, 1, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9127) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 345, "Anna Sewell", new DateTime(1952, 12, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9130) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 346, "Marie Lu (Goodreads Author)", new DateTime(1995, 3, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9135) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 347, "\"Arthur Conan Doyle", new DateTime(1927, 7, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9138) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 349, "\"Jonathan Swift", new DateTime(1924, 9, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9143) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 350, "Ann Patchett", new DateTime(1947, 8, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9148) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 351, "Bret Easton Ellis", new DateTime(1899, 6, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9195) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 353, "\"Robert Munsch", new DateTime(2000, 12, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9201) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 355, "Anonymous", new DateTime(1933, 8, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9209) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 356, "\"Neil Gaiman (Goodreads Author)", new DateTime(1958, 9, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9211) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 357, "Jane Austen", new DateTime(1995, 5, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9214) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 359, "Charles Frazier", new DateTime(1936, 10, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9221) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 361, "R.J. Palacio", new DateTime(1885, 10, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9226) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 362, "\"Unknown", new DateTime(1924, 12, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9231) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 363, "Natalie Babbitt", new DateTime(1891, 5, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9234) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 365, "\"Kami Garcia (Goodreads Author)", new DateTime(2014, 10, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9239) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 368, "J.R. Ward (Goodreads Author)", new DateTime(2002, 8, 11, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9249) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 369, "\"Beatrice Sparks (as \"\"Anonymous\"\")", new DateTime(1990, 2, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9252) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 370, "أحمد جمال الدين رمضان", new DateTime(2004, 8, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9257) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 371, "Robert Jordan", new DateTime(1966, 9, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9260) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 374, "\"John Knowles", new DateTime(1969, 2, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9270) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 375, "Art Spiegelman", new DateTime(2015, 4, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9272) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 377, "Michael Chabon", new DateTime(1922, 4, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9277) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 380, "Dave Pelzer (Goodreads Author)", new DateTime(1960, 5, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9287) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 381, "Jerry Spinelli", new DateTime(1915, 11, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9290) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 382, "\"Lao Tzu", new DateTime(1983, 5, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9295) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 384, "Salman Rushdie", new DateTime(1997, 10, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9300) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 385, "Jennifer L. Armentrout (Goodreads Author)", new DateTime(1941, 11, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9302) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 388, "Becca Fitzpatrick (Goodreads Author)", new DateTime(1983, 7, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9312) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 389, "Michael Ondaatje", new DateTime(2013, 5, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9315) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 391, "David Mitchell", new DateTime(1955, 5, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9323) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 392, "Robert M. Pirsig", new DateTime(1922, 7, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9325) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 393, "Andy Weir (Goodreads Author)", new DateTime(2011, 3, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9327) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 394, "\"John Grisham (Goodreads Author)", new DateTime(1943, 9, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9333) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 396, "Willa Cather", new DateTime(2010, 8, 31, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9338) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 397, "Tahereh Mafi", new DateTime(1884, 2, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9340) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 399, "\"Boris Pasternak", new DateTime(2013, 12, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9347) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 401, "\"Daniel Defoe", new DateTime(1935, 7, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9352) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 403, "\"Laura Esquivel", new DateTime(1980, 4, 23, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9360) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 405, "Emma Donoghue (Goodreads Author)", new DateTime(1906, 7, 2, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9365) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 409, "Leigh Bardugo (Goodreads Author)", new DateTime(1947, 3, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9378) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 411, "Charles Darwin", new DateTime(1955, 7, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9386) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 412, "Rohinton Mistry", new DateTime(2015, 10, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9388) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 413, "Laini Taylor (Goodreads Author)", new DateTime(1895, 5, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9391) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 416, "Alyson Noel (Goodreads Author)", new DateTime(1979, 3, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9448) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 418, "Arthur Miller", new DateTime(1919, 7, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9456) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 421, "John Berendt", new DateTime(1991, 7, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9463) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 422, "Tennessee Williams", new DateTime(1961, 1, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9469) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 423, "David Foster Wallace", new DateTime(1960, 7, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9471) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 424, "\"Niccolò Machiavelli", new DateTime(1909, 3, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9473) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 426, " First Part\"", new DateTime(1903, 12, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9481) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 427, "Lisa See (Goodreads Author)", new DateTime(1920, 7, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9483) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 429, "Stephanie Perkins (Goodreads Author)", new DateTime(2008, 4, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9488) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 431, "James Patterson (Goodreads Author)", new DateTime(1931, 7, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9496) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 432, "Ransom Riggs", new DateTime(1970, 6, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9498) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 433, "Ally Condie (Goodreads Author)", new DateTime(1960, 2, 22, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9501) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 434, "V.C. Andrews", new DateTime(1897, 1, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9506) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 435, "Annie Proulx", new DateTime(1933, 11, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9509) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 436, " Resilience and Redemption\"", new DateTime(2005, 7, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9511) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 437, "Emmuska Orczy", new DateTime(1945, 11, 6, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9513) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 438, "Colleen Hoover (Goodreads Author)", new DateTime(2003, 10, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9519) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 439, "Susanna Clarke", new DateTime(1907, 4, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9521) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 440, "Chaim Potok", new DateTime(1985, 9, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9524) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 441, "Nick Hornby", new DateTime(1993, 12, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9526) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 442, " or the Evening Redness in the West\"", new DateTime(1966, 11, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9531) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 443, "Anthony Doerr (Goodreads Author)", new DateTime(1933, 5, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9534) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 445, "Eoin Colfer", new DateTime(1998, 5, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9539) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 446, "\"Astrid Lindgren", new DateTime(1968, 6, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9544) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 449, "\"Bernhard Schlink", new DateTime(1915, 9, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9552) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 452, "Gregory David Roberts", new DateTime(1955, 7, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9562) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 453, " Magic", new DateTime(2001, 11, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9564) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 454, "Francine Rivers (Goodreads Author)", new DateTime(1955, 5, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9570) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 455, "\"Edith Wharton", new DateTime(1943, 3, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9572) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 458, "William Gibson", new DateTime(1896, 5, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9582) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 460, "Samuel Beckett", new DateTime(1896, 9, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9587) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 468, "Rebecca Wells (Goodreads Author)", new DateTime(1966, 9, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9613) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 469, "\"T.S. Eliot", new DateTime(1912, 5, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9615) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 474, "Virginia Woolf", new DateTime(2010, 1, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9633) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 475, "Maya Angelou", new DateTime(1972, 10, 17, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9636) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 476, " Robot\"", new DateTime(1937, 2, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9638) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 480, "\"Upton Sinclair", new DateTime(1911, 11, 18, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 482, "David Guterson", new DateTime(1892, 9, 29, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9716) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 484, " Claudius\"", new DateTime(1917, 6, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9721) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 486, "David Sedaris", new DateTime(1958, 3, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9728) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 488, "E.M. Forster", new DateTime(1906, 2, 21, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 490, "\"Plato", new DateTime(1998, 7, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9741) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 492, "William Peter Blatty", new DateTime(1916, 5, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9745) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 493, "R.D. Ronald", new DateTime(1992, 1, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9748) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 496, "Rick Yancey", new DateTime(1907, 12, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9758) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 497, "Julie Kagawa (Goodreads Author)", new DateTime(1985, 4, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9760) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 498, "Kyle Keyes", new DateTime(1956, 10, 15, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9766) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 499, "Benjamin Alire Sáenz (Goodreads Author)", new DateTime(1986, 10, 13, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9768) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 500, "\"Anonymous", new DateTime(1952, 10, 27, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9770) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 501, "\"Emily Dickinson", new DateTime(1886, 12, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9773) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 504, "Diana Forbes (Goodreads Author)", new DateTime(1983, 6, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9783) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 505, "\"William Makepeace Thackeray", new DateTime(1894, 8, 1, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9785) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 506, "Terry Goodkind", new DateTime(1887, 9, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9791) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 507, "Elizabeth Gaskell", new DateTime(1983, 3, 5, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9793) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 508, "Evelyn Waugh", new DateTime(1981, 9, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9795) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 509, "Richard Dawkins (Goodreads Author)", new DateTime(1991, 2, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9798) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 511, "\"W. Somerset Maugham", new DateTime(1963, 11, 3, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9805) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 512, "Neal Stephenson (Goodreads Author)", new DateTime(1922, 6, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9808) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 513, "Max Brooks (Goodreads Author)", new DateTime(1927, 2, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9810) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 514, "Libba Bray (Goodreads Author)", new DateTime(1960, 11, 30, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9886) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 515, "Sylvia Day (Goodreads Author)", new DateTime(1919, 3, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9889) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 518, "Kelley Armstrong (Goodreads Author)", new DateTime(1978, 6, 19, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9900) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 519, " the Beloved Country\"", new DateTime(1958, 12, 4, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9903) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 520, "Dalton Trumbo", new DateTime(1910, 3, 28, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 521, "Joanne Harris (Goodreads Author)", new DateTime(1932, 6, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9907) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 522, "Jeaniene Frost (Goodreads Author)", new DateTime(1978, 6, 9, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 523, "\"Greg Mortenson (Goodreads Author)", new DateTime(1890, 1, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9915) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 524, "Simone Elkeles (Goodreads Author)", new DateTime(2011, 1, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9917) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 525, "Victoria Aveyard (Goodreads Author)", new DateTime(1904, 4, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9920) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 528, "\"Wilkie Collins", new DateTime(2012, 1, 24, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9930) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 530, "Sarah Dessen (Goodreads Author)", new DateTime(1883, 12, 26, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 531, "Arthur C. Clarke", new DateTime(1893, 9, 8, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9940) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 533, "Deborah Harkness (Goodreads Author)", new DateTime(2015, 9, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9945) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 534, "Neal Shusterman (Goodreads Author)", new DateTime(1924, 4, 20, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9950) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 535, "Irvine Welsh", new DateTime(2006, 3, 10, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9953) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 536, "P.D. Eastman", new DateTime(1891, 6, 7, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9956) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 539, "\"Marcel Proust", new DateTime(1912, 9, 25, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9966) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 540, "Tatiana de Rosnay (Goodreads Author)", new DateTime(1962, 7, 14, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9968) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 541, "\"Chris Van Allsburg", new DateTime(1981, 9, 12, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9970) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 542, "Sherrilyn Kenyon (Goodreads Author)", new DateTime(2013, 9, 16, 0, 14, 18, 422, DateTimeKind.Local).AddTicks(9975) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 543, "D.H. Lawrence", new DateTime(2007, 3, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 546, "Daniel Quinn", new DateTime(2010, 4, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(17) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 548, "Michelle Hodkin (Goodreads Author)", new DateTime(1985, 11, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(22) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 550, "Jennifer Niven (Goodreads Author)", new DateTime(1924, 5, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(31) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 554, "Pittacus Lore", new DateTime(2000, 12, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(43) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 555, "Susan Ee (Goodreads Author)", new DateTime(1907, 12, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(45) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 558, "Paullina Simons", new DateTime(1913, 6, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(56) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 559, "Max Lucado (Goodreads Author)", new DateTime(1993, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(59) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 560, "Garth Nix (Goodreads Author)", new DateTime(1922, 4, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(61) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 561, "Abraham Verghese (Goodreads Author)", new DateTime(1921, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(64) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 563, "Martin Heidegger", new DateTime(1932, 2, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(71) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 564, "Shannon Hale (Goodreads Author)", new DateTime(2010, 7, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(74) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 565, "Dodie Smith", new DateTime(1941, 7, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(77) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 566, "Randy Pausch", new DateTime(1884, 9, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(82) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 568, "\"Tennessee Williams", new DateTime(1970, 12, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(87) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 570, "Alexandra Bracken (Goodreads Author)", new DateTime(1910, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(94) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 572, "Michael Cunningham (Goodreads Author)", new DateTime(1940, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(99) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 574, "Melissa Marr (Goodreads Author)", new DateTime(1905, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(107) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 575, "Cecelia Ahern", new DateTime(1955, 8, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(110) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 581, "Peter S. Beagle (Goodreads Author)", new DateTime(2008, 8, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(127) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 584, "\"Dan Simmons", new DateTime(2008, 1, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(137) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 588, "\"Lemony Snicket (Goodreads Author)", new DateTime(1978, 11, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(150) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 589, "\"Edmond Rostand", new DateTime(1889, 1, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(152) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 590, "Orson Scott Card", new DateTime(1984, 1, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(158) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 591, "Ellen Raskin", new DateTime(1969, 12, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(160) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 592, "Jhumpa Lahiri", new DateTime(2008, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(163) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 594, "E. Lockhart (Goodreads Author)", new DateTime(2013, 9, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(170) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 596, "Robert Penn Warren", new DateTime(1950, 1, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(175) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 598, " Poetry and Prose\"", new DateTime(1894, 11, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(184) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 600, "W. Bruce Cameron (Goodreads Author)", new DateTime(1963, 3, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(189) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 601, "Leif Enger", new DateTime(1988, 9, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(191) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 602, "Lionel Shriver (Goodreads Author)", new DateTime(1966, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(196) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 604, "Patrick Ness", new DateTime(1905, 8, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(201) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 605, "Iain Banks", new DateTime(1904, 1, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(204) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 606, "\"Sun Tzu", new DateTime(2014, 9, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(397) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 607, "Maria V. Snyder (Goodreads Author)", new DateTime(1885, 9, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(402) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 608, "\"Edith Hamilton", new DateTime(2007, 7, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(405) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 610, "\"Aleksandr Solzhenitsyn", new DateTime(1965, 9, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(413) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 611, "Rhonda Byrne", new DateTime(1909, 2, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(416) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 613, "\"Tim LaHaye", new DateTime(1965, 7, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(420) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 614, "Jasper Fforde (Goodreads Author)", new DateTime(1902, 2, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(426) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 620, "Kim Edwards (Goodreads Author)", new DateTime(1922, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(443) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 622, "Karen Marie Moning (Goodreads Author)", new DateTime(1953, 8, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(451) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 623, "Michael Grant (Goodreads Author)", new DateTime(1917, 4, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(453) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 624, "Richard Wright", new DateTime(1999, 10, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(456) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 625, "Laura Hillenbrand", new DateTime(1954, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(458) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 627, "Michael Shaara", new DateTime(1910, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(466) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 631, "Nicole Krauss", new DateTime(1969, 3, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(478) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 632, "\"Italo Calvino", new DateTime(1961, 9, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(481) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 635, "Robert Ludlum", new DateTime(1902, 1, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(491) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 637, "A.S. Byatt", new DateTime(2011, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(496) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 638, "Thomas Pynchon", new DateTime(1910, 10, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(501) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 639, "Howard Zinn", new DateTime(1918, 12, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(504) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 640, "Richard Matheson", new DateTime(1938, 8, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(506) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 641, "Stephen Hawking", new DateTime(1936, 3, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(509) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 642, "\"Elie Wiesel", new DateTime(1906, 2, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(514) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 643, "\"Sophocles", new DateTime(1980, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(517) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 645, "Tamora Pierce (Goodreads Author)", new DateTime(2004, 3, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(522) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 646, "Andre Dubus III", new DateTime(1931, 8, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(527) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 647, "Dean Koontz (Goodreads Author)", new DateTime(2010, 12, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(530) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 648, "David McCullough", new DateTime(1964, 7, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(532) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 649, "Janet Evanovich (Goodreads Author)", new DateTime(1949, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(535) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 650, "Ursula K. Le Guin", new DateTime(1988, 6, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(540) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 651, "Madeline Miller (Goodreads Author)", new DateTime(2010, 12, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(542) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 654, "\"Shirley Jackson", new DateTime(1978, 2, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(552) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 656, "Robin Hobb (Goodreads Author)", new DateTime(1899, 3, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(557) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 657, "Jandy Nelson (Goodreads Author)", new DateTime(1948, 3, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(560) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 659, "\"Clement C. Moore", new DateTime(1937, 12, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(567) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 660, "Charlotte Perkins Gilman", new DateTime(1999, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(570) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 661, "John Fowles", new DateTime(1895, 10, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(572) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 667, "Terry Pratchett", new DateTime(1899, 1, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(592) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 668, "Dave Eggers", new DateTime(1958, 8, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(595) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 670, "\"Robyn Mundell (Goodreads Author)", new DateTime(1977, 8, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(651) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 671, "Scott Lynch (Goodreads Author)", new DateTime(1986, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(654) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 672, "Tom Robbins", new DateTime(1940, 7, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 673, "Henri Charrière", new DateTime(1988, 11, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(659) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 675, "Louis de Bernières", new DateTime(1887, 2, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(667) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 676, " But Then I'd Have to Kill You\"", new DateTime(1900, 6, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(669) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 678, "\"Diana Gabaldon (Goodreads Author)", new DateTime(1940, 10, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(677) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 679, "\"Thomas Mann", new DateTime(2013, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(679) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 680, "Ann Brashares", new DateTime(1959, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(682) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 681, "\"Allen Ginsberg", new DateTime(1928, 11, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(685) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 682, "E.L. Konigsburg", new DateTime(1941, 9, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 683, "\"Muriel Barbery", new DateTime(1935, 8, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(692) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 684, "Joseph Smith Jr. (Translator)", new DateTime(1946, 12, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 686, "Carl Sagan", new DateTime(1910, 10, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(702) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 687, "Raymond Chandler", new DateTime(1997, 6, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(705) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 688, "\"Jacob Grimm", new DateTime(1980, 8, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(707) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 692, "Dee Brown", new DateTime(1912, 12, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(720) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 694, "\"Joseph Campbell", new DateTime(1927, 4, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(727) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 696, "Alexander McCall Smith (Goodreads Author)", new DateTime(2010, 6, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(732) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 697, "Erich Segal", new DateTime(1892, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(735) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 698, "Rachel Caine (Goodreads Author)", new DateTime(1938, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(740) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 699, "\"Jules Verne", new DateTime(1907, 3, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(743) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 700, "Sophie Kinsella (Goodreads Author)", new DateTime(1996, 6, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(745) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 703, "J.A. Redmerski (Goodreads Author)", new DateTime(1911, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(755) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 704, "Suzanne Boisvert (Goodreads Author)", new DateTime(2011, 10, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(758) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 706, "\"Walter Scott", new DateTime(1901, 4, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(765) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 709, "\"Steven D. Levitt", new DateTime(1912, 5, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(773) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 710, "Kristin Hannah (Goodreads Author)", new DateTime(1912, 1, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(778) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 712, "\"Virgil", new DateTime(1977, 6, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(783) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 715, "Sharon Creech", new DateTime(1980, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(793) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 716, "Wallace Stegner", new DateTime(2008, 3, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(795) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 718, "Rosamunde Pilcher", new DateTime(1973, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(803) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 719, "Jonathan Franzen", new DateTime(2006, 7, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(805) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 721, "Ayn Rand", new DateTime(1905, 7, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(811) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 722, "Elizabeth George Speare", new DateTime(1883, 6, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(816) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 725, "Michael Pollan (Goodreads Author)", new DateTime(1974, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(823) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 726, "\"Walter M. Miller Jr.", new DateTime(1933, 4, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(828) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 727, "\"Rudyard Kipling", new DateTime(2002, 6, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(831) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 728, "\"Jorge Luis Borges", new DateTime(1949, 4, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(833) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 729, "Kerstin Gier", new DateTime(2007, 11, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(836) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 730, "David Nicholls", new DateTime(1982, 8, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(841) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 731, "Helen Keller", new DateTime(1950, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(843) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 735, "Katherine Dunn", new DateTime(1892, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(902) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 737, "\"Henry James", new DateTime(1970, 4, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(907) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 738, "Kate DiCamillo (Goodreads Author)", new DateTime(1971, 7, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 740, "Dale Carnegie", new DateTime(1888, 8, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(918) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 744, "Pierce Brown (Goodreads Author)", new DateTime(1935, 11, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(931) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 748, "Jenny Han (Goodreads Author)", new DateTime(1892, 12, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(943) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 751, "Paula Hawkins (Goodreads Author)", new DateTime(1976, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(954) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 752, " Two Fish", new DateTime(2004, 11, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(957) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 755, "\"Ned Vizzini", new DateTime(1974, 8, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(967) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 760, "Steve Snyder (Goodreads Author)", new DateTime(1980, 3, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(981) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 761, "\"Johann Wolfgang von Goethe", new DateTime(1895, 4, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(984) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 762, "Lisa Genova (Goodreads Author)", new DateTime(1922, 2, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(989) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 765, "\"Koushun Takami", new DateTime(1911, 9, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(996) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 767, "\"P.L. Travers", new DateTime(1906, 4, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1004) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 770, "Anne Morrow Lindbergh", new DateTime(1932, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1014) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 772, "Richard Yates", new DateTime(1970, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1018) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 775, "Brian Selznick", new DateTime(2016, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1028) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 779, "Olive Ann Burns", new DateTime(1896, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1041) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 780, "\"Jean-Paul Sartre", new DateTime(1964, 9, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1043) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 781, "\"Justin Cronin (Goodreads Author)", new DateTime(1917, 10, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1046) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 785, "\"Robert Frost", new DateTime(1902, 1, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1058) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 786, "Edith Wharton", new DateTime(1897, 1, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1063) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 787, "Leon Uris", new DateTime(1928, 8, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1066) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 790, "\"Stephen R. Covey", new DateTime(1886, 8, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1076) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 791, "Andrew Davidson (Goodreads Author)", new DateTime(1890, 8, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1079) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 792, "Winston Groom", new DateTime(1908, 7, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1081) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 793, "Mary Doria Russell (Goodreads Author)", new DateTime(1968, 1, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1084) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 794, "\"Markus Zusak (Goodreads Author)", new DateTime(1973, 10, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1089) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 795, "Angie Thomas (Goodreads Author)", new DateTime(1947, 10, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1091) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 797, "Sylvain Reynard (Goodreads Author)", new DateTime(1922, 12, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1096) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 801, "Vladimir Nabokov", new DateTime(1938, 6, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1163) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 803, "Juliet Marillier (Goodreads Author)", new DateTime(2016, 8, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1170) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 804, "Kate Morton (Goodreads Author)", new DateTime(1953, 8, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1173) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 805, "Richard Bach (Goodreads Author)", new DateTime(1915, 10, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1175) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 806, "Jung Chang", new DateTime(1919, 5, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1181) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 807, "Robert James Waller", new DateTime(1980, 1, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1183) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 808, "Jeffrey Archer", new DateTime(1986, 3, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1186) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 811, " Absalom!\"", new DateTime(1917, 4, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1196) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 812, "Dennis Lehane (Goodreads Author)", new DateTime(1939, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1198) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 816, "James Frey", new DateTime(2016, 7, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1211) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 822, "Laurell K. Hamilton (Goodreads Author)", new DateTime(1986, 6, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1231) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 823, "Jeanne DuPrau", new DateTime(1920, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1233) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 825, "Jeannette Walls", new DateTime(1912, 5, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1238) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 827, "\"Becky Albertalli (Goodreads Author)", new DateTime(1934, 12, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1246) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 828, "Catherine Marshall", new DateTime(1893, 3, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1248) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 830, "Jonathan Stroud (Goodreads Author)", new DateTime(1932, 8, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1256) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 831, "Ellen Hopkins (Goodreads Author)", new DateTime(1908, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1259) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 832, "Mark Z. Danielewski (Goodreads Author)", new DateTime(1957, 2, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1261) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 833, "Tom Clancy", new DateTime(1899, 5, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1263) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 838, "\"Hubert SelJr.", new DateTime(2015, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1281) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 839, "Mark Twain", new DateTime(1942, 2, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1284) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 840, "Irving Stone", new DateTime(1940, 5, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1286) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 842, " Charing Cross Road\"", new DateTime(1972, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1294) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 843, " #1-3)\"", new DateTime(1993, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1296) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 844, "David Wroblewski", new DateTime(1888, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1299) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 845, "Charles Bukowski", new DateTime(1911, 1, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1301) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 846, "Richard Llewellyn", new DateTime(1997, 2, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1306) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 847, "Tom Wolfe", new DateTime(1955, 2, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1309) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 848, "Robin McKinley", new DateTime(1890, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1311) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 849, "Billie Letts", new DateTime(1932, 11, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1314) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 851, "\"William S. Burroughs", new DateTime(1969, 11, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1321) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 854, " No. 1\"", new DateTime(1948, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1332) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 856, " Will Grayson\"", new DateTime(1987, 4, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1336) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 857, "\"Louis-Ferdinand Céline", new DateTime(1963, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1339) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 858, "Nevil Shute", new DateTime(1966, 12, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1344) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 859, "S.C. Stephens (Goodreads Author)", new DateTime(1984, 3, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1347) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 860, "\"Richard Bachman (Pseudonym)", new DateTime(1950, 7, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1349) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 863, "Brandon Mull (Goodreads Author)", new DateTime(1933, 8, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1405) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 868, "Tammara Webber (Goodreads Author)", new DateTime(1887, 5, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1420) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 870, "\"Yevgeny Zamyatin", new DateTime(1893, 7, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1428) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 872, "L.J. Smith (Goodreads Author)", new DateTime(1949, 8, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1433) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 873, " Hear My Cry\"", new DateTime(1941, 7, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1435) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 884, "Gary Chapman", new DateTime(1922, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1470) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 885, "Yuval Noah Harari", new DateTime(1899, 3, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1473) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 886, "\"Marcus Aurelius", new DateTime(1948, 8, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1478) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 889, "J.M. Coetzee", new DateTime(1977, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1485) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 891, "Aprilynne Pike", new DateTime(1927, 3, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1493) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 893, "Junot Díaz", new DateTime(1952, 3, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1498) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 895, "George Eliot", new DateTime(1948, 12, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1506) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 896, "\"Samuel Taylor Coleridge", new DateTime(1933, 7, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1508) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 898, "\"Krishna-Dwaipayana Vyasa", new DateTime(1932, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1516) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 899, " 1881-1901", new DateTime(1969, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1518) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 901, "David Levithan (Goodreads Author)", new DateTime(1903, 3, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1523) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 902, "Nicholas Evans", new DateTime(1993, 5, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1528) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 903, "Dashiell Hammett", new DateTime(1978, 7, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1530) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 904, "\"Robert Musil", new DateTime(1950, 9, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1533) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 907, "Colleen Houck (Goodreads Author)", new DateTime(1928, 3, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1543) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 908, "Brian Jacques", new DateTime(1944, 1, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1545) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 909, "\"Friedrich Nietzsche", new DateTime(1931, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1548) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 913, "W. Somerset Maugham", new DateTime(1889, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1560) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 914, "Erin Hunter", new DateTime(2015, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1566) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 915, "John Flanagan", new DateTime(1913, 7, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1568) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 917, "André Aciman (Goodreads Author)", new DateTime(1972, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1573) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 918, "Rachel Hawkins (Goodreads Author)", new DateTime(1997, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1578) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 919, "Cynthia Hand (Goodreads Author)", new DateTime(1986, 9, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1580) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 923, "Don DeLillo", new DateTime(1894, 1, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1593) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 925, "\"Munro Leaf", new DateTime(1956, 4, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1644) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 926, "\"E.M. Forster", new DateTime(1944, 12, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1650) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 927, "Kim Harrison (Goodreads Author)", new DateTime(1989, 12, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1652) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 928, "Alex Flinn (Goodreads Author)", new DateTime(1901, 3, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1655) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 929, "M.M. Kaye", new DateTime(1984, 10, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 933, " God is the Cure: A True Story of Abuse", new DateTime(1937, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 936, "Melissa de la Cruz (Goodreads Author)", new DateTime(1976, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1680) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 939, "\"Henrik Ibsen", new DateTime(1938, 12, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 942, "\"Peter Høeg", new DateTime(1972, 12, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1701) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 943, "Lauren Weisberger", new DateTime(1985, 10, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1703) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 945, "Sabaa Tahir (Goodreads Author)", new DateTime(1992, 7, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 947, "Hanya Yanagihara (Goodreads Author)", new DateTime(2003, 10, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1716) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 948, "William Blake", new DateTime(1970, 10, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1718) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 952, "John Bunyan", new DateTime(1986, 2, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1731) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 953, "Augusten Burroughs (Goodreads Author)", new DateTime(2001, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 954, "Tabitha Suzuma (Goodreads Author)", new DateTime(1886, 10, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1738) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 955, "C. Toni Graham (Goodreads Author)", new DateTime(2010, 9, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1741) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 959, "James Fenimore Cooper", new DateTime(1888, 11, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1754) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 960, "Beth Revis (Goodreads Author)", new DateTime(1915, 11, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1756) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 961, "Gary Paulsen", new DateTime(1893, 3, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1758) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 963, "Sebastian Faulks", new DateTime(1974, 12, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1766) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 965, "\"Traci Medford-Rosow (Goodreads Author)", new DateTime(1993, 9, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1771) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 966, " Escher", new DateTime(1991, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1777) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 967, "John Ajvide Lindqvist", new DateTime(1990, 12, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1779) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 968, "Andrea Cremer (Goodreads Author)", new DateTime(1898, 10, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1781) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 969, "Jim Butcher (Goodreads Author)", new DateTime(1991, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1784) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 971, "Jacqueline Susann", new DateTime(2005, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1791) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 974, "Ben Peller (Goodreads Author)", new DateTime(2014, 11, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1802) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 975, "\"Alexander Pushkin", new DateTime(1921, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1804) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 976, "Claudia Gray (Goodreads Author)", new DateTime(1895, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1807) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 977, "Ruta Sepetys (Goodreads Author)", new DateTime(1947, 8, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1809) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 979, "Raymond E. Feist", new DateTime(1921, 12, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1817) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 982, "Sarah Waters", new DateTime(2012, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1827) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 983, "Kenneth Thomas (Goodreads Author)", new DateTime(1977, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1829) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 984, "Samantha Young (Goodreads Author)", new DateTime(1991, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1832) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 986, "Patricia Briggs", new DateTime(2000, 4, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1839) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 987, "Robert R. McCammon", new DateTime(1986, 8, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1842) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 989, "\"Vincent Bugliosi", new DateTime(1897, 10, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1892) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 990, "Herman Wouk", new DateTime(1962, 9, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1898) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 992, "\"Norman Maclean", new DateTime(1958, 10, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1903) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 993, "\"Jon Scieszka", new DateTime(1953, 3, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 994, "Trenton Lee Stewart (Goodreads Author)", new DateTime(1972, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1911) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 996, "\"Pablo Neruda", new DateTime(1916, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1916) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1001, "\"H.P. Lovecraft", new DateTime(1889, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1931) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1003, "V.E. Schwab", new DateTime(1993, 6, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1939) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1004, " Everything\"", new DateTime(1958, 10, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1941) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1006, "Frank E. Peretti", new DateTime(1986, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1949) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1007, " Dog. Go!\"", new DateTime(2012, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1951) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1008, "Alice Hoffman (Goodreads Author)", new DateTime(1944, 1, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1954) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1010, " the Universe and Everything\"", new DateTime(2014, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1961) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1012, "\"Henry Miller", new DateTime(1976, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1966) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1014, "\"Sherman Alexie", new DateTime(1982, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1974) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1016, " tome 1: Mon père saigne l'histoire\"", new DateTime(1954, 4, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1979) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1019, "Brent Weeks (Goodreads Author)", new DateTime(1998, 6, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1989) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1020, "\"Günter Grass", new DateTime(1958, 6, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1991) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1022, "Ann-Marie MacDonald", new DateTime(1960, 9, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(1999) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1024, "Rebecca Skloot (Goodreads Author)", new DateTime(1958, 2, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2004) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1025, "Mia Sheridan (Goodreads Author)", new DateTime(1933, 10, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2006) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1026, "Michael Ende", new DateTime(1971, 10, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2191) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1027, "Christopher Moore (Goodreads Author)", new DateTime(1945, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2195) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1029, "Elif Shafak (Goodreads Author)", new DateTime(1977, 10, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2200) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1030, "Amanda Hocking (Goodreads Author)", new DateTime(1928, 6, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2206) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1032, "Jacqueline Carey (Goodreads Author)", new DateTime(1884, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2211) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1033, "Ursula Hegi", new DateTime(1898, 11, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2214) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1034, "Sergio Cobo", new DateTime(1955, 9, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2219) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1035, " A Husband's Tale\"", new DateTime(1917, 6, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2222) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1036, "Jules Verne", new DateTime(1953, 8, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2224) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1038, "\"Marjane Satrapi", new DateTime(1948, 1, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2232) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1039, "\"Nikos Kazantzakis", new DateTime(1954, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2234) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1040, "Henry James", new DateTime(1925, 1, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2237) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1044, "Peter Benchley", new DateTime(1979, 2, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2249) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1045, " Sometimes Awesome", new DateTime(1952, 8, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2252) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1046, "Josephine Angelini (Goodreads Author)", new DateTime(1992, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2257) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1047, "Malcolm Gladwell", new DateTime(2017, 1, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2259) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1050, "\"Philip K. Dick", new DateTime(1969, 4, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2269) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1051, "\"Giovanni Boccaccio", new DateTime(1896, 8, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2272) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1052, "James McBride (Goodreads Author)", new DateTime(1992, 12, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2274) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1053, "\"Aldous Huxley", new DateTime(1972, 3, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2324) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1054, "S.J. Watson (Goodreads Author)", new DateTime(2001, 2, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2331) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1055, "\"Émile Zola", new DateTime(1923, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2333) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1059, "\"Kate DiCamillo (Goodreads Author)", new DateTime(1946, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2346) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1061, "\"Murasaki Shikibu", new DateTime(1899, 10, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2351) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1063, "Vera Jane Cook (Goodreads Author)", new DateTime(1887, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2358) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1064, "Richard Russo (Goodreads Author)", new DateTime(1974, 6, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2361) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1067, "Abbi Glines (Goodreads Author)", new DateTime(1969, 2, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2371) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1068, "Laurie R. King (Goodreads Author)", new DateTime(1974, 8, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2374) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1069, "\"Graham Greene", new DateTime(1891, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2376) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1071, "Geraldine Brooks (Goodreads Author)", new DateTime(1907, 12, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2384) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1072, "Louise Fitzhugh", new DateTime(1956, 12, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2386) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1073, "Anne Tyler (Goodreads Author)", new DateTime(1910, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2389) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1074, "\"Madeleine L'Engle", new DateTime(1967, 11, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2394) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1075, "Stephen Crane", new DateTime(1885, 11, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2396) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1076, "Kenneth Jarrett Singleton", new DateTime(1894, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2399) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1077, "John Wyndham", new DateTime(1989, 11, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2401) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1079, "\"Edgar Allan Poe", new DateTime(1951, 7, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2409) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1081, "Joe Abercrombie", new DateTime(1935, 11, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2414) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1084, "\"Frank Miller", new DateTime(1920, 9, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2424) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1086, "Melina Marchetta (Goodreads Author)", new DateTime(1967, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2432) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1088, "\"Julio Cortázar", new DateTime(1888, 1, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2437) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1090, "\"Stendhal", new DateTime(1994, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2444) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1091, "Sara Shepard (Goodreads Author)", new DateTime(1930, 8, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2447) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1092, "Veronica Rossi (Goodreads Author)", new DateTime(1941, 9, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2449) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1093, "Fernando Pessoa", new DateTime(1935, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2452) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1095, "\"John Williams", new DateTime(2014, 10, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2460) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1097, " Rosie\"", new DateTime(1896, 2, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2465) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1099, " No. 2\"", new DateTime(1927, 7, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2472) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1100, "James Redfield", new DateTime(1974, 12, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2474) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1101, "James A. Michener", new DateTime(2000, 3, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2477) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1102, "\"Mervyn Peake", new DateTime(1890, 12, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2482) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1106, "Dorothy Allison", new DateTime(1990, 5, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2494) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1107, "Michael Scott (Goodreads Author)", new DateTime(1968, 7, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2497) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1108, "Alexandra Adornetto", new DateTime(1953, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2499) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1109, "Matthew Quick (Goodreads Author)", new DateTime(1957, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2503) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1110, "Wendy Higgins (Goodreads Author)", new DateTime(1908, 2, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2508) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1112, "John le Carré", new DateTime(1999, 5, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2513) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1114, "\"Charles Baudelaire", new DateTime(1913, 3, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2521) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1115, "\"Marguerite Yourcenar", new DateTime(1964, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2524) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1116, "Zadie Smith", new DateTime(1949, 1, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2526) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1121, "Sarah Addison Allen (Goodreads Author)", new DateTime(1896, 3, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2588) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1123, "Ammar Habib (Goodreads Author)", new DateTime(1957, 10, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2596) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1124, "Karen Glista", new DateTime(1955, 2, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2598) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1128, "Ilona Andrews (Goodreads Author)", new DateTime(1920, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2611) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1130, " #1)\"", new DateTime(1908, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2619) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1133, "Meg Cabot (Goodreads Author)", new DateTime(1968, 2, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2626) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1134, "\"Naguib Mahfouz", new DateTime(1910, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2632) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1135, "Trevor Alan Foris (Goodreads Author)", new DateTime(1915, 5, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2634) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1138, "M. Robinson", new DateTime(1919, 8, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2644) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1139, " #2)\"", new DateTime(1961, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2647) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1140, "Fred Misurella (Goodreads Author)", new DateTime(1894, 3, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2649) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1141, "Ally Carter (Goodreads Author)", new DateTime(1929, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2652) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1142, "\"Anne Brontë", new DateTime(1905, 5, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1143, "J.D. Robb (Goodreads Author)", new DateTime(1963, 6, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2659) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1147, "\"Ovid", new DateTime(1989, 11, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2672) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1148, " Horrible", new DateTime(1946, 9, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2674) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1149, "Eckhart Tolle", new DateTime(1916, 5, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2677) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1150, "David Benioff", new DateTime(1958, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2682) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1151, "Lucy Christopher (Goodreads Author)", new DateTime(2012, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2685) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1153, "Rudyard Kipling", new DateTime(1931, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1154, "Fred Gipson", new DateTime(1928, 11, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1155, "\"Henryk Sienkiewicz", new DateTime(1930, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2697) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1156, "Anne Willow (Goodreads Author)", new DateTime(2000, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2700) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1160, "Emily Giffin (Goodreads Author)", new DateTime(1906, 8, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2712) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1161, "C.C. Hunter (Goodreads Author)", new DateTime(1894, 1, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2715) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1162, "\"Fredrik Backman (Goodreads Author)", new DateTime(1911, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2720) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1164, "Marilynne Robinson", new DateTime(1992, 11, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2725) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1166, "E.L. Doctorow", new DateTime(1994, 9, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2732) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1167, "China Miéville (Goodreads Author)", new DateTime(1980, 8, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2735) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1170, " A Young Lady's Illustrated Primer\"", new DateTime(1895, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2745) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1171, "\"Hans Christian Andersen", new DateTime(1884, 7, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2747) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1172, " Gentleman\"", new DateTime(1900, 7, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2750) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1178, "\"Amie Kaufman (Goodreads Author)", new DateTime(1963, 7, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2769) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1179, "Jerome K. Jerome", new DateTime(2005, 1, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2772) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1181, "\"Theodore Dreiser", new DateTime(1953, 4, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2825) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1185, "\"Newt Scamander (Pseudonym)", new DateTime(1973, 9, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2839) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1186, "Nancy Farmer (Goodreads Author)", new DateTime(1929, 1, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2844) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1189, "\"Arthur Koestler", new DateTime(1892, 6, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2851) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1190, "John Howard Griffin", new DateTime(1885, 1, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2856) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1191, "\"Frank B. Gilbreth Jr.", new DateTime(1919, 2, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2859) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1193, "Deborah Leblanc (Goodreads Author)", new DateTime(1947, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2863) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1194, "Cornelia Funke (Goodreads Author)", new DateTime(1919, 9, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2869) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1196, "\"Laura Joffe Numeroff (Goodreads Author)", new DateTime(1888, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2873) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1197, "Jeff Kinney (Goodreads Author)", new DateTime(2002, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2876) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1198, "Aravind Adiga", new DateTime(1897, 4, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2881) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1200, "Sharon M. Draper (Goodreads Author)", new DateTime(1895, 11, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2886) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1201, "John Hersey", new DateTime(2004, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2889) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1203, "Jonas Jonasson", new DateTime(1933, 7, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2897) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1204, "\"John Steinbeck", new DateTime(1934, 2, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2899) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1205, "Margaret Peterson Haddix", new DateTime(1952, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2902) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1207, "\"Stanisław Lem", new DateTime(2005, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2909) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1209, "Wilbur Smith", new DateTime(1926, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2914) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1210, "David Eddings", new DateTime(2010, 11, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2919) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1213, "Vincent Panettiere (Goodreads Author)", new DateTime(1909, 12, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2927) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1214, "Ishmael Beah", new DateTime(1906, 2, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2932) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1216, "Clive Barker (Goodreads Author)", new DateTime(1968, 3, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2937) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1217, "Katie McGarry (Goodreads Author)", new DateTime(2012, 1, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2940) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1218, "Muriel Spark", new DateTime(1954, 6, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2945) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1219, "Peter V. Brett (Goodreads Author)", new DateTime(1904, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2947) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1224, "Rupi Kaur (Goodreads Author)", new DateTime(2004, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2962) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1229, "John Scalzi (Goodreads Author)", new DateTime(2006, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2977) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1232, "Carrie Jones (Goodreads Author)", new DateTime(1933, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2987) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1233, "Mary Stewart", new DateTime(1940, 5, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2990) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1235, "\"Maggie Stiefvater (Goodreads Author)", new DateTime(1905, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(2997) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1236, "Holly Black (Goodreads Author)", new DateTime(1900, 7, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3000) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1237, "\"Spencer Johnson", new DateTime(1993, 12, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3002) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1238, "Joe Haldeman", new DateTime(1903, 7, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3007) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1239, "\"Juan Gomez-Jurado (Goodreads Author)", new DateTime(1909, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3010) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1240, "Jerzy Kosiński", new DateTime(1917, 9, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3012) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1241, "Susan Beth Pfeffer", new DateTime(1954, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3014) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1244, "\"Aesop", new DateTime(1952, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3073) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1247, "Flannery O'Connor", new DateTime(1961, 10, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3085) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1248, "Sidney Sheldon", new DateTime(2006, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3087) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1249, "Katy Evans (Goodreads Author)", new DateTime(1897, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3090) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1251, "Elizabeth Chandler", new DateTime(2006, 1, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3098) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1253, "Delia Owens (Goodreads Author)", new DateTime(1971, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3102) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1254, "Terry Brooks (Goodreads Author)", new DateTime(1887, 5, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3107) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1259, "Heath Sommer (Goodreads Author)", new DateTime(1911, 5, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3123) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1261, "Lee Child (Goodreads Author)", new DateTime(1914, 2, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3128) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1263, "\"Francine Rivers (Goodreads Author)", new DateTime(1925, 5, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3135) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1272, "\"Knut Hamsun", new DateTime(1913, 4, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3162) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1280, "D.S. Smith (Goodreads Author)", new DateTime(1934, 1, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3187) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1281, "\"Flann O'Brien", new DateTime(1987, 5, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3190) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1282, "Tarryn Fisher (Goodreads Author)", new DateTime(1898, 9, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3195) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1283, "\"Ivan Turgenev", new DateTime(1976, 3, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3197) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1284, "\"Derek Landy", new DateTime(1917, 7, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3200) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1286, "Vikram Seth", new DateTime(2004, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3207) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1287, "Frederick Forsyth", new DateTime(1966, 11, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3210) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1288, "Susan Cain (Goodreads Author)", new DateTime(1896, 2, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3212) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1289, "Misty Mount (Goodreads Author)", new DateTime(1972, 11, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3215) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1290, "\"Todd Burpo", new DateTime(1936, 10, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3220) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1291, "Chris Bohjalian (Goodreads Author)", new DateTime(1982, 7, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3223) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1292, " Eldest & Brisingr\"", new DateTime(1887, 2, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3225) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1293, "\"Judi Barrett", new DateTime(1929, 7, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3228) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1294, " Interrupted\"", new DateTime(1957, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3233) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1296, "\"Paul Auster", new DateTime(2016, 3, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3238) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1297, "Hilary Mantel (Goodreads Author)", new DateTime(1987, 3, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3240) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1298, "Wendelin Van Draanen (Goodreads Author)", new DateTime(1929, 1, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3245) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1301, "Jennifer A. Nielsen (Goodreads Author)", new DateTime(1932, 9, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3253) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1302, "Donna Woolfolk Cross (Goodreads Author)", new DateTime(1940, 11, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3258) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1303, " or The Star-Gazer\"", new DateTime(1982, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3260) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1304, "Omar Farhad (Goodreads Author)", new DateTime(1997, 11, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3263) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1305, "\"Napoleon Hill", new DateTime(1949, 6, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3265) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1306, "H.G. Wells", new DateTime(1888, 10, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3270) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1307, "Alfred Lansing", new DateTime(1889, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3273) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1309, "Malorie Blackman (Goodreads Author)", new DateTime(1921, 11, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3324) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1310, "Harlan Coben (Goodreads Author)", new DateTime(1885, 5, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3330) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1311, "\"Dalai Lama XIV", new DateTime(1945, 7, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3332) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1312, "John Connolly (Goodreads Author)", new DateTime(1902, 9, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3334) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1313, "\"Pierre Choderlos de Laclos", new DateTime(1993, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3337) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1315, "John Gardner", new DateTime(1980, 3, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3345) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1316, " When the War Began\"", new DateTime(1926, 10, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3347) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1317, "David James Duncan", new DateTime(1888, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3350) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1318, "Alice Clayton (Goodreads Author)", new DateTime(1937, 1, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3355) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1319, "Afroz Alam (Goodreads Author)", new DateTime(1963, 11, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3357) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1320, "Lawrence Hill", new DateTime(2006, 5, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3360) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1321, "\"Nikolai Gogol", new DateTime(1947, 10, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3362) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1322, "Kirsty Moseley (Goodreads Author)", new DateTime(1982, 7, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3367) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1324, "\"Kennilworthy Whisp (Pseudonym)", new DateTime(1995, 7, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3372) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1329, "Kirsten Fullmer (Goodreads Author)", new DateTime(1960, 5, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3388) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1330, "\"Andrzej Sapkowski", new DateTime(1896, 10, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3393) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1331, "Michael G. Kramer (Goodreads Author)", new DateTime(1929, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3396) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1333, "\"John Tiffany (Adaptation)", new DateTime(1913, 4, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3401) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1335, "Robert Galbraith", new DateTime(1945, 9, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3409) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1337, "Founding Fathers", new DateTime(1928, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3414) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1339, "Trudi Canavan", new DateTime(1992, 3, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3421) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1340, "Amy Plum (Goodreads Author)", new DateTime(1934, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3424) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1341, "Anne Lamott (Goodreads Author)", new DateTime(1999, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3426) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1344, " Mr. Feynman!\"\": Adventures of a Curious Character\"", new DateTime(1957, 4, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3437) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1350, " Tailor", new DateTime(1925, 2, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3457) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1351, "\"Robert Jordan", new DateTime(1903, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3459) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1352, "Tara Westover (Goodreads Author)", new DateTime(1916, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3462) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1353, "\"Michel Guyon (Goodreads Author)", new DateTime(1883, 12, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3464) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1356, "Robert C. O'Brien", new DateTime(1995, 5, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3474) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1357, "Yuehai Xiao", new DateTime(1991, 7, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3477) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1358, "Liane Moriarty (Goodreads Author)", new DateTime(2008, 4, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3482) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1360, "\"Roger Zelazny", new DateTime(1930, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3487) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1364, "Shannon Messenger (Goodreads Author)", new DateTime(2014, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3500) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1366, "C.J. Roberts (Goodreads Author)", new DateTime(1970, 1, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3507) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1368, "Philip Roth", new DateTime(1937, 9, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3512) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1371, "Flora Rheta Schreiber", new DateTime(2002, 7, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3522) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1372, "M.L. Stedman (Goodreads Author)", new DateTime(1958, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3583) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1373, "Nalini Singh (Goodreads Author)", new DateTime(1884, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3586) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1374, "Alex Garland", new DateTime(2010, 11, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3591) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1375, "Sharon Kay Penman (Goodreads Author)", new DateTime(1930, 11, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3594) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1376, "Graeme Simsion (Goodreads Author)", new DateTime(1942, 2, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3596) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1378, "Carson McCullers", new DateTime(1979, 1, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3604) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1379, "Isaac Marion (Goodreads Author)", new DateTime(2002, 7, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3607) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1381, "\"Carl Sagan", new DateTime(1969, 2, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3612) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1382, "Lawrence Durrell", new DateTime(1906, 2, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3617) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1385, " \"\"The Lost Boy\"\"", new DateTime(1927, 8, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3624) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1386, "\"Ammar Habib (Goodreads Author)", new DateTime(2011, 5, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3629) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1388, "John Jakes", new DateTime(1995, 4, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3634) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1389, "Tracey Garvis Graves (Goodreads Author)", new DateTime(1940, 12, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3637) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1390, "\"David Fishelson (Adapter)", new DateTime(1981, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3642) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1395, "\"D.H. Lawrence", new DateTime(1903, 1, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1398, "\"Juan Rulfo", new DateTime(2003, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3667) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1399, "\"Flannery O'Connor", new DateTime(1963, 10, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1400, "\"Connie Willis", new DateTime(1959, 1, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3672) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1405, "T. Rafael Cimino (Goodreads Author)", new DateTime(1984, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3688) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1407, "Nelson Mandela", new DateTime(1965, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1408, "Rohith S. Katbamna (Goodreads Author)", new DateTime(1886, 6, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3698) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1410, "Cheryl Strayed (Goodreads Author)", new DateTime(1896, 6, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3705) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1411, "Simon Okill (Goodreads Author)", new DateTime(1991, 11, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3707) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1413, "Vanessa Diffenbaugh (Goodreads Author)", new DateTime(1929, 8, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3712) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1416, "Karen Prince (Goodreads Author)", new DateTime(1998, 5, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3722) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1419, "\"Chris Colfer", new DateTime(1914, 2, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3732) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1420, "Kiersten White (Goodreads Author)", new DateTime(1973, 8, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3735) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1421, " No. 3\"", new DateTime(2002, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3737) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1422, "Tess Gerritsen (Goodreads Author)", new DateTime(1936, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3743) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1423, "Rick Warren", new DateTime(1945, 4, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3745) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1425, "Cinda Williams Chima (Goodreads Author)", new DateTime(1885, 11, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3750) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1426, "\"Malala Yousafzai", new DateTime(2005, 12, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3755) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1427, "\"W.B. Yeats", new DateTime(2012, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3758) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1428, "\"Katherine Neville", new DateTime(1972, 10, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3760) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1430, "\"Jean-Dominique Bauby", new DateTime(1909, 7, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3768) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1432, "Stephanie Garber (Goodreads Author)", new DateTime(1947, 11, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3772) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1433, "\"رضوى عاشور", new DateTime(1907, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3775) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1434, "Sophie Jordan (Goodreads Author)", new DateTime(2010, 12, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3780) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1435, " Vegetable", new DateTime(1997, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3782) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1436, "Guy Gavriel Kay (Goodreads Author)", new DateTime(1985, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3817) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1437, "\"Roberto Bolaño", new DateTime(1985, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3819) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1438, "Tina Fey", new DateTime(1894, 2, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3824) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1442, "Jeffery Deaver (Goodreads Author)", new DateTime(1952, 11, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3837) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1443, "\"Robert Shea", new DateTime(1917, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3839) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1449, "Gena Showalter (Goodreads Author)", new DateTime(1958, 6, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3857) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1450, " White & Royal Blue\"", new DateTime(1898, 7, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3862) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1451, "Barbara W. Tuchman", new DateTime(1941, 3, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3865) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1452, "Chimamanda Ngozi Adichie", new DateTime(1942, 12, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3867) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1453, "\"Jason Latshaw (Goodreads Author)", new DateTime(1928, 9, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3870) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1454, " 506th Regiment", new DateTime(2010, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3875) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1455, "Anne McCaffrey", new DateTime(1997, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3878) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1456, "\"Rachel Carson", new DateTime(2014, 4, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1457, "Penelope Douglas (Goodreads Author)", new DateTime(1962, 3, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3882) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1460, "\"Rachel Hawkins (Goodreads Author)", new DateTime(1980, 3, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3893) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1461, " Oedipus at Colonus", new DateTime(1977, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3895) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1462, "\"Anya Seton", new DateTime(1980, 7, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3900) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1466, "\"Chimamanda Ngozi Adichie", new DateTime(2011, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1468, "\"Euripides", new DateTime(1937, 6, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3918) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1469, "Walter Isaacson (Goodreads Author)", new DateTime(1899, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3921) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1470, "Gail Carriger (Goodreads Author)", new DateTime(1887, 10, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3926) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1471, "F. Scott Fitzgerald", new DateTime(1907, 2, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3928) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1472, "Kody Keplinger (Goodreads Author)", new DateTime(1932, 6, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3931) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1473, "Gail Honeyman", new DateTime(1892, 10, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3933) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1475, "Jenny Downham", new DateTime(1987, 8, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3941) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1476, "Eric Schlosser", new DateTime(1990, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3944) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1481, "Zoltan Andrejkovics (Goodreads Author)", new DateTime(1941, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3959) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1483, "Andy Szpuk (Goodreads Author)", new DateTime(1981, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3966) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1484, "Lucian Bane (Goodreads Author)", new DateTime(1964, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3969) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1485, "\"Jodi Ellen Malpas (Goodreads Author)", new DateTime(2015, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3971) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1487, "Hunter S. Thompson", new DateTime(1904, 3, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3979) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1488, "Octavia E. Butler", new DateTime(2014, 9, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3981) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1489, "Paul Kalanithi", new DateTime(2007, 1, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3984) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1491, "Lauren DeStefano (Goodreads Author)", new DateTime(1967, 1, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3991) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1493, "Boris Vian", new DateTime(1949, 2, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(3996) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1494, " Poor Dad\"", new DateTime(1962, 10, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4002) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1495, "\"Orhan Pamuk", new DateTime(2010, 8, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4004) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1497, "\"Isak Dinesen", new DateTime(1913, 2, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4009) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1498, " Shoots & Leaves: The Zero Tolerance Approach to Punctuation\"", new DateTime(1897, 7, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4014) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1499, " Heir to the Shadows", new DateTime(1960, 8, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4080) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1501, "Jonathan Swift", new DateTime(1884, 5, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4086) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1502, "Christina Lauren (Goodreads Author)", new DateTime(1931, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4091) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1507, "\"Ivo Andrić", new DateTime(1976, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4106) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1509, "James Baldwin", new DateTime(2010, 2, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4111) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1510, "Robin Cook (Goodreads Author)", new DateTime(1996, 12, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4116) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1513, "Gillian Dance (Goodreads Author)", new DateTime(2008, 1, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4123) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1514, "Emily St. John Mandel (Goodreads Author)", new DateTime(1918, 7, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4128) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1516, "Carrie Ryan (Goodreads Author)", new DateTime(1987, 9, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4133) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1518, " Women Are from Venus\"", new DateTime(1910, 7, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4141) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1520, "Rebecca Donovan (Goodreads Author)", new DateTime(1884, 12, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4146) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1521, "Lara Adrian (Goodreads Author)", new DateTime(1912, 10, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4148) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1523, "Charles Dickens", new DateTime(2011, 5, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4156) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1524, "Larry Niven", new DateTime(1933, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4158) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1526, "يوسف زيدان (Goodreads Author)", new DateTime(1978, 10, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4166) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1527, "Roberto Bolaño", new DateTime(1978, 11, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4168) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1528, "Naomi Novik (Goodreads Author)", new DateTime(2013, 2, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4171) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1530, "\"Irène Némirovsky", new DateTime(2002, 10, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4179) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1531, "Noah Gordon", new DateTime(1961, 12, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4181) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1533, "Megan Whalen Turner (Goodreads Author)", new DateTime(1970, 5, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4186) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1537, "\"Shannon Hale (Goodreads Author)", new DateTime(1992, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4199) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1538, "\"Primo Levi", new DateTime(1939, 12, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4204) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1539, "Gabriel F.W. Koch", new DateTime(1980, 11, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4207) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1541, "Lev Grossman (Goodreads Author)", new DateTime(1952, 1, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4211) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1542, " Vol. 1: Boredom\"", new DateTime(1990, 1, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4217) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1543, "\"Eugene O'Neill", new DateTime(1897, 4, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4219) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1544, "Roberta Pearce (Goodreads Author)", new DateTime(1942, 10, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4222) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1545, "\"Edwin A. Abbott", new DateTime(1890, 3, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4224) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1547, "Elizabeth Wein (Goodreads Author)", new DateTime(1994, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4232) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1550, "Chloe Neill (Goodreads Author)", new DateTime(1954, 6, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4242) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1551, "Azar Nafisi (Goodreads Author)", new DateTime(1992, 11, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4244) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1552, "Hugh Howey (Goodreads Author)", new DateTime(1969, 6, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4247) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1554, "Melodie Ramone (Goodreads Author)", new DateTime(1978, 1, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4255) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1559, "J.G. Ballard", new DateTime(1961, 5, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4269) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1560, "\"Karl Marx", new DateTime(1988, 5, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4272) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1562, "Huntley Fitzpatrick (Goodreads Author)", new DateTime(1916, 8, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4280) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1563, " Plain and Tall\"", new DateTime(1923, 8, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4327) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1565, " Mr. Tom\"", new DateTime(1961, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4333) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1569, "\"Salman Rushdie", new DateTime(1895, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4346) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1570, " White Fang and Other Stories\"", new DateTime(1940, 5, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4351) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1573, "Shirley Jackson", new DateTime(1974, 1, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4359) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1575, "Julian Barnes", new DateTime(1943, 12, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4367) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1576, "Paul Auster", new DateTime(1907, 2, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4370) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1580, "Alan Brennert (Goodreads Author)", new DateTime(1911, 1, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4382) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1583, "Colum McCann (Goodreads Author)", new DateTime(1956, 1, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4392) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1584, "Thomas Paine", new DateTime(1934, 6, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4395) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1587, " Heart Beats (Dancing Soul Trilogy", new DateTime(1884, 8, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4405) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1588, "\"Richard Wright", new DateTime(1988, 9, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4408) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1590, "John Richard Spencer (Goodreads Author)", new DateTime(1968, 9, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4415) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1591, "Peter Straub (Goodreads Author)", new DateTime(1952, 4, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4417) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1595, "Mary E. Pearson (Goodreads Author)", new DateTime(2000, 5, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4430) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1596, "Jana Petken (Goodreads Author)", new DateTime(1979, 6, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4433) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1597, "Samuel R. George", new DateTime(1984, 6, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4435) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1598, "Avi", new DateTime(1973, 2, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4440) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1602, "Mika Waltari", new DateTime(1967, 10, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4453) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1603, "Moira Young (Goodreads Author)", new DateTime(1938, 9, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4456) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1604, "Joël Dicker", new DateTime(1902, 11, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4458) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1607, "Christopher Hitchens", new DateTime(1900, 6, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4468) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1608, "Josephine Tey", new DateTime(2006, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4471) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1609, "A.G. Howard (Goodreads Author)", new DateTime(1906, 7, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4473) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1610, "J.K. Franko (Goodreads Author)", new DateTime(1907, 8, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4478) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1611, "Taylor Jenkins Reid (Goodreads Author)", new DateTime(1921, 6, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4480) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1612, " Ohio\"", new DateTime(1956, 3, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4483) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1614, "Kathleen Grissom (Goodreads Author)", new DateTime(1933, 9, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4491) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1615, "Ted Bernal Guevara (Goodreads Author)", new DateTime(1984, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4493) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1617, "Blake Crouch (Goodreads Author)", new DateTime(1894, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4498) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1620, "Marie Rutkoski (Goodreads Author)", new DateTime(1934, 10, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4508) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1623, "Barbara Ehrenreich", new DateTime(1986, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4519) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1625, "Renée Ahdieh (Goodreads Author)", new DateTime(1947, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4524) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1628, "Anna Todd (Goodreads Author)", new DateTime(1928, 2, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4582) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1629, "Carol Rifka Brunt (Goodreads Author)", new DateTime(1908, 11, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4584) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1635, "William Landay (Goodreads Author)", new DateTime(1906, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4605) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1637, " Traditional Values and Spiritual Growth\"", new DateTime(1916, 6, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4610) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1638, "Alison Goodman (Goodreads Author)", new DateTime(1994, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4615) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1639, "\"Elizabeth Gaskell", new DateTime(1990, 6, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4617) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1643, "\"Andrew Watson (Goodreads Author)", new DateTime(1924, 6, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4630) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1644, "\"Joelle Charbonneau", new DateTime(1993, 8, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4632) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1645, "\"Walter Moers", new DateTime(1945, 4, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4635) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1649, "Connie Willis", new DateTime(2011, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4647) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1659, "Kelly Creagh (Goodreads Author)", new DateTime(1904, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4680) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1660, "Morgan Matson (Goodreads Author)", new DateTime(1933, 10, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4682) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1662, "\"Sergei Lukyanenko", new DateTime(1937, 2, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4690) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1663, "Dan Simmons", new DateTime(1895, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4692) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1667, "Jean Webster", new DateTime(2003, 1, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4705) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1668, "David Clement-Davies (Goodreads Author)", new DateTime(1913, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4707) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1672, "Jessica Sorensen (Goodreads Author)", new DateTime(1891, 4, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4719) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1676, "Linda Masemore Pirrung", new DateTime(2012, 9, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4732) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1679, "\"Thornton Wilder", new DateTime(1982, 4, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4742) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1684, "Sandra Cisneros", new DateTime(1914, 8, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4757) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1685, "Rom LcO'Feer", new DateTime(1963, 2, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4759) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1686, "Steven Pressfield (Goodreads Author)", new DateTime(1951, 7, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4764) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1687, "Tad Williams (Goodreads Author)", new DateTime(1995, 7, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4767) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1689, "Brae Wyckoff (Goodreads Author)", new DateTime(1968, 2, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4772) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1690, "\"Eça de Queirós", new DateTime(2003, 9, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4777) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1693, " and Thanks for All the Fish\"", new DateTime(1904, 4, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4830) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1694, "Tom Rob Smith", new DateTime(1926, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4835) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1695, "\"Augustine of Hippo", new DateTime(2014, 9, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4837) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1697, "Armistead Maupin", new DateTime(1946, 5, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4842) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1698, "Robin LaFevers", new DateTime(2001, 7, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4847) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1703, "\"سعود السنعوسي (Goodreads Author)", new DateTime(2001, 9, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4863) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1706, "Emma Chase (Goodreads Author)", new DateTime(1991, 3, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4872) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1707, "Amy Harmon (Goodreads Author)", new DateTime(1954, 1, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4875) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1709, "Jeanette Winterson", new DateTime(1920, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1713, "Lindsay Anne Kendal (Goodreads Author)", new DateTime(1921, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4892) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1716, "Mark Bowden", new DateTime(1899, 12, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4903) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1720, "Joseph Conrad", new DateTime(1978, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4915) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1723, "William L. Shirer", new DateTime(1976, 7, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4925) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1724, "Shelly Crane (Goodreads Author)", new DateTime(1942, 12, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4928) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1725, "\"Jo Nesbø (Goodreads Author)", new DateTime(2009, 1, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4930) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1728, "\"Simone de Beauvoir", new DateTime(2010, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4940) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1730, "Kresley Cole (Goodreads Author)", new DateTime(1924, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4948) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1732, "L.C. Conn (Goodreads Author)", new DateTime(1940, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4953) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1733, "Richard Preston", new DateTime(1990, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4955) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1734, "Heather Morris (Goodreads Author)", new DateTime(1991, 8, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4960) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1735, "James Alexander Thom", new DateTime(1961, 6, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4963) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1736, "J.K. Accinni", new DateTime(1926, 7, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4965) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1737, "\"Ernesto Sabato", new DateTime(1943, 9, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4967) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1739, "\"Meg Cabot (Goodreads Author)", new DateTime(1984, 1, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4975) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1740, " Vol. 1\"", new DateTime(1949, 12, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4978) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1741, "Malcolm Lowry", new DateTime(1973, 6, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4980) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1743, "Alex Michaelides (Goodreads Author)", new DateTime(1909, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(4988) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1751, "Jennifer Donnelly (Goodreads Author)", new DateTime(1952, 10, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5012) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1753, "Ross Lockridge Jr.", new DateTime(1943, 5, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5017) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1754, "Pramoedya Ananta Toer", new DateTime(1961, 1, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5022) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1757, "\"Rick Riordan (Goodreads Author)", new DateTime(1987, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5076) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1759, " Babylon\"", new DateTime(1993, 10, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5084) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1762, "Linda Armstrong (Goodreads Author)", new DateTime(2016, 4, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5094) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1765, "Dorothy L. Sayers", new DateTime(1951, 4, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5102) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1766, "J.J. Sorel (Goodreads Author)", new DateTime(1996, 9, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5107) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1769, "Amor Towles (Goodreads Author)", new DateTime(1965, 11, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5114) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1770, "Jim Fergus (Goodreads Author)", new DateTime(1975, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5120) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1771, "Najeev Raj Nadarajah", new DateTime(1969, 12, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5122) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1772, "Norman Mailer", new DateTime(2005, 2, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5125) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1773, "Alison Croggon (Goodreads Author)", new DateTime(1932, 7, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5127) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1775, "Patricia Highsmith", new DateTime(1896, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5135) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1778, "Jami Brumfield (Goodreads Author)", new DateTime(1941, 7, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5145) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1784, "Irvin D. Yalom", new DateTime(1926, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5162) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1785, "Rachel Hartman (Goodreads Author)", new DateTime(2005, 9, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5165) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1786, "\"Stella Gibbons", new DateTime(2002, 1, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5170) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1792, "Catherine Fisher", new DateTime(1904, 9, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5187) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1795, "Amit Ray", new DateTime(1981, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5197) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1799, "\"Rachael Lippincott (Goodreads Author)", new DateTime(1929, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5210) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1801, "Julia Hoban", new DateTime(1907, 2, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5215) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1803, "Adam Carpenter Welles", new DateTime(1911, 10, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5222) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1804, "\"Elena Ferrante", new DateTime(2004, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5225) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1805, "أحمد مراد (Goodreads Author)", new DateTime(1999, 5, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5227) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1806, "Jude Deveraux", new DateTime(1912, 7, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5232) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1812, "Darren Shan (Goodreads Author)", new DateTime(2001, 10, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5250) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1813, "Robert Dugoni (Goodreads Author)", new DateTime(1967, 12, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5252) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1815, "Anthony Horowitz (Goodreads Author)", new DateTime(2006, 4, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5260) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1816, "Linda Watkins (Goodreads Author)", new DateTime(1974, 12, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5262) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1818, "Eleanor H. Porter", new DateTime(1967, 1, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5314) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1819, "Lewis Carroll", new DateTime(2013, 12, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5317) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1820, " Carpenters & Seymour: An Introduction\"", new DateTime(1894, 5, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5320) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1821, "Jean Rhys", new DateTime(1977, 10, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5322) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1823, "Miguel Ruiz", new DateTime(1948, 7, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5330) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1825, "William Graney (Goodreads Author)", new DateTime(1904, 11, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5335) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1826, "Kimberly Derting (Goodreads Author)", new DateTime(1895, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5340) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1827, "Dennis Sharpe (Goodreads Author)", new DateTime(1953, 6, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5343) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1828, "Lloyd Alexander", new DateTime(1907, 10, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5345) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1829, "Matthew Bracey (Goodreads Author)", new DateTime(1952, 12, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5348) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1832, "Raymond Carver", new DateTime(2004, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5358) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1835, "Joe Hill (Goodreads Author)", new DateTime(1999, 9, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5368) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1836, "Jennifer Weiner (Goodreads Author)", new DateTime(1898, 12, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5371) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1838, "Lisa McMann (Goodreads Author)", new DateTime(1902, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5379) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1844, "Kimberley Paterson (Goodreads Author)", new DateTime(2008, 5, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5396) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1845, "Darynda Jones (Goodreads Author)", new DateTime(1992, 2, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5399) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1846, "Patrick O'Brian", new DateTime(1976, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5404) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1848, "\"Alexandre Dumas fils", new DateTime(2011, 2, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5409) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1852, "Gordon B. Hinckley", new DateTime(1981, 12, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5421) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1856, "Kendare Blake (Goodreads Author)", new DateTime(1955, 7, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5434) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1860, "Carlos Ruiz Zafón", new DateTime(1905, 3, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5447) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1861, "Patti Smith (Goodreads Author)", new DateTime(1962, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5449) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1865, "Mario Vargas Llosa", new DateTime(1959, 1, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5462) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1866, "\"Chuck Dixon (Goodreads Author) (Adapter)", new DateTime(1987, 1, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5467) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1869, "Theodore Dreiser", new DateTime(1940, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5475) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1872, "Nicola Yoon (Goodreads Author)", new DateTime(1954, 3, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5485) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1873, "Rhys Bowen (Goodreads Author)", new DateTime(1944, 3, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5487) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1876, "Spencer W. Kimball", new DateTime(1988, 6, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5497) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1878, "Haruki Murakami", new DateTime(1894, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5505) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1882, "\"Harry Mulisch", new DateTime(1888, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5562) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1883, "Jodi Ellen Malpas (Goodreads Author)", new DateTime(1998, 3, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5564) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1884, "Nelou Keramati (Goodreads Author)", new DateTime(1918, 10, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5567) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1885, "Lynessa Layne (Goodreads Author)", new DateTime(1979, 1, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5569) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1886, "Alison Bechdel", new DateTime(1885, 4, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5575) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1888, "Edward Rutherfurd (Goodreads Author)", new DateTime(2009, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5580) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1891, "Alan Bradley (Goodreads Author)", new DateTime(1934, 5, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5590) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1894, " Lily Blue\"", new DateTime(1983, 3, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5600) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1896, "\"Mahatma Gandhi", new DateTime(1991, 6, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5605) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1897, "Courtney Allison Moulton (Goodreads Author)", new DateTime(2011, 2, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5608) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1901, "Lian Hearn", new DateTime(1947, 6, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5620) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1903, "\"A.D. Zoltan", new DateTime(1894, 5, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5628) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1904, "Jennifer Egan (Goodreads Author)", new DateTime(1970, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5630) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1906, "Jack Finney", new DateTime(1883, 10, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5638) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1907, "\"Ivan Goncharov", new DateTime(1970, 8, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5640) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1908, "Herman Melville", new DateTime(2012, 8, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5643) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1913, "Jan Raymond (Goodreads Author)", new DateTime(1994, 1, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5658) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1914, " Fast and Slow\"", new DateTime(1901, 1, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5663) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1915, "Mackenzi Lee (Goodreads Author)", new DateTime(1942, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5665) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1916, "\"John Fante", new DateTime(1982, 10, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5668) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1917, "N.K. Jemisin (Goodreads Author)", new DateTime(1910, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1918, "\"Ernest Hemingway", new DateTime(1901, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5676) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1920, "Dorothy Dunnett", new DateTime(1985, 6, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5680) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1921, "\"Alfred Bester", new DateTime(2005, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5683) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1925, "\"José Mauro de Vasconcelos", new DateTime(1976, 3, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5696) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1929, "Ken Grimwood", new DateTime(1891, 9, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1932, "Lissa Price (Goodreads Author)", new DateTime(1892, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5719) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1934, "Samantha Shannon (Goodreads Author)", new DateTime(1978, 5, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5726) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1937, "Tom Stoppard", new DateTime(1993, 5, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1939, "Ayaan Hirsi Ali", new DateTime(2000, 10, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5741) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1940, "\"Wallace Stegner", new DateTime(1991, 7, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5744) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1942, "Quinn Loftis (Goodreads Author)", new DateTime(1950, 7, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5751) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1943, "\"Lili St. Crow", new DateTime(1894, 3, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5754) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1944, "Michel Faber", new DateTime(1885, 2, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5756) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1947, "J. Jupes (Goodreads Author)", new DateTime(1923, 4, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5812) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1949, "Iain M. Banks", new DateTime(1908, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5817) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1951, "Sam Conniff (Goodreads Author)", new DateTime(1937, 2, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5824) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1953, "\"Larry Niven", new DateTime(2009, 5, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5829) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1954, "David Gemmell", new DateTime(1889, 11, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5834) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1956, "John Galsworthy", new DateTime(1976, 8, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5839) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1958, "Lynne Reid Banks", new DateTime(1887, 7, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5847) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1959, "\"Kōbō Abe", new DateTime(2013, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5849) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1960, "ShelFoote", new DateTime(2004, 7, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5852) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1962, "Lalita Tademy (Goodreads Author)", new DateTime(1970, 7, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5860) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1963, "Sarah Dunant", new DateTime(1961, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5862) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1965, " a Foundling\"", new DateTime(1918, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5867) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1967, " Out of Time\"", new DateTime(1989, 10, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5875) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1968, " the Bad", new DateTime(1973, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5878) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1969, "\"Arkady Strugatsky", new DateTime(1972, 2, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1974, " Angel\"", new DateTime(1986, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5898) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1977, " Stargirl\"", new DateTime(1948, 10, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1978, "R.A. Salvatore", new DateTime(1915, 10, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5911) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1979, "\"Margaret Weis (Goodreads Author)", new DateTime(1917, 2, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1981, "Jennifer E. Smith (Goodreads Author)", new DateTime(1969, 2, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5918) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1982, "\"Trenton Lee Stewart (Goodreads Author)", new DateTime(1951, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5923) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1983, "Steven Erikson (Goodreads Author)", new DateTime(2005, 8, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(5926) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1985, "Sabahattin Ali", new DateTime(1956, 11, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6100) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1987, "Kate Atkinson", new DateTime(1952, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6109) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1990, "Jennifer Crusie (Goodreads Author)", new DateTime(1936, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6120) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1991, " My Love\"", new DateTime(1923, 6, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6123) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1992, "\"Angie Sage", new DateTime(1947, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6125) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1995, "Amish Tripathi (Goodreads Author)", new DateTime(1915, 8, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6136) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1998, "James Allen", new DateTime(1979, 12, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6146) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 1999, "Rebecca Stead", new DateTime(1976, 7, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6148) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2000, "Jennifer Brown", new DateTime(1884, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6151) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2001, "Ruth Ozeki (Goodreads Author)", new DateTime(1900, 6, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6153) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2002, "Ira Levin", new DateTime(1957, 1, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6159) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2003, "\"Thomas Pynchon", new DateTime(1934, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6161) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2006, "Jeff Lindsay (Goodreads Author)", new DateTime(1914, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6171) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2007, "Kevin Moccia (Goodreads Author)", new DateTime(1896, 7, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6174) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2008, " Germs", new DateTime(1992, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6176) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2011, "\"Mikhail Lermontov", new DateTime(1911, 2, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6259) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2012, "C.S. Pacat (Goodreads Author)", new DateTime(1928, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6262) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2013, "\"Dave Barry", new DateTime(1974, 1, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6264) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2016, "Chris A. Jones (Goodreads Author)", new DateTime(1938, 3, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6274) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2017, "Anthony Ryan (Goodreads Author)", new DateTime(1969, 4, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6277) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2022, "Tana French (Goodreads Author)", new DateTime(1912, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6295) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2024, "Ta-Nehisi Coates", new DateTime(1936, 1, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6299) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2028, "عائض القرني", new DateTime(1990, 8, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6312) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2030, "T.S. Eliot", new DateTime(2010, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6320) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2031, "David Wong (Goodreads Author)", new DateTime(1930, 9, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6322) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2033, "Wendy Mass (Goodreads Author)", new DateTime(1906, 9, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6327) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2034, "\"Pseudonymous Bosch (Goodreads Author)", new DateTime(1980, 6, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6332) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2036, "Doris Kearns Goodwin", new DateTime(1959, 2, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6337) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2039, "Anne Bishop", new DateTime(1928, 4, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6347) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2040, "Marisha Pessl (Goodreads Author)", new DateTime(2016, 5, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6350) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2041, "Christine M. Knight (Goodreads Author)", new DateTime(1982, 5, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6352) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2044, "Crockett Johnson", new DateTime(1949, 11, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6362) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2045, "Danielle Paige (Goodreads Author)", new DateTime(1915, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6365) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2047, "\"Patricia Daniels Cornwell", new DateTime(1915, 10, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6373) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2052, "Lois McMaster Bujold (Goodreads Author)", new DateTime(1924, 12, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6603) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2055, " West of the Sun\"", new DateTime(1954, 11, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6614) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2057, "\"Thomas More", new DateTime(1892, 12, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6619) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2060, "\"Sigrid Undset", new DateTime(1925, 5, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6629) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2061, "L.A. Weatherly (Goodreads Author)", new DateTime(2008, 12, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6632) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2063, "\"O. Henry", new DateTime(1917, 2, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6640) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2064, "Paramahansa Yogananda", new DateTime(1914, 10, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6642) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2067, "Leslie Garland (Goodreads Author)", new DateTime(1903, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6653) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2068, "\"Georges Bataille", new DateTime(1939, 12, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6655) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2069, "M.S. Matassa (Goodreads Author)", new DateTime(1984, 2, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6658) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2070, "\"Morgan Rhodes (Goodreads Author)", new DateTime(1928, 9, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6663) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2073, "Tomi Adeyemi (Goodreads Author)", new DateTime(2005, 8, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2075, "David J Morden (Goodreads Author)", new DateTime(1913, 11, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6731) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2076, "George S. Clason", new DateTime(1962, 7, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2079, "\"عبد الله بن المقفع", new DateTime(2007, 4, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6743) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2080, "Penelope Lively", new DateTime(1906, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6746) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2081, "Doris Lessing", new DateTime(2013, 3, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6749) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2082, "Michelle Obama (Goodreads Author)", new DateTime(1958, 10, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6777) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2083, "Gabrielle Zevin (Goodreads Author)", new DateTime(1910, 9, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6780) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2085, "John Katzenbach", new DateTime(1928, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6784) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2086, "Daniel Silva", new DateTime(1907, 2, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6790) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2087, "Aimee Carter (Goodreads Author)", new DateTime(1994, 12, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6792) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2089, "Josh Malerman (Goodreads Author)", new DateTime(1928, 4, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6797) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2090, "Robin S. Sharma", new DateTime(1917, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6802) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2092, "Kendra Elliot (Goodreads Author)", new DateTime(2016, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6807) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2093, "Edward Abbey", new DateTime(1937, 5, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6809) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2094, "Gore Vidal", new DateTime(1997, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6815) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2098, "\"Paolo Giordano", new DateTime(1975, 9, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6827) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2099, "\"Omar Khayyám", new DateTime(1934, 2, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6830) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2103, "Forrest Carter", new DateTime(1914, 4, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6843) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2104, "A.J. Finn", new DateTime(2011, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6845) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2105, " the Robber's Daughter\"", new DateTime(1966, 5, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6848) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2106, "Don Barr", new DateTime(2008, 7, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6853) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2107, "Frederick Douglass", new DateTime(1958, 6, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6855) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2116, "\"Heinrich Böll", new DateTime(1922, 2, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6883) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2117, "Susan Cooper (Goodreads Author)", new DateTime(1945, 12, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6886) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2118, "\"Stefan Zweig", new DateTime(1946, 6, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6891) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2119, " NASB\"", new DateTime(1944, 7, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6893) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2120, "Theodore Taylor", new DateTime(1994, 5, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6896) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2122, "Jay Kristoff (Goodreads Author)", new DateTime(1923, 3, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6904) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2123, "Mira Grant", new DateTime(1899, 7, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6906) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2124, "Jane Smiley (Goodreads Author)", new DateTime(1952, 4, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6908) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2126, "Katherine Arden (Goodreads Author)", new DateTime(1921, 1, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6916) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2127, "George Bernard Shaw", new DateTime(1886, 9, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6919) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2128, "\"Åsne Seierstad", new DateTime(1946, 6, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6922) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2129, "Nathanael West", new DateTime(1949, 4, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6924) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2131, "Jessica Shirvington (Goodreads Author)", new DateTime(1998, 3, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6932) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2133, "\"Tetsuko Kuroyanagi", new DateTime(1994, 1, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2136, "MaryJanice Davidson (Goodreads Author)", new DateTime(1919, 5, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6948) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2137, "Jay Crownover (Goodreads Author)", new DateTime(1932, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(6999) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2139, "Jean Craighead George", new DateTime(1912, 5, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7008) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2141, "Bernard Cornwell (Goodreads Author)", new DateTime(1934, 5, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7013) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2142, " Black Blood", new DateTime(2005, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7018) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2143, "Kristen Britain", new DateTime(1980, 10, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7021) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2144, "\"Terry Goodkind", new DateTime(2007, 4, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7023) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2148, "Adam Silvera (Goodreads Author)", new DateTime(1944, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7149) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2149, "Mahbod Seraji (Goodreads Author)", new DateTime(1938, 4, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7152) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2150, "Annette Curtis Klause", new DateTime(1900, 9, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7157) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2152, "Erich Maria Remarque", new DateTime(1999, 3, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7162) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2154, "Chris Cleave (Goodreads Author)", new DateTime(1992, 11, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7170) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2155, "\"Heather Brewer (Goodreads Author)", new DateTime(1925, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7173) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2157, "\"Sam McBratney", new DateTime(1992, 10, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7178) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2159, "Tina Reber (Goodreads Author)", new DateTime(1993, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7185) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2163, "Rachel Vincent (Goodreads Author)", new DateTime(2013, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7198) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2164, "Leslye Walton (Goodreads Author)", new DateTime(1962, 1, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7200) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2166, " Business", new DateTime(1922, 1, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7208) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2167, "\"Eoin Colfer", new DateTime(1898, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7211) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2169, "Tim Winton", new DateTime(1991, 8, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7215) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2170, "\"Eiji Yoshikawa", new DateTime(1967, 7, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7221) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2174, "Riley Banks (Goodreads Author)", new DateTime(1960, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7234) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2176, "Robertson Davies", new DateTime(1963, 9, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7239) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2177, "Angel Sefer (Goodreads Author)", new DateTime(1978, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7241) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2178, "Lisa Renee Jones (Goodreads Author)", new DateTime(1935, 8, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7247) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2186, "James Hilton", new DateTime(1933, 4, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7273) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2187, "\"Ryū Murakami", new DateTime(1914, 5, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7275) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2189, "Keri Hulme", new DateTime(1960, 7, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7280) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2191, "\"Kathy Reichs (Goodreads Author)", new DateTime(2010, 10, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7287) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2192, "Michael Connelly (Goodreads Author)", new DateTime(1899, 9, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7290) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2193, "\"Benjamin Hoff", new DateTime(1971, 2, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7292) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2196, "Mark Lawrence (Goodreads Author)", new DateTime(1936, 12, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7302) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2198, "\"John Green (Goodreads Author)", new DateTime(1900, 3, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7310) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2199, "Mervyn Peake", new DateTime(1982, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7312) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2201, "Tricia Copeland (Goodreads Author)", new DateTime(1976, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7348) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2204, "\"M. Ageyev", new DateTime(1903, 3, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7359) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2205, "\"Natsuo Kirino", new DateTime(1938, 6, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7362) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2206, "Hubert SelJr.", new DateTime(1949, 8, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7367) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2207, "Steven Hall (Goodreads Author)", new DateTime(1928, 8, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7369) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2210, "Richard Sprout (Goodreads Author)", new DateTime(1948, 4, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7379) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2211, "Larissa Ione (Goodreads Author)", new DateTime(1971, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7382) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2212, " Apology", new DateTime(1985, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7384) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2213, "Margaret Leroy (Goodreads Author)", new DateTime(2015, 4, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7387) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2215, "\"G.K. Chesterton", new DateTime(1890, 3, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7394) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2217, "\"Walter Farley", new DateTime(2012, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7400) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2218, "A.F. Knott (Goodreads Author)", new DateTime(1933, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7405) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2220, "Terry Hayes", new DateTime(2002, 7, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7410) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2221, "Nora Sakavic (Goodreads Author)", new DateTime(1956, 12, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7412) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2223, "Molly McAdams (Goodreads Author)", new DateTime(1891, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7420) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2224, "\"Herodotus", new DateTime(1990, 5, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7422) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2225, " The Libation Bearers", new DateTime(1953, 12, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7425) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2226, "Susanna Kearsley (Goodreads Author)", new DateTime(1884, 9, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7431) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2228, "R.L. Mathewson (Goodreads Author)", new DateTime(1958, 7, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7436) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2233, "Mark M. Bello (Goodreads Author)", new DateTime(1957, 7, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7451) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2234, "\"Marcus Luttrell", new DateTime(1945, 8, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7457) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2235, "\"Robert Greene (Goodreads Author)", new DateTime(1939, 4, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7459) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2238, "Chuck Klosterman", new DateTime(1995, 8, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7469) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2240, "Denis Johnson", new DateTime(1906, 3, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7474) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2241, "Maureen Johnson (Goodreads Author)", new DateTime(2002, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7476) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2243, "Maeve Binchy", new DateTime(2002, 3, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7484) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2244, "Martin Amis", new DateTime(1941, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7486) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2245, "Ann Aguirre (Goodreads Author)", new DateTime(2014, 8, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7489) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2246, "\"Michel de Montaigne", new DateTime(1967, 7, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7494) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2249, "\"Karen (Kara) Brueggeman (Goodreads Author)", new DateTime(1950, 11, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7501) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2251, "Jamie Ford (Goodreads Author)", new DateTime(1940, 3, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7509) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2253, "Paul Bowles", new DateTime(1962, 8, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7514) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2255, "Simon W. Clark (Goodreads Author)", new DateTime(1964, 9, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7522) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2257, "Robin Sloan (Goodreads Author)", new DateTime(1993, 12, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7527) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2258, "Cece Whittaker (Goodreads Author)", new DateTime(1955, 5, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7532) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2259, "Shaun David Hutchinson (Goodreads Author)", new DateTime(1925, 6, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7535) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2261, "\"Halldór Laxness", new DateTime(1971, 2, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7539) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2262, "B.Q. Hanson (Goodreads Author)", new DateTime(1917, 10, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7544) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2265, "Hannah Kent (Goodreads Author)", new DateTime(1977, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7619) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2266, "Adam Johnson", new DateTime(1967, 6, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7624) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2271, "Victoria Schwab (Goodreads Author)", new DateTime(1896, 4, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7639) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2272, "Richard J. O'Brien", new DateTime(1983, 7, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7642) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2274, "Joseph Campbell", new DateTime(1996, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7649) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2275, "Dan Wells (Goodreads Author)", new DateTime(1940, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7652) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2276, "Melinda Leigh (Goodreads Author)", new DateTime(1961, 4, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7654) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2277, "\"Seth Grahame-Smith", new DateTime(1908, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2278, " Drugs", new DateTime(2008, 1, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7662) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2281, "Robert Fulghum", new DateTime(1912, 11, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2282, "Fyodor Dostoyevsky", new DateTime(1984, 10, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7675) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2283, "James Chalk (Goodreads Author)", new DateTime(1908, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7678) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2285, "Megan Abbott (Goodreads Author)", new DateTime(1982, 5, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7682) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2286, "Trevor Noah", new DateTime(2000, 12, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7687) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2290, "James Dickey", new DateTime(1937, 1, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7700) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2292, "Jessica Verday", new DateTime(2008, 8, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7705) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2295, "\"Mario Vargas Llosa", new DateTime(2013, 1, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7715) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2296, "\"Thomas Malory", new DateTime(1966, 8, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7717) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2297, "Dmitry Glukhovsky (Goodreads Author)", new DateTime(1986, 6, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7720) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2298, "\"Dorothy Parker", new DateTime(1989, 5, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7725) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2302, " Volume One\"", new DateTime(1906, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7738) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2304, " Passion and Play into Everyday Life\"", new DateTime(1955, 5, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7743) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2305, "Christina Baker Kline (Goodreads Author)", new DateTime(1902, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7745) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2307, "\"José Saramago", new DateTime(1899, 11, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7753) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2310, "M.R. Carey (Goodreads Author)", new DateTime(1919, 12, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7763) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2311, "Jennifer Echols (Goodreads Author)", new DateTime(1924, 9, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7766) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2312, "Angela Carter", new DateTime(1997, 11, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7768) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2314, "\"James Patterson (Goodreads Author)", new DateTime(1998, 5, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7776) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2315, "\"Colleen Hoover (Goodreads Author)", new DateTime(1917, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7778) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2316, "\"Carlo Collodi", new DateTime(1974, 12, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7781) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2317, "\"Ahlam Mosteghanemi (Goodreads Author)", new DateTime(1961, 8, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7783) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2319, " Run\"", new DateTime(1957, 4, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7791) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2320, " an International Art Dealer", new DateTime(1968, 6, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7793) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2321, "Craig Thompson", new DateTime(1915, 3, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7796) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2323, "\"Henry David Thoreau", new DateTime(2015, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7804) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2324, "Elle Kennedy (Goodreads Author)", new DateTime(1917, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7806) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2325, "Michael Morpurgo", new DateTime(1957, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7809) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2326, "Gregory Maguire", new DateTime(2004, 1, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7814) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2330, "Teri Terry (Goodreads Author)", new DateTime(1933, 9, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7881) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2332, "\"Emma McLaughlin (Goodreads Author)", new DateTime(1966, 11, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7886) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2333, "James W. Loewen", new DateTime(1923, 4, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7889) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2334, "Terry Reid (Goodreads Author)", new DateTime(1967, 12, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7894) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2335, "Andrzej Sapkowski", new DateTime(1913, 1, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7897) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2337, "Lloyd C. Douglas", new DateTime(1925, 7, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7902) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2338, "Alan Lightman (Goodreads Author)", new DateTime(1939, 4, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7907) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2339, "Elizabeth Strout", new DateTime(1895, 3, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7909) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2342, "Celeste Ng (Goodreads Author)", new DateTime(1887, 10, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7920) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2344, " Durban Frankenshooze\"", new DateTime(1986, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7925) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2347, "Dave Cullen (Goodreads Author)", new DateTime(1897, 12, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7935) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2348, "P.G. Wodehouse", new DateTime(1967, 1, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2352, "Jessica Day George (Goodreads Author)", new DateTime(1927, 8, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7950) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2353, "Shari Lapena (Goodreads Author)", new DateTime(1886, 6, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7953) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2355, "Eowyn Ivey (Goodreads Author)", new DateTime(2003, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7960) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2356, "Mya Robarts", new DateTime(1985, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7963) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2358, "A.A. Milne", new DateTime(1886, 10, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7970) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2359, "\"Maeve Binchy", new DateTime(1940, 2, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7973) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2361, "C.J. Daugherty (Goodreads Author)", new DateTime(1988, 1, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7978) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2362, "Eleanor Catton", new DateTime(1899, 6, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7983) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2365, "Darin C. Brown (Goodreads Author)", new DateTime(1900, 11, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(7990) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2368, "Jennifer Lynn Barnes (Goodreads Author)", new DateTime(1905, 4, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8001) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2369, "Snehlata Agarwala (Goodreads Author)", new DateTime(1956, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8003) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2370, "Veronica Blade (Goodreads Author)", new DateTime(1951, 9, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8008) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2371, "\"Tom Clancy", new DateTime(1973, 1, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8011) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2372, "Gary Jennings", new DateTime(1898, 6, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8013) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2374, "\"Simin Daneshvar", new DateTime(2001, 11, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8021) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2376, "Stephen E. Robinson", new DateTime(1894, 3, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8026) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2380, "Heather Dixon Wallwork", new DateTime(1934, 6, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8039) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2381, "Timothy Zahn (Goodreads Author)", new DateTime(1955, 6, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8041) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2382, "B.A. Paris (Goodreads Author)", new DateTime(1971, 9, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8046) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2383, "Mercedes Lackey", new DateTime(1891, 8, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8049) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2384, "Thornton Wilder", new DateTime(2003, 11, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8051) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2386, "\"Patrick Rothfuss (Goodreads Author)", new DateTime(1921, 12, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8059) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2387, "Jeet Thayil", new DateTime(1884, 3, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8061) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2389, "Michael J. Sullivan (Goodreads Author)", new DateTime(1911, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8066) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2390, "Bev Stout (Goodreads Author)", new DateTime(1939, 9, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8071) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2392, "Tijan (Goodreads Author)", new DateTime(1989, 4, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8124) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2401, "Tony Kushner", new DateTime(1960, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8153) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2403, "K.J. Soze (Goodreads Author)", new DateTime(1910, 3, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8161) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2404, "J.M. Darhower (Goodreads Author)", new DateTime(1992, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8163) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2405, "Gabriel García Márquez", new DateTime(2011, 12, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8169) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2408, "\"J.S. Latshaw", new DateTime(1897, 1, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8179) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2410, "Raina Telgemeier (Goodreads Author)", new DateTime(1898, 12, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8187) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2415, "Antonia Michaelis", new DateTime(1893, 1, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8202) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2420, "Charles Portis", new DateTime(2013, 4, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8217) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2421, "Adam Smith", new DateTime(1903, 11, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8219) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2422, "\"Malcolm X", new DateTime(1983, 1, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8225) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2436, "Michael Stephen Daigle (Goodreads Author)", new DateTime(1992, 3, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8267) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2439, "William Kotzwinkle (Goodreads Author)", new DateTime(1929, 7, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8277) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2440, "William S. Burroughs", new DateTime(1949, 3, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8280) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2443, "\"Michel Houellebecq", new DateTime(1894, 8, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8290) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2444, "Helene Wecker (Goodreads Author)", new DateTime(1951, 8, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8292) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2448, "\"Danielle Simmons", new DateTime(1914, 7, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8305) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2454, "T. Coraghessan Boyle (Goodreads Author)", new DateTime(1939, 1, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8325) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2458, "\"Marguerite Duras", new DateTime(2006, 6, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8382) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2459, "Brom", new DateTime(1990, 11, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8385) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2460, " Big\"", new DateTime(1885, 2, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8387) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2461, "\"Michelle Paver", new DateTime(1928, 6, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8390) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2462, "K. Bromberg (Goodreads Author)", new DateTime(1887, 4, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8395) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2464, " 1909-1962\"", new DateTime(1933, 2, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8400) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2468, " SpaceX", new DateTime(1945, 1, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8413) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2470, "Jean Sasson (Goodreads Author)", new DateTime(1951, 5, 9, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8421) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2474, "\"Katherine Applegate", new DateTime(1930, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8434) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2475, "Karen M. McManus (Goodreads Author)", new DateTime(1956, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8436) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2476, "\"Susan Hill", new DateTime(1942, 7, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8438) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2479, "\"Miquel Reina (Goodreads Author)", new DateTime(1951, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8448) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2480, "Mindy Kaling (Goodreads Author)", new DateTime(1993, 3, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8451) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2481, "Christian Warren Freed (Goodreads Author)", new DateTime(1964, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8453) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2482, "أحمد خالد توفيق", new DateTime(2011, 10, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8458) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2485, "Aporva Kala (Goodreads Author)", new DateTime(1926, 7, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8466) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2486, "\"Guillermo del Toro", new DateTime(1908, 5, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8471) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2489, "Ginger Baum", new DateTime(1900, 2, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8478) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2490, " Mr. Rosewater\"", new DateTime(1996, 4, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8483) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2492, "\"Николай Теллалов (Goodreads Author)", new DateTime(1937, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8488) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2493, "\"Hugh Howey (Goodreads Author)", new DateTime(1950, 1, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8491) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2494, "Camilla Isley (Goodreads Author)", new DateTime(1975, 11, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8496) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2498, "D.J. MacHale (Goodreads Author)", new DateTime(2003, 11, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8509) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2499, "\"Soman Chainani (Goodreads Author)", new DateTime(1998, 8, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8511) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2501, "\"Jordan B. Peterson", new DateTime(1982, 12, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8516) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2502, " Superathletes", new DateTime(1911, 9, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8521) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2506, " Many Masters: The True Story of a Prominent Psychiatrist", new DateTime(1937, 3, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8534) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2508, " Sex", new DateTime(2005, 3, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8539) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2509, "\"Joseph Delaney (Goodreads Author)", new DateTime(1926, 6, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8541) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2512, "Lisa Wingate (Goodreads Author)", new DateTime(1885, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8551) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2519, "Belle Aurora (Goodreads Author)", new DateTime(1884, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8573) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2522, "Lee Matthew Goldberg (Goodreads Author)", new DateTime(1964, 7, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8630) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2523, "Beatrix Potter", new DateTime(1945, 7, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8633) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2526, "K.A. Tucker (Goodreads Author)", new DateTime(1934, 8, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8643) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2529, "Sally Green (Goodreads Author)", new DateTime(1896, 8, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8651) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2531, "\"Johann David Wyss", new DateTime(1992, 10, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8658) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2532, "Machado de Assis", new DateTime(1896, 5, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8661) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2533, "Jessica Park (Goodreads Author)", new DateTime(1991, 5, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8664) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2536, "Danielle DeVor (Goodreads Author)", new DateTime(1925, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8674) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2537, "Robert Bloch", new DateTime(1952, 10, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8677) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2540, "Piers Anthony", new DateTime(1883, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8687) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2542, "Walker Percy", new DateTime(1919, 4, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8694) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2544, "Othen Donald Dale Cummings (Goodreads Author)", new DateTime(1956, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8699) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2545, "Ian Fleming", new DateTime(1915, 1, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8702) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2547, "Martin Cruz Smith", new DateTime(1900, 4, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8709) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2548, "\"Rachel Cohn", new DateTime(1989, 10, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8712) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2549, "Henry Miller", new DateTime(2010, 6, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8715) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2551, "\"Rachel Caine (Goodreads Author)", new DateTime(2012, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8722) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2552, "Grahame Shannon (Goodreads Author)", new DateTime(2000, 8, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8725) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2553, "Paula McLain (Goodreads Author)", new DateTime(1959, 4, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8728) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2554, "Patricia Cornwell (Goodreads Author)", new DateTime(2001, 9, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8733) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2555, "Beth Fantaskey (Goodreads Author)", new DateTime(1931, 3, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8736) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2556, "\"Jack Kerouac", new DateTime(1987, 1, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8738) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2557, "Kasie West (Goodreads Author)", new DateTime(1968, 8, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8740) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2559, "\"Douglas Preston (Goodreads Author)", new DateTime(1911, 10, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8748) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2560, "Sara Donati (Goodreads Author)", new DateTime(1973, 7, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8751) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2566, "Otfried Preußler", new DateTime(1887, 8, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8771) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2569, "Hannah Hurnard", new DateTime(1949, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8779) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2571, " Deals", new DateTime(1932, 12, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8786) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2575, "Kathleen Winsor", new DateTime(1993, 5, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8799) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2576, "Alcoholics Anonymous", new DateTime(1884, 3, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8801) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2578, "Edward P. Jones", new DateTime(1983, 3, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8809) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2581, "Eliezer Yudkowsky (Goodreads Author)", new DateTime(1915, 10, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8816) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2582, "Carolyn M. Bowen (Goodreads Author)", new DateTime(1995, 7, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8821) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2584, "Stevie Turner (Goodreads Author)", new DateTime(1885, 1, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8872) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2586, "Victoria Hislop", new DateTime(1932, 11, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8880) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2590, "Richard K. Morgan", new DateTime(1929, 1, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8893) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2591, "Siddhartha Mukherjee", new DateTime(1986, 1, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8895) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2592, "Sebastian Junger (Goodreads Author)", new DateTime(1962, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8898) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2593, "Stephen R. Donaldson", new DateTime(1978, 2, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8900) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2594, "Gemma Malley", new DateTime(1921, 2, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2595, "Robert Harris (Goodreads Author)", new DateTime(1947, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8908) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2596, "\"Edgar Rice Burroughs", new DateTime(1969, 9, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8910) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2597, "\"Kerri Maniscalco (Goodreads Author)", new DateTime(1884, 5, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2604, "Anna Halabi (Goodreads Author)", new DateTime(2001, 6, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8936) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2605, "Kirk St Moritz (Goodreads Author)", new DateTime(1886, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2606, "\"Guy de Maupassant", new DateTime(1950, 11, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8943) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2607, "\"Frank Miller (Writer)", new DateTime(1962, 12, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8946) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2609, "أنيس منصور", new DateTime(1883, 6, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8951) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2610, "\"صلاح جاهين", new DateTime(1966, 9, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8956) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2611, "G.D. Falksen (Goodreads Author)", new DateTime(1986, 5, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8958) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2612, "\"أحلام مستغانمي", new DateTime(1891, 4, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8961) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2614, "Justina Chen (Goodreads Author)", new DateTime(1993, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8968) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2615, "\"Bill Watterson", new DateTime(1890, 3, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8971) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2616, "\"J.G. Ballard", new DateTime(1961, 5, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8973) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2617, "Roy Huff (Goodreads Author)", new DateTime(1979, 10, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8976) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2618, "Mimi Jean Pamfiloff (Goodreads Author)", new DateTime(2002, 6, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8981) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2621, "Jim Thompson", new DateTime(1934, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8988) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2622, "Annie Dillard", new DateTime(1888, 6, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8993) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2624, " Vol. 1: Days Gone Bye\"", new DateTime(1887, 11, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(8998) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2625, "Steve Toltz", new DateTime(1955, 4, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9000) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2628, "Min Jin Lee", new DateTime(1897, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9010) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2629, "Judith Guest", new DateTime(1934, 2, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9013) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2632, "Mark T. Sullivan (Goodreads Author)", new DateTime(1933, 7, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9023) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2633, "\"Alessandro Baricco", new DateTime(1967, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9026) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2634, "Emem Uko (Goodreads Author)", new DateTime(1955, 6, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9031) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2635, "Iain Pears", new DateTime(1971, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9034) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2636, "Ernesto Sabato", new DateTime(1999, 11, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9036) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2638, "Caroline Kepnes (Goodreads Author)", new DateTime(1946, 9, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9044) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2640, "Ildefonso Falcones", new DateTime(1898, 7, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9049) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2641, " Vol. 1: Unmanned\"", new DateTime(1910, 1, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9051) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2642, "Susan Elizabeth Phillips (Goodreads Author)", new DateTime(1984, 2, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9056) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2643, "Kalki", new DateTime(1956, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9059) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2648, "\"Christiane F.", new DateTime(1996, 12, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9122) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2649, "Judith McNaught", new DateTime(1980, 9, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9124) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2653, "\"Osamu Dazai", new DateTime(1946, 7, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9137) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2657, "Mandy Stadtmiller (Goodreads Author)", new DateTime(1967, 7, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9150) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2661, "Knut Hamsun", new DateTime(2006, 7, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9162) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2663, "Madeline Sheehan (Goodreads Author)", new DateTime(1965, 1, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9170) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2664, "Sally Thorne (Goodreads Author)", new DateTime(1890, 3, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9172) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2666, "George R. Stewart", new DateTime(1982, 2, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9180) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2668, " The Drawing of the Three", new DateTime(1986, 7, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9185) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2669, "Christopher Paul Curtis", new DateTime(1934, 3, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9187) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2670, "Daniel Suarez (Goodreads Author)", new DateTime(1936, 10, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9193) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2672, " Black Curse\"", new DateTime(1961, 3, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9198) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2673, "Edgar Rice Burroughs", new DateTime(1963, 12, 17, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9200) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2675, " My Lovely\"", new DateTime(1907, 10, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9208) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2680, "\"Gertrude Chandler Warner", new DateTime(1940, 12, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9223) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2682, "Conn Iggulden", new DateTime(1905, 9, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9230) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2683, "\"Giuseppe Tomasi di Lampedusa", new DateTime(2006, 12, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9233) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2684, "\"Benedict Freedman", new DateTime(1923, 3, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9235) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2686, "Karen Hesse", new DateTime(1923, 5, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9243) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2689, "Chanda Hahn (Goodreads Author)", new DateTime(2016, 9, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9250) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2690, "Benito Taibo", new DateTime(1931, 9, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9255) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2691, "Barack Obama", new DateTime(1963, 5, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9258) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2692, "\"Ursula K. Le Guin", new DateTime(1976, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9260) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2693, " This Is Now\"", new DateTime(1927, 9, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9263) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2695, "Anna Banks (Goodreads Author)", new DateTime(2002, 8, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9270) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2696, "Alissa Nutting (Goodreads Author)", new DateTime(1973, 8, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9273) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2697, "Stephanie M. Allen (Goodreads Author)", new DateTime(1968, 12, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9275) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2698, " Volume I\"", new DateTime(1990, 8, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9281) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2705, "Kristen Ashley (Goodreads Author)", new DateTime(1909, 4, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9301) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2711, "Randy Loubier (Goodreads Author)", new DateTime(1955, 1, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9365) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2713, "Naomi Klein", new DateTime(1973, 11, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9371) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2716, "\"Ernesto Che Guevara", new DateTime(1937, 12, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9381) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2717, "Anthony Marra (Goodreads Author)", new DateTime(1901, 8, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9384) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2720, "Charles Duhigg (Goodreads Author)", new DateTime(1897, 2, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9394) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2721, "Nick Cave", new DateTime(1925, 3, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9397) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2726, "\"Jenny Carroll", new DateTime(1959, 8, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9414) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2731, "Julia Alvarez (Goodreads Author)", new DateTime(1884, 2, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9430) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2732, "Kelly Braffet (Goodreads Author)", new DateTime(1973, 3, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9432) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2733, "Roger Zelazny", new DateTime(1955, 4, 30, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9435) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2734, "Mary Ramsey (Goodreads Author)", new DateTime(1999, 10, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9440) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2740, "Rick Bragg", new DateTime(1884, 3, 31, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9457) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2742, "Mark Manson (Goodreads Author)", new DateTime(2005, 2, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9465) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2744, "Fisher Amelie (Goodreads Author)", new DateTime(1973, 8, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9471) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2745, "Cora Carmack (Goodreads Author)", new DateTime(1900, 11, 11, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9473) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2746, "\"P.C. Cast (Goodreads Author) (co-author)", new DateTime(1906, 1, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9478) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2748, "\"Joseph Smith Jr.", new DateTime(1935, 1, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9483) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2749, "Jennifer Estep (Goodreads Author)", new DateTime(1995, 2, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9486) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2752, "Tatyana K. Varenko (Goodreads Author)", new DateTime(1969, 1, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9496) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2760, "\"Thucydides", new DateTime(2001, 10, 19, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9521) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2761, "Retta Bono (Goodreads Author) (Editor)", new DateTime(1889, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9524) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2764, "Kate Mosse", new DateTime(1955, 5, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9534) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2765, "Susan Kay", new DateTime(2004, 5, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9537) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2767, "Cristiane Serruya", new DateTime(1970, 7, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9544) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2769, "Laura Gallego García", new DateTime(1964, 10, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9549) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2771, " Bernadette\"", new DateTime(1957, 2, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9557) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2775, "Elizabeth Wurtzel", new DateTime(2003, 1, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9633) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2777, "William Boyd", new DateTime(1962, 7, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9638) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2780, " Thongs and Full-Frontal Snogging\"", new DateTime(1895, 5, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9649) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2781, "Suzanne Young (Goodreads Author)", new DateTime(1942, 2, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9652) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2782, " Claudius/Claudius the God\"", new DateTime(1909, 1, 5, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9657) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2783, "\"Erich Fromm", new DateTime(1971, 3, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9659) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2784, "Gail Tsukiyama", new DateTime(1926, 5, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9662) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2786, "Éric-Emmanuel Schmitt", new DateTime(1965, 9, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9670) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2789, "Jasinda Wilder (Goodreads Author)", new DateTime(1906, 4, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9677) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2790, "Lili Anolik (Goodreads Author)", new DateTime(2002, 1, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9682) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2791, "Donald Miller", new DateTime(1975, 6, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9685) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2792, "Mark Helprin", new DateTime(1906, 6, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9687) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2794, "Claire North", new DateTime(1919, 1, 10, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9695) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2796, "Jessica O'Gorek (Goodreads Author)", new DateTime(1883, 7, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9700) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2797, "Chris Colfer", new DateTime(1945, 12, 7, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9702) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2798, "Oliver Sacks", new DateTime(1894, 2, 27, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2800, "Pete Hamill", new DateTime(2011, 11, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9713) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2802, "Barry Lyga (Goodreads Author)", new DateTime(1886, 1, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9720) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2804, "\"Yasunari Kawabata", new DateTime(1895, 7, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9725) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2809, "Rosamund Hodge (Goodreads Author)", new DateTime(1902, 11, 3, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9741) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2810, "\"Jeph Loeb", new DateTime(1990, 5, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9746) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2811, "\"Banana Yoshimoto", new DateTime(1938, 1, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9748) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2812, "Karen Thompson Walker (Goodreads Author)", new DateTime(1930, 10, 22, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9751) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2815, "\"Jonathan Littell", new DateTime(1975, 12, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9761) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2816, "Dietrich Bonhoeffer", new DateTime(1902, 2, 25, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9763) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2818, "Chelsea M. Cameron (Goodreads Author)", new DateTime(1936, 11, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9771) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2819, " or Ardor: A Family Chronicle\"", new DateTime(1960, 3, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9773) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2820, "Brian Courtney (Goodreads Author)", new DateTime(1978, 7, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9776) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2823, "M.J. Santley (Goodreads Author)", new DateTime(1899, 10, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9786) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2824, "James Joyce", new DateTime(1919, 10, 23, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9789) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2825, "Olivia Cunning (Goodreads Author)", new DateTime(1908, 12, 4, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9791) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2826, "Vernor Vinge", new DateTime(1991, 1, 18, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9797) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2827, "\"Kurt Vonnegut Jr.", new DateTime(1965, 1, 29, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9799) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2829, "Jane Green (Goodreads Author)", new DateTime(2014, 3, 20, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9804) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2830, "Safiur Rahman Mubarakpuri", new DateTime(1940, 5, 21, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9810) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2831, "L.A. Meyer", new DateTime(1999, 10, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9812) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2833, "Elizabeth Haynes (Goodreads Author)", new DateTime(1965, 5, 2, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9817) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2837, "James S.A. Corey (Goodreads Author)", new DateTime(2013, 9, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9830) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2841, "Jana Oliver (Goodreads Author)", new DateTime(1929, 6, 15, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9890) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2845, "Jennifer Probst (Goodreads Author)", new DateTime(1982, 7, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9903) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2846, "Chad Harbach (Goodreads Author)", new DateTime(1970, 4, 26, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9908) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2847, "Derek Landy", new DateTime(1959, 3, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9910) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2848, "Laurie Faria Stolarz (Goodreads Author)", new DateTime(1887, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2850, "Robert Graves", new DateTime(1934, 2, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9920) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2855, "Helen Fielding (Goodreads Author)", new DateTime(1897, 12, 8, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9936) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2856, "\"Per Petterson", new DateTime(2006, 6, 14, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2857, "\"Nicholas Sparks (Goodreads Author)", new DateTime(1896, 1, 28, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9941) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2859, "Poppy Z. Brite (Goodreads Author)", new DateTime(1893, 10, 24, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9948) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2860, "\"Arturo Pérez-Reverte", new DateTime(2003, 5, 1, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9951) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2862, "Francesca Zappia (Goodreads Author)", new DateTime(1999, 4, 12, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9958) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2864, "Jean-Paul Sartre", new DateTime(1906, 2, 13, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9963) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2874, "\"Beth Hoffman (Goodreads Author)", new DateTime(1935, 5, 16, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9996) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2875, "Jonathan Lethem", new DateTime(2008, 8, 6, 0, 14, 18, 423, DateTimeKind.Local).AddTicks(9999) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2876, "Emmy Laybourne (Goodreads Author)", new DateTime(1884, 2, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2879, " Her American Doctors", new DateTime(1931, 9, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(12) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2880, "Lang Leav (Goodreads Author)", new DateTime(2016, 4, 26, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(14) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2881, "Kent Haruf", new DateTime(1918, 12, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(17) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2885, "Daniel James Brown (Goodreads Author)", new DateTime(1986, 7, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(29) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2886, "\"Anna Gavalda", new DateTime(1914, 5, 31, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(35) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2889, "Seth Grahame-Smith", new DateTime(1988, 4, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(42) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2891, "Ellen Schreiber", new DateTime(1982, 5, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(50) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2892, "James Grady (Goodreads Author)", new DateTime(1936, 8, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(52) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2895, "\"Stephenie Meyer", new DateTime(1889, 8, 24, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(63) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2899, "Lisa Kleypas (Goodreads Author)", new DateTime(2007, 3, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(75) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2901, "\"Sadegh Hedayat", new DateTime(1995, 3, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(80) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2902, "Matt Haig (Goodreads Author)", new DateTime(1974, 6, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(85) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2903, "Karl Marlantes", new DateTime(2005, 3, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(132) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2906, "Timothy Miller (Goodreads Author)", new DateTime(1978, 5, 21, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(142) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2907, "Deepak Chaswal (Goodreads Author)", new DateTime(1954, 12, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(145) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2908, "Victor Noble (Goodreads Author)", new DateTime(1998, 5, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(148) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2909, "Daniel Kelly (Goodreads Author)", new DateTime(1993, 11, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(150) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2912, "C.M. Meridian (Goodreads Author)", new DateTime(1894, 4, 20, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(160) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2914, "\"Patricia C. Wrede (Goodreads Author)", new DateTime(1883, 4, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(168) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2915, "Colm Tóibín", new DateTime(1904, 2, 2, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(171) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2916, " Taddy\"", new DateTime(1998, 6, 12, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(173) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2917, "\"W.G. Sebald", new DateTime(1985, 5, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(175) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2919, "Shaun Tan", new DateTime(1916, 1, 28, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(183) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2920, "\"Italo Svevo", new DateTime(1898, 11, 25, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(185) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2922, "Aleatha Romig (Goodreads Author)", new DateTime(1894, 5, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(193) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2926, "Jesse Andrews (Goodreads Author)", new DateTime(1921, 5, 14, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(206) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2927, "\"Carolyn Keene", new DateTime(1957, 12, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(208) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2930, "Robert Muchamore", new DateTime(1892, 10, 27, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(218) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2932, "Jonathan Maberry (Goodreads Author)", new DateTime(1979, 3, 17, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(223) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2933, "Ted Dekker (Goodreads Author)", new DateTime(1918, 12, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(226) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2938, "Christopher Shields (Goodreads Author)", new DateTime(1943, 12, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(244) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2940, "\"Amin Maalouf (Goodreads Author)", new DateTime(2013, 2, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(249) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2941, "Gleb Tsipursky (Goodreads Author)", new DateTime(1939, 11, 22, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(251) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2943, "Lali A. Love (Goodreads Author)", new DateTime(1971, 1, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(259) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2946, "Max Frisch", new DateTime(1946, 1, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(269) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2949, "Margaret George (Goodreads Author)", new DateTime(1926, 1, 15, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(277) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2951, "Jim Carroll", new DateTime(1967, 4, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(285) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2956, "Tiffany Reisz (Goodreads Author)", new DateTime(1923, 6, 17, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(300) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2958, " Flawed Coping Mechanisms", new DateTime(1912, 8, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(308) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2959, "J.P. Ronald (Goodreads Author)", new DateTime(1921, 8, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(310) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2961, "Dennis Cooper", new DateTime(1904, 6, 20, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(315) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2963, "Curtis Sittenfeld (Goodreads Author)", new DateTime(1994, 7, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(323) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2964, "Patricia McCormick", new DateTime(1907, 7, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(325) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2965, "\"Vasily Grossman", new DateTime(1924, 11, 26, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(328) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2967, "Penelope Ward (Goodreads Author)", new DateTime(1932, 8, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(381) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2969, "Lauren Klever", new DateTime(2004, 12, 26, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(386) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2971, "\"Rainer Maria Rilke", new DateTime(1962, 7, 17, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(394) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2972, "Julianne Donaldson (Goodreads Author)", new DateTime(1993, 7, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(396) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2973, "Lorraine Hansberry", new DateTime(1887, 5, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(399) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2979, "C.J. Redwine (Goodreads Author)", new DateTime(2005, 5, 1, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(419) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2982, "Cory Doctorow", new DateTime(1959, 10, 2, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(429) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2983, "\"Jamie McGuire (Goodreads Author)", new DateTime(1958, 1, 1, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(431) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2984, " Book 1\"", new DateTime(1940, 1, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(434) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2985, "\"Benjamin Franklin", new DateTime(1909, 11, 4, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(436) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2986, "Gerald Durrell", new DateTime(1953, 9, 14, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(442) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2989, "Lee Strobel", new DateTime(1963, 4, 4, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(449) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2990, "Paul Scott", new DateTime(1983, 1, 8, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(454) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2993, "John Stuart Mill", new DateTime(1887, 10, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(461) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2994, "\"Mariam Petrosyan", new DateTime(2017, 1, 21, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(467) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2995, "\"Michael Buckley", new DateTime(1976, 6, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(469) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2996, "Marjorie Kinnan Rawlings", new DateTime(1886, 11, 28, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(471) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2997, "Rodman Philbrick", new DateTime(1887, 2, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(474) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 2999, "\"Vincent van Gogh", new DateTime(1889, 7, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(482) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3002, "Edith Pattou (Goodreads Author)", new DateTime(1886, 6, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(492) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3004, "Katherine Allred", new DateTime(1949, 5, 31, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(497) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3006, "Amelia Atwater-Rhodes (Goodreads Author)", new DateTime(1974, 4, 28, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(505) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3016, "Andrew Smith", new DateTime(1916, 10, 25, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(535) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3023, "Behcet Kaya (Goodreads Author)", new DateTime(1991, 4, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(557) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3026, "Joyce Carol Oates", new DateTime(1988, 7, 4, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(567) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3027, "Nelson DeMille (Goodreads Author)", new DateTime(1956, 6, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(570) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3029, "\"N.H. Kleinbaum", new DateTime(1914, 11, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(575) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3030, "\"Alija Izetbegović", new DateTime(1922, 11, 12, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(629) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3031, " Vol. 01: Uzumaki Naruto\"", new DateTime(1993, 8, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(633) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3034, "Catherynne M. Valente (Goodreads Author)", new DateTime(2008, 4, 22, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(643) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3035, "Lynn Flewelling (Goodreads Author)", new DateTime(1972, 2, 19, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(646) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3037, "Mohsin Hamid", new DateTime(1923, 10, 1, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(650) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3038, "O. Henry", new DateTime(1982, 8, 12, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(656) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3040, "Lisa Gillis (Goodreads Author)", new DateTime(1952, 11, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(661) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3042, "Ingrid Law (Goodreads Author)", new DateTime(1914, 5, 19, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(668) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3045, "\"Yukio Mishima", new DateTime(1964, 3, 15, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(676) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3046, "Frank Beddor (Goodreads Author)", new DateTime(1885, 7, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(681) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3050, "Bryn Greenwood (Goodreads Author)", new DateTime(1972, 3, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(693) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3051, "Mario Benedetti", new DateTime(1988, 10, 5, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(696) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3055, "Kate Quinn (Goodreads Author)", new DateTime(1985, 4, 15, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(708) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3056, " the Unbeliever\"", new DateTime(1917, 3, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(711) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3059, "Joseph Boyden", new DateTime(1966, 6, 30, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(721) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3060, "\"Rumi", new DateTime(1956, 4, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(724) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3061, "\"Terry Brooks (Goodreads Author)", new DateTime(1942, 7, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(726) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3062, "Matthew Gregory Lewis", new DateTime(1986, 11, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(732) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3063, "\"Alice Oseman (Goodreads Author)", new DateTime(1892, 12, 25, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(734) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3064, "Andrea Hirata", new DateTime(1973, 2, 12, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(737) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3067, "Marya Hornbacher", new DateTime(1954, 10, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(747) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3068, "Bree Despain (Goodreads Author)", new DateTime(1968, 7, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(749) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3072, "محمد عفيفي", new DateTime(1914, 12, 21, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(762) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3073, "Tiffanie DeBartolo (Goodreads Author)", new DateTime(1982, 6, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(764) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3075, "Aaron-Michael Hall (Goodreads Author)", new DateTime(1950, 6, 7, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(772) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3077, " the Policeman Said\"", new DateTime(1965, 10, 22, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(777) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3078, "Jeff Smith", new DateTime(1996, 4, 14, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(782) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3082, "Sara Raasch (Goodreads Author)", new DateTime(1992, 1, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(795) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3084, "Jenny Lawson (Goodreads Author)", new DateTime(1922, 7, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(800) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3087, "Isabel Allende (Goodreads Author)", new DateTime(1899, 12, 5, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(810) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3089, "Anne Frasier (Goodreads Author)", new DateTime(2014, 4, 24, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(815) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3090, "\"Ingri d'Aulaire", new DateTime(1999, 3, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(820) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3091, "Clarissa Pinkola Estés", new DateTime(1986, 6, 17, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(823) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3092, "Kevin Hearne (Goodreads Author)", new DateTime(2006, 12, 25, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(825) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3093, "Enid Blyton", new DateTime(1892, 7, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(828) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3094, "Joss Stirling (Goodreads Author)", new DateTime(1901, 12, 28, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(879) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3095, "R.K. Lilley (Goodreads Author)", new DateTime(1905, 6, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(882) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3096, "M.G. Wells", new DateTime(1964, 10, 8, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(884) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3098, "\"Shanna Ehrlich (Goodreads Author)", new DateTime(1995, 5, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(893) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3102, "Elizabeth Hunter (Goodreads Author)", new DateTime(1915, 2, 2, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(905) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3103, "Joshua Rem (Goodreads Author)", new DateTime(1908, 9, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(908) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3105, "Eran Gadot (Goodreads Author)", new DateTime(1932, 4, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(913) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3108, "Nancy Horan", new DateTime(1896, 2, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(923) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3110, "Ann Leckie (Goodreads Author)", new DateTime(1953, 6, 17, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(930) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3111, "\"Georges Perec", new DateTime(1945, 7, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(933) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3113, "Oliviu Crâznic (Goodreads Author)", new DateTime(2015, 9, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(938) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3114, "Glenn Beck", new DateTime(1889, 8, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(944) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3115, "Jan Karon", new DateTime(1957, 2, 24, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(946) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3116, "\"A.P.J. Abdul Kalam", new DateTime(2016, 8, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(948) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3117, "Carol Wyer (Goodreads Author)", new DateTime(2008, 1, 14, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(951) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3118, "Tyler Chase (Goodreads Author)", new DateTime(1946, 8, 21, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(956) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3120, "Alessandro Baricco", new DateTime(1896, 11, 19, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(961) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3123, "\"Gleb Tsipursky (Goodreads Author)", new DateTime(1907, 1, 20, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(971) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3127, " Cognitive Biases", new DateTime(2006, 9, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(984) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3129, " Dreams", new DateTime(1996, 3, 16, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(989) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3131, "Douglas Coupland (Goodreads Author)", new DateTime(1994, 7, 9, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(997) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3132, " Terror", new DateTime(1998, 8, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1000) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3133, "Joan Didion", new DateTime(1971, 3, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1002) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3135, "J.R. Moehringer", new DateTime(1984, 1, 22, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1010) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3136, " Vol. 1: A Critical Analysis of Capitalist Production\"", new DateTime(1915, 1, 18, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1012) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3137, "A. Meredith Walters (Goodreads Author)", new DateTime(1938, 11, 21, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1014) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3138, "Daniel Mangena (Goodreads Author)", new DateTime(1931, 7, 5, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1020) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3140, "Mary Kubica (Goodreads Author)", new DateTime(1966, 1, 1, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1025) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3141, "Chevy Stevens (Goodreads Author)", new DateTime(1973, 4, 6, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1027) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3142, "\"Alexis de Tocqueville", new DateTime(1900, 2, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1032) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3145, "Mara Powers (Goodreads Author)", new DateTime(1883, 12, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1040) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3148, "\"Wildbow", new DateTime(1963, 6, 2, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1050) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3149, "Jenna Blum (Goodreads Author)", new DateTime(2009, 8, 2, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1052) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3150, "Jayde Scott (Goodreads Author)", new DateTime(1964, 5, 4, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1058) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3154, "Christina Mercer (Goodreads Author)", new DateTime(1989, 1, 8, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1070) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3155, " Lex\"", new DateTime(1886, 6, 12, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1073) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3157, "Lisa Tawn Bergren (Goodreads Author)", new DateTime(1893, 12, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1079) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3158, "\"Meša Selimović", new DateTime(1942, 9, 3, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1129) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3159, "Alexandra Ripley", new DateTime(2003, 4, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1132) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3160, "Andrew R. Williams (Goodreads Author)", new DateTime(1966, 5, 25, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1134) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3161, "\"Oliver Pötzsch (Goodreads Author)", new DateTime(2008, 5, 13, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1137) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3165, "David Baldacci (Goodreads Author)", new DateTime(1949, 3, 10, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1150) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3168, "Slavomir Rawicz", new DateTime(1987, 4, 4, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1160) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3170, "Bill Morgenstein", new DateTime(1955, 9, 11, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1168) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3176, "James M. Cain", new DateTime(1897, 4, 29, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1185) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3177, "Tamara Ireland Stone (Goodreads Author)", new DateTime(1907, 11, 22, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1187) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3178, "Yaa Gyasi", new DateTime(2010, 12, 23, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1192) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3179, "Stephen Westaby", new DateTime(1989, 3, 14, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1195) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3182, "Rebecca Maizel (Goodreads Author)", new DateTime(1885, 6, 27, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1205) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3187, "\"Aristotle", new DateTime(2013, 2, 1, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1220) });

            migrationBuilder.InsertData(
                table: "Authors",
                columns: new[] { "Id", "AuthorName", "DateOfBirth" },
                values: new object[] { 3188, "Jonathan Tropper", new DateTime(1907, 1, 28, 0, 14, 18, 424, DateTimeKind.Local).AddTicks(1222) });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1, "Scholastic Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2, "870" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3, "Harper Perennial Modern Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 4, "279" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 5, "\"Little" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 6, "Alfred A. Knopf" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 7, "" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 8, "767" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 9, "Ballantine Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 10, "Warner Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 11, "Dutton Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 12, "Del Rey" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 13, "HarperCollins Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 14, "['Heathcliff'# 'Catherine Earnshaw'# 'Edgar Linton'# 'Isabella Linton'# 'Hindley Earnshaw'# 'Ellen (Nelly) Dean'# 'Mr. Lockwood'# 'Hareton Earnshaw'# 'Catherine Linton'# 'Linton Heathcliff']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 15, "Anchor" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 16, "Vintage Books USA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 17, "272" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 21, "Simon & Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 22, "Katherine Tegen Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 23, "Penguin Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 26, "671" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 27, "MTV Books/Pocket Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 28, "200" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 29, "Margaret K. McElderry Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 31, "Amy Einhorn Books/G.P. Putnam's Sons" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 32, "Signet Book" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 33, "309" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 37, "Zola Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 39, "HarperPerennial / Perennial Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 40, "417" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 41, "Back Bay Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 43, "Disney Hyperion Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 44, "Children's Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 45, "Riverhead Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 46, "Square Fish" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 47, "Bantam" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 50, "Puffin Books (US/CAN)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 51, "Red Fox" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 52, "Random House Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 54, "Seal Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 55, "489" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 56, "Algonquin Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 57, "331" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 58, "Dial Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 59, "288" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 60, "371" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 61, "Anchor Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 62, "Ember" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 64, "Ace Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 65, "NAL Trade" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 66, "1153" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 67, "Oxford University Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 68, "Avon Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 70, "Signet Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 72, "Arthur A. Levine Books / Scholastic Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 73, "Signet" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 74, "\"['Princess Ekaterina \"\"Kitty\"\" Aleksandrovna Shcherbatskaya'# 'Anna Arkadyevna Karenina'# 'Count Aleksei Kirillovich Vronsky'# 'Konstantin \"\"Kostya\"\" Dmitrievitch Levin'# 'Prince Stepan \"\"Stiva\"\" Arkadyevitch Oblonsky']\"" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 75, "Dell Publishing Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 76, "Washington Square Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 77, "240" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 79, "465" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 81, "Houghton Mifflin Harcourt" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 84, "W. W. Norton & Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 87, "Harper Perennial" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 88, "Razorbill" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 89, "152" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 91, "Alfred A. Knopf Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 93, "1168" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 94, "435" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 95, "Scribner" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 96, "Grand Central Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 97, "145" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 98, "\"Doubleday & Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 100, "Black Swan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 101, "\"['Elijah'# 'Stubb'# 'Captain Ahab'# 'Ishmael'# 'Queequeg'# 'Starbuck'# 'Tashtego'# 'Dough-boy'# 'Flask'# 'Daggoo'# 'Fedallah'# 'Pippin (\"\"Pip\"\")'# 'Moby Dick'# 'Mapple Priest'# 'Peleg'# 'Bildad'# 'Fleece'# 'Perth'# 'Peter Coffin'# 'Aunt Charity'# 'Mrs Hussey']\"" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 102, "St. Martin's Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 104, "734" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 105, "481" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 106, "Scholastic Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 108, "Picador USA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 109, "123" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 111, "Penguin Group DAW" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 112, "New English Library (Hodder & Stoughton)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 115, "176" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 119, "Speak" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 120, "487" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 121, "Vintage" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 122, "Puffin Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 123, "Warner" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 124, "320" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 125, "536" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 126, "Yearling" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 127, "341" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 131, "W. W. Norton Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 132, "Hyperion" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 133, "391" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 135, "William Morrow" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 136, "1276" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 137, "Pocket Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 138, "263" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 139, "Scholastic" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 140, "206" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 142, "New English Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 143, "Disney ● Hyperion Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 144, "2700" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 147, "296" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 148, "366" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 150, "348" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 152, "HarperCollins Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 155, "Harper Collins Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 156, "Del Rey Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 158, "Prestwick House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 160, "Amistad" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 161, "Modern Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 162, "154" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 164, "32" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 169, "Howard Publishing Co" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 170, "188" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 171, "Hyperion Books for Children" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 173, "Walker Books Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 174, "Rupa & Co" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 177, "Hyperion Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 178, "Penguin Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 180, "172" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 181, "112" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 182, "['Emma Bovary'# 'Charles Bovary'# 'Monsieur Homais'# 'Berthe Bovary'# 'Rodolphe Boulanger'# 'Léon Dupuis']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 183, "256" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 184, "HarperCollins" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 185, "['Young Adult'# 'Fiction'# 'Fantasy'# 'Dystopia'# 'Science Fiction'# 'Romance'# 'Adventure'# 'Teen'# 'Action'# 'Novels']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 186, "44" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 187, "503" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 188, "Delacorte Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 190, "['Oliver Twist'# 'Artful Dodger'# 'Rose Maylie']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 196, "521" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 198, "Arrow Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 199, "882" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 201, "406" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 202, "Dell" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 203, "Mariner Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 205, "Laurel Leaf Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 206, "242" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 208, "Sceptre" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 209, "David Fickling Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 212, "Doubleday" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 215, "Crown" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 218, "394" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 219, "Pan Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 220, "HarperTeen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 221, "40" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 224, "Bloomsbury USA Children's" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 226, "\"Simon & Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 228, "143" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 229, "Penguin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 230, "9780000000000" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 231, "197" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 233, "Plume/Penguin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 235, "Harpercollins Childrens Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 238, "Simon Pulse" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 239, "\"Simon & Schuster Children's" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 241, "Pocket" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 242, "360" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 243, "William Morrow; 1ST edition" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 244, "Scholastic Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 245, "607" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 246, "Feiwel & Friends" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 247, "Penguin Signet" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 250, "Vintage International" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 251, "Windblown Media" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 252, "306" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 253, "291" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 255, "204" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 256, "448" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 257, "Andrews McMeel Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 260, "Harper Trophy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 261, "Ace" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 262, "HMH Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 264, "566" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 269, "Jamie McGuire" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 270, "Simon Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 271, "Eio Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 274, "\"Farrar" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 275, "['Classics'# 'Fiction'# 'Russia'# 'Russian Literature'# 'Literature'# 'Novels'# 'Philosophy'# '19th Century'# 'Classic Literature'# 'Historical Fiction']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 278, "ReganBooks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 279, "William Morrow Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 281, "563" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 282, "Wordsworth Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 283, "444" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 285, "Bantam Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 286, "129" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 287, "146" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 289, "Broadway Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 293, "St. Martin's Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 294, "Harcourt" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 295, "Gramercy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 296, "Atria Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 300, "Thorndike Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 303, "467" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 305, "149" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 307, "403" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 308, "Princeton University Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 309, "DAW Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 310, "نشر داستان" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 311, "Elibron Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 312, "St. Martin's Griffin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 313, "Vintage Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 314, "Dial Press Trade Paperback" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 318, "Random House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 319, "The Writer's Coffee Shop Publishing House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 320, "Crown Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 321, "904" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 323, "Bloomsbury USA Childrens" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 326, "194" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 333, "Plume" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 334, "Laurel Leaf" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 336, "HarperCollins Children's Book's" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 341, "Disney-Hyperion Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 342, "Harper Collins" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 343, "Tor Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 344, "Dutton Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 345, "Scholastic Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 346, "Putnam Juvenile" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 351, "Vintage Contemporaries / Random House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 354, "208" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 356, "307" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 359, "Grove Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 360, "252" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 362, "245" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 363, "Farrar Straus Giroux" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 367, "Knopf Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 368, "Penguin Group (USA)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 369, "213" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 370, "دار ليلى كيان كورب" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 376, "488" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 380, "Health Communications Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 382, "[]" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 383, "Warner Books (NY)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 385, "Entangled Teen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 387, "Bantam/Spectra" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 388, "Simon & Schuster Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 389, "McClelland & Stewart" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 392, "HarperTorch" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 394, "76" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 396, "New Millennium Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 397, "Harper" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 400, "510" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 402, "490" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 407, "Dell Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 408, "199" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 409, "Henry Holt and Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 410, "Arthur A. Levine Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 411, "Castle Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 414, "['Classics'# 'Fiction'# 'Horror'# 'Science Fiction'# 'Mystery'# 'Gothic'# 'Fantasy'# 'Literature'# '19th Century'# 'School']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 417, "RHCP Digital" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 418, "Heinemann Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 420, "308" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 422, "Dramatists Play Service" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 428, "Faber & Faber" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 429, "Dutton Juvenile" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 430, "Bantam Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 432, "Quirk" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 435, "Scribner Book Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 436, "492" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 437, "Quiet Vision Pub" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 440, "Fawcett Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 442, "351" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 445, "Disney-Hyperion" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 447, "Bloomsbury" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 448, "Bloomsbury Publishing PLC" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 449, "216" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 452, "Scribe" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 454, "Multnomah" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 455, "293" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 459, "310" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 460, "Grove" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 461, "Viking" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 462, "251" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 463, "248" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 466, "['Pierre Bezukhov'# 'Natasha Rostova'# 'Nikolai Rostov'# 'Ilya Rostov'# 'Petya Rostov'# 'Helene Kuragina'# 'Anna Scherer'# 'Lise Bolkonskaya'# 'Platon Karataev'# 'Vasili Denisov'# 'Anna Drubetskaya'# 'Nikolai Bolkonsky'# 'Kirill Bezukhov'# 'Mikhail Kutuzov'# 'Petr Bagration'# 'Dolgorukov'# 'Weyrother'# 'Tikhon'# 'Zherkov'# 'Suvorov'# 'Rostova'# 'Joseph Alexeevich'# 'Bezukhov'# 'Vera Rostova'# 'Prince Andrey Bokonsky'# 'Boris Drubetskoy'# 'Sonya Rostova'# 'Napoleon Bonaparte'# 'Anatole Kuragin'# 'Mademoiselle Bourienne'# 'Maria Bolkonskaya']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 470, "338" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 474, "Harvest Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 476, "224" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 477, "Atom" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 483, "Delta" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 484, "468" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 488, "Digireads.com" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 493, "Matador" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 494, "162" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 496, "G.P. Putnam's Sons Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 497, "Harlequin Teen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 498, "CreateSpace" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 501, "716" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 504, "Penmore Press LLC" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 505, "867" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 509, "Houghton Mifflin Co. (Boston/NY)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 512, "Spectra" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 514, "Simon and Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 515, "Berkley" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 516, "Arrow" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 517, "192" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 519, "316" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 520, "Citadel" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 522, "Avon" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 523, "349" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 524, "Walker Childrens" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 528, "672" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 530, "Viking Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 531, "Roc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 532, "Penguin Group Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 533, "Viking Penguin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 536, "\"Random House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 538, "['boy'# 'Hero (Much ado)'# 'Ursula (Shakespeare)'# 'Don Pedro'# 'Beatrice (diverse works)'# 'Claudio'# 'Benedick'# 'Don John'# 'Leonato'# 'Dogberry'# 'Friar Francis'# 'Verges'# 'Magaret'# 'Balthazar (Much Ado About Nothing)'# 'Borachio'# 'Conrade'# 'A Sexton'# 'The Watch'# 'Innogen'# 'Antonio']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 540, "St. Martins Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 550, "Knopf" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 553, "Garden Heights Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 555, "Skyscape" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 558, "HarperCollins e-books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 559, "Candle Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 562, "335" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 563, "Harper & Row (NYC/Evanston)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 564, "Bloomsbury Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 565, "Wyatt Book" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 566, "Hachette Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 568, "104" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 570, "Disney Hyperion" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 577, "323" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 578, "Dutton" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 581, "Penguin Roc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 583, "198" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 584, "482" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 586, "Perfection Learning" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 591, "Puffin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 596, "Harcourt Brace" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 597, "128" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 598, "74" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 599, "Random House Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 600, "Forge Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 601, "Atlantic Monthly Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 603, "243" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 604, "Walker Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 605, "Simon & Schuster (NYC)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 607, "Mira" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 608, "497" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 609, "322" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 610, "182" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 613, "342" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 617, "656" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 621, "Candlewick Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 626, "Virago Press Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 628, "623" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 631, "Norton" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 632, "260" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 634, "Simon & Schuster Simon Pulse" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 635, "Orion" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 640, "Orb Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 643, "75" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 648, "Simon & Schuster Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 649, "Griffin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 650, "Bantam Spectra" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 651, "Bloomsbury Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 656, "Spectra Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 657, "Dial Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 660, "Dover Publications" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 663, "319" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 667, "Corgi" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 672, "No Exit Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 676, "284" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 677, "Kyle Keyes" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 678, "1443" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 679, "706" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 681, "56" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 683, "325" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 684, "The Church of Jesus Christ of Latter-day Saints" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 685, "Gollancz" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 687, "Vintage Crime" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 691, "Orion Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 692, "\"Henry Holt and Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 698, "NAL Jam" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 701, "Onyx" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 703, "Createspace" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 705, "Orbit" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 707, "Wednesday Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 711, "Starscape" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 712, "442" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 714, "474" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 715, "HarperTrophy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 717, "NAL" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 718, "Gramercy Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 719, "Fourth Estate Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 725, "The Penguin Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 726, "334" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 727, "368" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 728, "565" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 729, "Arena Verlag" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 730, "Hodder & Stoughton" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 732, "Corgi books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 733, "Harper Voyager" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 735, "Random House Vintage" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 737, "797" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 740, "Gallery Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 742, "400" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 743, "['Classics'# 'Fiction'# 'Literature'# '19th Century'# 'Victorian'# 'Novels'# 'British Literature'# 'Historical Fiction'# 'Classic Literature'# 'English Literature']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 744, "Del Rey (Random House)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 749, "Delacorte Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 750, "Createspace Independent Publishing Platform" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 760, "Sea Breeze Publishing LLC" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 761, "3.67" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 762, "iUniverse" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 765, "617" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 766, "Earthlight (UK)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 772, "Methuen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 774, "80" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 776, "William Morrow Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 778, "315" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 781, "766" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 784, "Ace Book" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 786, "Penguin Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 787, "\"Bantam Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 789, "Chatto & Windus" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 794, "357" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 795, "Balzer + Bray" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 797, "Omnific Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 801, "Penguin Books Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 803, "Tom Doherty Associates" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 805, "Arrow Books Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 813, "Harpertorch" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 818, "1050" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 826, "Zondervan Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 827, "303" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 828, "Evergreen Farm" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 833, "Berkley Trade" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 842, "97" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 844, "Ecco" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 852, "147" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 854, "729" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 858, "House of Stratus" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 860, "370" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 861, "Vision" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 863, "Shadow Mountain" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 866, "Black Dog & Leventhal Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 868, "Penguin Berkley" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 880, "Broadway Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 882, "Bloomsbury Childrens Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 883, "Plume Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 884, "Northfield Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 885, "Harvill Secker" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 888, "845" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 890, "704" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 894, "Shaye Areheart Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 896, "77" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 905, "Jonathan Cape" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 907, "Sterling" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 909, "327" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 917, "Atlantic Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 918, "Hyperion Book CH" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 924, "Viking Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 925, "72" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 937, "Bloomsbury Childrens" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 941, "273" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 942, "469" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 946, "HarperCollins HarperTorch" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 949, "['Prospero'# 'Andrew Carnegie'# 'Miranda'# 'Ariel (Shakespeare)'# 'Caliban'# 'Ferdinand'# 'Alonso'# 'Antonio'# 'Sebastian'# 'Gonzalo'# 'Trinculo & Stephano'# 'Boatswain']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 954, "Definitions" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 955, "Balboa Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 961, "Atheneum Books for Young Readers: Richard Jackson Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 965, "220" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 967, "Quercus Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 968, "Philomel" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 969, "Penguin ROC" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 970, "Viking's Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 974, "Algonquin Round Table Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 977, "Philomel Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 988, "B E Trice Pub" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 989, "689" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 992, "217" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 993, "52" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1001, "352" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1002, "165" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1006, "Crossway Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1007, "64" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1012, "318" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1013, "Harcourt Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1014, "230" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1016, "159" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1017, "290" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1020, "580" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1021, "Spencer Hill Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1024, "Crown Publishing Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1025, "Forever" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1026, "Thienemann" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1028, "Entangled Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1032, "Tor Fantasy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1033, "Scribner Paperback Fiction" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1037, "635" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1051, "909" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1053, "340" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1059, "267" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1061, "1182" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1062, "120" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1063, "Chattercreek" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1067, "Abbi Glines" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1069, "180" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1074, "750" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1075, "\"Clayton" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1079, "73" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1082, "Hodder & Stoughton Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1085, "Doubleday Nan A. Talese" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1086, "Penguin Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1090, "608" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1093, "New Directions" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1094, "Signet/New American Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1095, "278" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1096, "Starfire" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1097, "512" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1099, "662" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1103, "699" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1107, "Corgi Childrens" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1109, "\"Sarah Crichton Books / Farrar" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1115, "347" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1118, "Plaza y Janés" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1119, "531" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1129, "\"Oxford University Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1130, "411" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1131, "J. Lynn" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1132, "Doubleday Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1133, "Turtleback" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1134, "599" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1135, "Scariodintt Publisharys" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1139, "367" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1143, "Berkley Publishing Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1144, "jimmy patterson" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1151, "Chicken House Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1155, "589" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1156, "Between the Lines Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1159, "600" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1162, "337" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1167, "Ballantine Del Rey" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1174, "McSweeney's" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1181, "859" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1186, "Atheneum Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1187, "422" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1190, "Berkley Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1191, "292" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1192, "160" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1193, "Deborah LeBlanc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1194, "Chicken House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1197, "Amulet Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1198, "Free Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1204, "336" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1205, "Aladdin Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1213, "BookBaby" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1214, "Sarah Crichton Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1216, "Eos" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1234, "Simon Schuster Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1235, "409" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1237, "96" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1238, "Voyager" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1239, "317" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1247, "Harcourt Brace Jovanovich" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1248, "\"William Morrow and Co." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1249, "Smashwords" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1250, "Quirk Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1253, "G.P. Putnam’s Sons" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1255, "445" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1258, "Tom Doherty Tor Fantasy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1259, "Tate Publishing & Enterprises" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1260, "HarperVoyager" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1261, "Jove" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1263, "520" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1266, "Harlequin TEEN" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1267, "Amazon" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1268, "496" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1269, "Fawcett" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1277, "Voyager Classics / Harper Collins" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1278, "New World Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1280, "Amazon Media EU S.à r.l." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1284, "392" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1285, "\"Amazon Digital Services" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1288, "\"Crown Publishing Group/Random House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1292, "1952" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1294, "169" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1300, "191" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1301, "\"Scholastic" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1302, "Ballantine Books (NY)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1305, "233" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1307, "Carroll & Graf Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1308, "Candlewick" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1314, "Atria" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1315, "Random House Vintage Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1316, "276" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1319, "Bigfoot Publications Pvt. Ltd." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1321, "464" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1323, "Viking Adult" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1335, "\"Mulholland Books / Little" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1337, "Applewood Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1349, "Time Warner Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1351, "783" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1353, "350" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1354, "Jimmy Patterson" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1357, "Authorhouse" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1360, "1258" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1363, "432" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1364, "Aladdin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1366, "CJ Roberts" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1373, "Berkley Sensation" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1379, "Atria/Emily Bestler Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1383, "Harper Collins Publisher" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1386, "218" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1387, "222" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1394, "528" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1395, "654" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1396, "890" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1397, "Kensington" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1399, "555" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1401, "506" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1403, "480" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1405, "BMG/ Akula Media Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1408, "Independently Published" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1409, "New American Library" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1411, "Christopher Matthews Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1416, "Karen Prince" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1418, "Bloomsbury YA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1419, "438" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1421, "732" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1423, "Zondervan Publishing Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1427, "544" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1428, "598" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1429, "Random House Audio" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1430, "132" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1432, "Flatiron Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1433, "502" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1435, "['Nonfiction'# 'Food'# 'Memoir'# 'Gardening'# 'Health'# 'Environment'# 'Cooking'# 'Audiobook'# 'Nature'# 'Biography']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1437, "577" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1438, "Reagan Arthur Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1441, "RosettaBooks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1443, "805" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1448, "153" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1449, "Harlequin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1450, "421" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1451, "Random House Trade" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1457, "Intermix (Penguin Group (USA) LLC)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1458, "817" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1460, "359" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1461, "['Antigone'# 'Ismene (sister of Antigone)'# 'Oedipus']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1462, "500" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1464, "Augustine Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1466, "477" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1468, "59" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1472, "Little Brown/Poppy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1473, "Pamela Dorman Books / Viking" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1481, "Amazon Digital Services" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1483, "Bandura Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1486, "Harper Perennial Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1487, "Scribner / Simon & Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1488, "Beacon Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1490, "414" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1493, "Le Livre de Poche" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1497, "399" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1498, "209" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1503, "48" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1510, "Mulholland Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1513, "Describe Write" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1523, "Pearson Longman" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1526, "دار الشروق" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1527, "Anagrama" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1529, "Begginner Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1530, "431" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1533, "Greenwillow Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1534, "1024" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1535, "Deodand" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1536, "G.P. Putnam’s Sons Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1539, "Outskirts Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1543, "179" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1547, "Egmont Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1548, "Hyperion/Miramax" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1551, "Random House Trade Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1552, "Broad Reach Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1554, "Gingersnap Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1557, "229" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1558, "Bowen Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1559, "Picador" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1562, "Dial Books For Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1566, "Sphere" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1585, "Fawcett Crest" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1588, "419" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1591, "\"Pocket Books / Simon & Schuster" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1593, "['Fiction'# 'Classics'# 'France'# 'Literature'# 'French Literature'# 'Philosophy'# 'Novels'# '20th Century'# 'Classic Literature'# 'Literary Fiction']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1595, "Henry Holt" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1597, "Liminal Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1601, "1500" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1604, "De Fallois" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1607, "Twelve" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1610, "Talion Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1615, "Rumble Lit Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1616, "Dell Laurel-Leaf" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1621, "592" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1622, "Penguin Books Limited" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1623, "Owl Books (Henry Holt)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1624, "Musa" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1627, "WIld Child Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1630, "Tor" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1632, "Viking Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1633, "579" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1639, "679" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1643, "289" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1645, "461" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1650, "Pan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1655, "Self-published" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1657, "Vintage Crime/Black Lizard" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1662, "455" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1668, "Firebird" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1673, "America Star Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1676, "iUniverse.com" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1680, "Zatpix" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1685, "Lulu.com" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1687, "DAW" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1689, "LR Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1690, "681" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1691, "Simon & Schuster Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1693, "225" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1700, "Vintage Contemporaries" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1708, "Collins" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1710, "Tate Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1713, "Book Guild Limited" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1720, "Broadview Press Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1724, "Kiss Me Publications" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1725, "383" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1730, "Pocket Star" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1732, "Liminal Books (Between the Lines Publishing)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1736, "Skinny Leopard Media" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1737, "158" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1739, "287" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1743, "Celadon Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1746, "535" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1751, "Harper Collins Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1752, "264" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1754, "Lentera Dipantara" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1756, "Arena" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1766, "self" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1767, "Neurotica Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1774, "Dial" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1778, "Beau Coup Publishing llc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1779, "472" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1781, "Flux" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1791, "239" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1792, "Hodder Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1793, "HarperCollins Perennial" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1795, "Inner Light Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1796, "Hartorch" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1802, "Luna Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1811, "420" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1813, "Thomas & Mercer" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1816, "Linda Watkins" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1819, "Public Domain Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1822, "Blue Triangle Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1823, "Amber-Allen Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1851, "Sterling Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1852, "Harmony" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1856, "Tor Teen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1859, "Ivy Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1860, "Edebe" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1865, "Faber Faber Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1870, "Disney/Hyperion" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1871, "The Dial Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1873, "Lake Union Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1876, "Bookcraft Pubs" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1877, "\"Alfred A. Knopf" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1881, "Pageturners" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1882, "730" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1884, "Finch Hill Publishing Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1889, "353" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1890, "131" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1897, "HarperCollins / Katherine Tegen Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1898, "356" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1906, "Orion Publishing Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1908, "Melville House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1911, "863" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1914, "499" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1921, "258" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1923, "912" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1933, "269" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1934, "Bloomsbury USA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1937, "Faber Faber" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1938, "295" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1944, "Canongate Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1946, "931" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1947, "Hekate Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1949, "HarperPrism" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1951, "Portfolio Penguin" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1953, "629" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1959, "241" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1967, "294" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1974, "644" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1978, "Wizards of the Coast" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1981, "Poppy/Little Brown" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1982, "440" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1985, "Yapı Kredi Yayınları" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1989, "Arrow books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1991, "708" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1992, "564" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1995, "Westland" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1998, "TarcherPerigee" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 1999, "Wendy Lamb Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2003, "640" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2009, "Nan A. Talese" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2016, "Green Ivy" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2017, "Anthony Ryan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2018, "Punto de lectura" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2019, "259" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2024, "Spiegel & Grau" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2025, "Tyndale House Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2028, "مكتبة العبيكان" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2030, "Ameron" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2031, "Permuted Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2034, "364" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2041, "Highlight Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2043, "Longman Schools Division (a Pearson Education Company)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2053, "Picador Paper" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2057, "135" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2058, "Knopf Publishing Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2061, "Usborne Publishing Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2062, "Inkyard Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2063, "26" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2064, "Self-Realization Fellowship Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2070, "412" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2073, "Henry Holt Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2075, "CreateSpace Independent Publishing Platform" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2088, "Miramax Books/Hyperion Books for Children" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2090, "HarperOne" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2092, "Montlake Romance" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2098, "271" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2103, "University of New Mexico Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2107, "Ingram" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2113, "World Castle Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2119, "953" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2129, "New Directions Publishing Corporation (NY)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2131, "Hachette Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2137, "Jay Crownover Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2145, "Hachette Book Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2148, "Quill Tree Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2156, "Harper Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2157, "20" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2167, "398" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2174, "Aussieicon Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2177, "Panagiota Kalofolia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2183, "Lynessa Layne Literature" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2186, "Open Road Media" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2191, "454" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2195, "221" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2199, "Overlook Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2200, "4.35" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2201, "true bird publishing llc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2203, "384" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2206, "Marion Boyars Publishers Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2207, "Canongate Us" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2209, "463" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2212, "['Philosophy'# 'Classics'# 'Nonfiction'# 'History'# 'Biography'# 'School'# 'Politics'# 'Ancient'# 'Literature'# 'College']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2217, "275" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2218, "Hekate Publishing Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2221, "Nora Sakavic" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2224, "['Leonidas'# 'Xerxes I of Persia'# 'Themistocles'# 'Thales of Miletus'# 'Cyrus the Great'# 'Croesus'# 'Aphrodite'# 'Megabazus'# 'Leutychides'# 'Ister'# 'Maeandrius'# 'Histiaios'# 'Harpagos'# 'Kypselos'# 'Artaphrenes'# 'Massagetai'# 'Adrastos'# 'Kandaules'# 'Hermotimos'# 'Gorgos'# 'Kleombrotos'# 'Hekataios'# 'Mardonlos'# 'Bagaios'# 'Labda'# 'Kepheus'# 'Necos'# 'Apollo (Greek god)'# 'Artabazos I of Phrygia'# 'Mardonius'# 'Pausanias of Sparta'# 'Solon (of Athens)'# 'Amasis II'# 'Gyges of Lydia'# 'Candaules of Lydia'# 'Psamtik III'# 'Psamtik I'# 'Cambyses I'# 'Tomyris (Massagetean Queen)'# 'Artemisia I of Caria'# 'Eurybiades'# 'Leotychidas'# 'Hydarnes II'# 'Artyphius']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2225, "['Orestes'# 'Io . . .'# 'Electra'# 'Clytemnestra (wife of Agamemnon)'# 'Elektra'# 'Cassandra'# 'Agamemnon']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2226, "Allison & Busby" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2228, "Rerum Publishing House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2229, "Alfaguara" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2232, "Penguin Group Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2234, "390" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2235, "452" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2237, "Berkley Hardcover" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2239, "Zebra" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2246, "1344" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2250, "Bloomsbury Methuen Drama" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2255, "Itoh Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2256, "214" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2260, "Mountain Literary" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2267, "\"Outskirts Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2270, "386" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2272, "Between the Lines" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2283, "JRH Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2286, "Doubleday Canada" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2295, "475" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2297, "Future Corp." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2298, "610" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2300, "11" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2302, " more…\"" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2307, "238" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2311, "Pocket Books/MTV Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2315, "300" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2317, "404" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2321, "Top Shelf Productions" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2324, "Elle Kennedy Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2330, "Orchard Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2333, "Touchstone Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2334, "Terry Reid" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2335, "SuperNOWA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2344, "38" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2348, "Harry N. Abrams" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2353, "Pamela Dorman Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2356, "Mya Robarts" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2357, "126" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2364, "Counterpoint" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2365, "Doc Squared Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2368, "EgmontUSA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2369, "Kindle" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2370, "\"Crush Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2379, "517" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2383, "DAW Books Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2390, "Bev Stout" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2400, "PanMacmillan Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2401, "Theatre Communications Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2403, "K.J. Soze" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2406, "Riverhead Hardcover" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2407, "Splinter" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2410, "Scholastic/Graphix" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2411, "Little Brown and Company" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2414, "\"Dell Publishing Co." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2416, "Penguin Group Viking Adult" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2417, "393" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2418, "261" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2419, "Earthlight" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2421, "Arlington House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2422, "466" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2426, "Penguin Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2427, "389" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2434, "Trophy Pr" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2436, "Imzadi Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2438, "Margaret K. McElderry" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2451, "Dutton Adult" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2452, "456" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2460, "538" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2462, "JKB Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2470, "\"Windsor-Brooke Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2476, "138" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2480, "Crown Archetype" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2482, "دار ميريت" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2485, "Srishti Publishers & Distributers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2487, "3417" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2493, "58" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2495, "212" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2504, "MJF Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2507, "Mira Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2509, "344" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2515, "210" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2522, "All Due Respect" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2523, "Warne" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2526, "Papoti Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2532, "Luso-Brazilian Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2536, "Eirelander Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2538, "Simon & Schuster Children's Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2541, "Betrayal of Faith" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2544, "A Pet Banana Production" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2550, "Turtleback Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2551, "246" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2558, "Millenium" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2566, "Thienemanns" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2569, "Tyndale Momentum" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2576, "AA World Services" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2581, "hpmor.com & fanfiction.net" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2584, "KDP" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2586, "Headline" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2587, "Jonathan Cape Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2593, "Del Rey / Ballantine" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2596, "186" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2601, "\"Riverhead Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2605, "Lulu Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2607, "['Joe Chill'# 'James Gordon'# 'James Gordon# Jr.'# 'Carmine Falcone'# 'Selina Kyle'# 'Barbara Kean'# 'Gillian B. Loeb'# 'Sarah Essen'# 'Bruce Wayne']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2608, "HarperTempest" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2611, "Wildside Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2613, "596" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2617, "Roy Huff" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2618, "\"P&S" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2630, "232" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2636, "Sudamericana" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2637, "MacMillan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2640, "Grijalbo" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2641, "['Yorick Brown'# 'Agent 355'# 'Hero Brown']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2643, "வானதி பதிப்பகம்" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2647, "Penguin Group NAL Trade" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2650, "Point" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2658, "Kensington Publishing Corporation" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2663, "Madeline Sheehan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2665, "HarperCollins William Morrow" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2672, "504" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2687, "Pantheon Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2689, "Chanda Hahn" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2690, "Destino" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2694, "Pocket Star Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2698, "1059" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2700, "Tyndale House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2704, "Viking Juvenile" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2709, "Random House Australia" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2713, "Metropolitan Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2716, "175" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2717, "Hogarth" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2719, "Flamingo" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2734, "Diamond Life Presents" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2738, "Vintage Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2743, "Hyperion Paperbacks" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2744, "Fisher Amelie" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2748, "88" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2749, "Kensington -Teen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2753, "286" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2755, "Corgi Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2759, "Willow River Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2762, "Liveright" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2765, "Aeon Publishing Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2766, "Norilana Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2768, "Tor Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2769, "SM" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2771, "330" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2780, "247" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2782, "839" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2786, "Albin Michel" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2789, "Jasinda Wilder" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2791, "Thomas Nelson" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2794, "Redhook" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2796, "Cogent Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2797, "Little Brown Books for Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2798, "Touchstone" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2799, "2.13.61" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2801, "1040" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2805, "\"Hoover Ink" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2815, "984" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2818, "Harlequin HQN" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2819, "604" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2820, "Self Published" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2825, "Sourcebooks Casablanca" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2826, "Tor Science Fiction" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2830, "Darussalam Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2836, "SFBC" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2841, "Macmillan Children's Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2843, "HQN Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2845, "Entangled Publishing (Indulgence)" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2850, "Penguin Modern Classics" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2854, "Miramax Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2860, "362" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2865, "91" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2866, "Del Rey/Ballantine Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2867, "Hyperion Books for Children/Disney Book Group" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2874, "254" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2877, "554" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2880, "Lang Leav" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2884, "Punto de Lectura" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2887, "151" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2896, "The Orion Publishing Group Ltd" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2901, "148" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2903, "El Leon Literary Arts" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2908, "Silent Note" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2909, "Olympia Publishers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2912, "C M Meridan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2919, "Lothian Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2920, "437" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2921, "C M Meridian" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2922, "Xlibris Corporation" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2923, "Harper Teen" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2924, "346" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2932, "Simon & Schuster Books For Young Readers" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2933, "WestBow Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2938, "Weald Fae Journals" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2940, "304" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2941, "Changemakers Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2943, "Tellwell Talent" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2945, "Henry Holt and Co." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2947, "Random House Inc" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2949, "MacMillan General Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2951, "Penguin Books/Penguin Group (USA) Inc." });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2959, "Xulon Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2961, "Grove Weidenfeld" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2975, "Skinny Leopard media" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2981, "183" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2989, "Zondervan" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2990, "University of Chicago Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 2994, "736" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3001, "['Fabrice del Dongo'# 'Gina del Dongo'# 'Clelia Conti'# 'Count Mosca'# 'Rassi'# 'Fabio Conti'# 'Ferrante Palla'# 'Prince Ranuce-Erneste IV'# 'Prince Ranuce-Erneste V']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3004, "Ellora's Cave" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3013, "HarperPerennial" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3025, "8Grand Publications" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3027, "Time Warner" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3037, "Mariner Books; 1 edition" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3040, "Rock Star Reads" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3050, "Thomas Dunne Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3056, "1160" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3058, "527" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3059, "Penguin Canada" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3060, "416" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3061, "23" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3064, "Bentang Pustaka" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3070, "Doubleday Children’s Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3073, "Sourcebooks Landmark" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3074, "Hachette Book Group Orbit" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3075, "Xtabyren Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3078, "Cartoon Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3084, "Amy Einhorn: Putnam" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3087, "Nuevas Ediciones de Bolsillo" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3088, "Farrar Straus & Giroux" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3093, "Egmont" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3095, "R.K. Lilley" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3096, "MG WELLS" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3099, "B Q Hanson" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3100, "\"CreateSpace Independent Publishing Platform; Four edition (May 18" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3102, "E. Hunter" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3103, "Solstice Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3111, "581" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3112, "ACE Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3113, "Vremea Publishing House" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3114, "Threshold Editions" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3115, "RiverOak Publishing" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3117, "Delancey Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3120, "Feltrinelli" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3129, "['Psychology'# 'Nonfiction'# 'Philosophy'# 'Biography'# 'Memoir'# 'Autobiography'# 'Spirituality'# 'Psychoanalysis'# 'Science'# 'History']" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3131, "Abacus" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3140, "Harlequin MIRA" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3143, "Prometheus Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3145, "\"Shadows of Atlantis" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3148, "6680" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3149, "Harcourt Books" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3157, "David C. Cook" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3162, "688" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3165, "Warner Vision" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3168, "Lyons Press" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3179, "HARPER COLLINS" });

            migrationBuilder.InsertData(
                table: "Publishers",
                columns: new[] { "Id", "PublisherName" },
                values: new object[] { 3182, "St. Martins Press-3PL" });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1, 2, "Harry Potter and the Order of the Phoenix", "Harry Potter and the Order of the Phoenix", "Fantasy# Young Adult# Fiction# Magic# Childrens# Adventure# Audiobook# Middle Grade# Classics# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.5", 0, 2 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2, 3, "To Kill a Mockingbird", "To Kill a Mockingbird", "Scout Finch# Atticus Finch# Jem Finch# Arthur Radley# Mayella Ewell# Aunt Alexandra# Bob Ewell# Calpurnia (housekeeper)# Tom Robinson# Miss Maudie Atkinson# Judge John Taylor# Dill Harris# Heck Tate# Stephanie Crawford", new DateTime(2006, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# School# Literature# Young Adult# Historical# Novels# Read For School# High School", "10000000000000", "English", 324, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3, 4, "Pride and Prejudice", "Pride and Prejudice", "Classics# Fiction# Romance# Historical Fiction# Literature# Historical# Novels# Historical Romance# Classic Literature# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.26", 0, 4 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 4, 5, "Twilight", "Twilight", "Edward Cullen# Jacob Black# Laurent# Renee# Bella Swan# Billy Black# Esme Cullen# Alice Cullen# Jasper Hale# Carlisle Cullen# Emmett Cullen# Rosalie Hale# Charlie Swan# Mike Newton# Jessica Stanley# Angela Weber# Tyler Crowley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Vampires# Fiction# Paranormal# Paranormal Romance# Supernatural# Teen# Urban Fantasy", "9780000000000", "English", 501, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 5, 6, "The Book Thief", "The Book Thief", "Liesel Meminger# Hans Hubermann# Rudy Steiner# Rosa Hubermann# Max Vandenburg# Tommy Müller# Ilsa Hermann# Frau Holtzapfel", new DateTime(2006, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Young Adult# Historical# Classics# War# Holocaust# World War II# Books About Books# Audiobook", "9780000000000", "English", 552, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 6, 7, "Animal Farm", "Animal Farm", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.95", " C.M. Woodhouse (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 7, 8, "The Chronicles of Narnia", "The Chronicles of Narnia", "Fantasy# Classics# Fiction# Young Adult# Childrens# Christian# Adventure# Science Fiction Fantasy# Middle Grade# Christian Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.26", 0, 8 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 8, 9, "J.R.R. Tolkien 4-Book Boxed Set: The Hobbit and The Lord of the Rings", "J.R.R. Tolkien 4-Book Boxed Set: The Hobbit and The Lord of the Rings", "Frodo Baggins# Gandalf# Bilbo Baggins# Gollum", new DateTime(2012, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Adventure# Science Fiction Fantasy# Epic Fantasy# High Fantasy# Young Adult# Literature# Magic", "9780000000000", "English", 1728, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 9, 10, "Gone with the Wind", "Gone with the Wind", "Scarlett OHara# Rhett Butler# Ashley Wilkes# Melanie Hamilton Wilkes# Wade Hampton Hamilton# Ella Lorena Kennedy# Eugenie Victoria Bonnie Blue Butler# Beau Wilkes# India Wilkes# Honey Wilkes# John  Wilkes# Gerald OHara# Ellen OHara# Suellen OHara# Carreen OHara# Eulalie# Pauline# Mammy Abigail# Prissy# Pork# Dilcey# Charles Hamilton# Frank Kennedy# Belle Watling# Jonas Wilkerson# Emmie Slattery# Will Benteen# Aunt Pittypat Hamilton# Uncle Peter", new DateTime(1999, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Historical Fiction# Fiction# Romance# Historical# War# Literature# Civil War# Historical Romance# Novels", "9780000000000", "English", 1037, 10 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 10, 11, "The Fault in Our Stars", "The Fault in Our Stars", "Hazel Grace Lancaster# Augustus Waters# Isaac", new DateTime(2012, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Fiction# Contemporary# Realistic Fiction# Teen# Coming Of Age# Drama# Novels# Love", "10000000000000", "English", 313, 11 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 11, 12, "The Hitchhiker's Guide to the Galaxy", "The Hitchhiker's Guide to the Galaxy", "Zaphod Beeblebrox# Arthur Dent# Ford Prefect# Trillian# Marvin# the paranoid android# Slartibartifast", new DateTime(2007, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Humor# Fantasy# Classics# Comedy# Science Fiction Fantasy# Audiobook# Adventure# Novels", "10000000000000", "English", 193, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 12, 13, "The Giving Tree", "The Giving Tree", "", new DateTime(1964, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Classics# Fiction# Poetry# Young Adult# Fantasy# Juvenile# Kids# Short Stories", "9780000000000", "English", 64, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 13, 14, "Wuthering Heights", "Wuthering Heights", "3.86", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Robert Heindel (Illustrator)", " Charlotte Brontë (Commentary)", " David Timson (Narrator)", 0, 14 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 14, 15, "The Da Vinci Code", "The Da Vinci Code", "Sophie Neveu# Robert Langdon# Sir Leigh Teabing# Silas (The Da Vinci Code)# Bezu Fache# Jerome Collet# Manuel Aringarosa# Rémy Legaludec# André Vernet", new DateTime(2006, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Suspense# Mystery Thriller# Historical Fiction# Adventure# Novels# Crime# Adult", "10000000000000", "English", 489, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 15, 16, "Memoirs of a Geisha", "Memoirs of a Geisha", "Sayuri Nitta# Mr. Bekku# Ichiro Tanaka# Dr. Crab# Hatsumono# Mameha# Ken Iwamura# Pumpkin# Toshikazu Nobu", new DateTime(2005, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Historical# Classics# Japan# Adult# Novels# Asia# Adult Fiction", "9780000000000", "English", 503, 16 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 16, 17, "The Picture of Dorian Gray", "The Picture of Dorian Gray", "Classics# Fiction# Horror# Fantasy# Literature# Gothic# Novels# 19th Century# LGBT# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.08", 0, 17 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 17, 18, "Alice's Adventures in Wonderland & Through the Looking-Glass", "Alice's Adventures in Wonderland & Through the Looking-Glass", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.06", " Martin Gardner (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 18, 19, "Jane Eyre", "Jane Eyre", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.13", " Barnett Freedman (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 19, 20, "Les Misérables", "Les Misérables", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.18", " Norman MacAfee (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 20, 21, "Fahrenheit 451", "Fahrenheit 451", "Guy Montag# Norman Corwin# Clarisse McClellan# Mildred Montag# Captain Beatty# Professor Faber", new DateTime(2011, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Science Fiction# Dystopia# School# Literature# Novels# Fantasy# Adult# Science Fiction Fantasy", "B0064CPN7I", "English", 194, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 21, 22, "Divergent", "Divergent", "Albert# Drew Leighton (Divergent)# Eric (Divergent)# Beatrice Prior# Peter# Caleb Prior# Natalie Prior# Molly Atwood# Christina# Jeanine Matthews# Marcus Eaton# Tobias Eaton", new DateTime(2012, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Romance# Adventure# Teen# Post Apocalyptic# Action", "9780000000000", "English", 487, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 22, 23, "Lord of the Flies", "Lord of the Flies", "Ralph# Piggy# Roger# Jack Merridew# Simon", new DateTime(1999, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# School# Literature# Dystopia# Read For School# Novels# High School# Adventure", "9780000000000", "English", 182, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 23, 24, "Romeo and Juliet", "Romeo and Juliet", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.75", " Paavo Emil Cajander (Translator)\"", " Barbara A. Mowat (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 24, 25, "The Alchemist", "The Alchemist", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.88", " James Noel Smith (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 25, 26, "Crime and Punishment", "Crime and Punishment", "Classics# Fiction# Russia# Literature# Russian Literature# Novels# Philosophy# Crime# 19th Century# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.22", 0, 26 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 26, 27, "The Perks of Being a Wallflower", "The Perks of Being a Wallflower", "Bill# Patrick Grogan# Charlie Scorsoni (A is for Alibi)# Sam Turner# Michael Dobson# Mary-Elizabeth# Candace Grogan", new DateTime(1999, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Contemporary# Coming Of Age# Romance# Realistic Fiction# LGBT# Classics# Mental Health# Teen", "10000000000000", "English", 213, 27 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 27, 28, "The Great Gatsby", "The Great Gatsby", "Classics# Fiction# School# Literature# Historical Fiction# Romance# Novels# Read For School# High School# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.92", 0, 28 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 28, 29, "City of Bones", "City of Bones", "Alexander Alec Lightwood# Jonathan Jace Wayland# Valentine Morgenstern# Isabelle Izzy Sophia Lightwood# Magnus Bane# Jocelyn Fray# Luke Garroway# Clarissa Clary Fray# Simon Lewis", new DateTime(2007, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Fiction# Vampires# Supernatural# Angels# Magic", "9780000000000", "English", 485, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 29, 30, "Ender's Game", "Ender's Game", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.3", " Harlan Ellison (Narrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 30, 31, "The Help", "The Help", "Constantine Bates# Eugenia “Skeeter” Phelan# Aibileen Clark# Minny Jackson# Hilly Holbrook# Elizabeth Leefolt# Celia Foote# Stuart Whitworth# Mae Mobley Leefolt# Leroy Jackson# Elaine Stein# Yule May Crookle# Johnny Foote# William Holbrook# Senator “Stoolie” Whitworth# Pascagoula# Treelore Clark", new DateTime(2009, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Historical# Adult# Adult Fiction# Contemporary# Audiobook# Classics# Chick Lit# Book Club", "10000000000000", "English", 451, 31 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 31, 32, "Anne of Green Gables", "Anne of Green Gables", "Marilla Cuthbert# Matthew Cuthbert# Diana Barry# Gilbert Blythe# Rachel Lynde# Anne Shirley# Jane Andrews# Ruby Gillis# Josie Pye# Prissy Andrews# Mr. Phillips# Mrs. Allan", new DateTime(2003, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# Childrens# Historical Fiction# Middle Grade# Historical# Audiobook# Canada# Coming Of Age", "9780000000000", "English", 320, 32 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 32, 2, "Harry Potter and the Sorcerer's Stone", "Harry Potter and the Sorcerer's Stone", "Fantasy# Fiction# Young Adult# Magic# Childrens# Middle Grade# Adventure# Classics# Audiobook# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.47", 0, 33 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 33, 34, "The Little Prince", "The Little Prince", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.31", " Nguyễn Thành Vũ (Illustrator)\"", " Ivan Minatti (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 34, 35, "Charlotte's Web", "Charlotte's Web", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.17", " Rosemary Wells (Illustrations)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 35, 36, "Of Mice and Men", "Of Mice and Men", "George Milton# Lennie Small# Candy# Curley# Curleys Wife# Slim# Crooks# Whit# Carlson", new DateTime(2002, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# School# Historical Fiction# Literature# Read For School# Novels# High School# American# Classic Literature", "9780000000000", "English", 103, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 36, 37, "The Time Traveler's Wife", "The Time Traveler's Wife", "Henry DeTamble# Clare Abshire# Gomez# Charisse# Richard DeTamble# Alicia Abshire# Mark Abshire# Philip Abshire# Lucille Abshire# Mrs. Kim# Alba DeTamble# Ingrid Carmichael# Celia Attley# Dr. David Kendrick", new DateTime(2013, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Romance# Fantasy# Time Travel# Science Fiction# Contemporary# Adult# Chick Lit# Adult Fiction# Magical Realism", "9780000000000", "English", 500, 37 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 37, 38, "Dracula", "Dracula", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4", " David J. Skal (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 38, 39, "Brave New World", "Brave New World", "John (Brave New World)# Bernard Marx# Lenina Crowne# Helmholtz Watson# Mustapha Mond# The Warden# Pope# Linda (Brave New World)# Fanny Crowne# The Director# The Arch-Community Songster", new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Science Fiction# Dystopia# Literature# Novels# School# Fantasy# Philosophy# Science Fiction Fantasy", "9780000000000", "English", 288, 39 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 39, 40, "One Hundred Years of Solitude", "One Hundred Years of Solitude", "Fiction# Classics# Magical Realism# Literature# Novels# Fantasy# Historical Fiction# Spanish Literature# Literary Fiction# Latin American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.08", 0, 40 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 40, 41, "The Catcher in the Rye", "The Catcher in the Rye", "Holden Caulfield# Robert Ackley# Stradlater# Phoebe Caulfield# Allie Caulfield# D.B Caulfield# Sally Hayes# Holden Caufield# Robert Ackley# Stradlater# Phoebe Caulfield# Allie Caulfield# D.B Caulfield# Sally Hayes", new DateTime(2001, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# Literature# School# Novels# Coming Of Age# American# High School# Read For School", "9780000000000", "English", 277, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 41, 42, "The Princess Bride", "The Princess Bride", "Buttercup# Westley# Prince Humperdinck# Inigo Montoya# Fezzik# Vizzini# Count Rugen# Miracle Max# The Dread Pirate Roberts# Ty Cobb", new DateTime(2003, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Romance# Humor# Young Adult# Adventure# Science Fiction Fantasy# Comedy# Fairy Tales", "9780000000000", "English", 456, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 42, 43, "The Lightning Thief", "The Lightning Thief", "Annabeth Chase# Grover Underwood# Luke Castellan# Zeus (God)# Dionysus (mythology)# Ares (god)# Hades# Poseidon (God)# Chiron# Percy Jackson", new DateTime(2006, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Urban Fantasy# Greek Mythology# Magic", "9780000000000", "English", 375, 43 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 43, 44, "The Secret Garden", "The Secret Garden", "Mary Lennox# Colin Craven# Dickon Sowerby# Martha Sowerby# Ben Weatherstaff# Archibald Craven# Susan Sowerby# Mrs. Medlock# Dr. Craven", new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Childrens# Young Adult# Historical Fiction# Middle Grade# Literature# Fantasy# Historical# Audiobook", "9780000000000", "English", 331, 44 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 44, 45, "A Thousand Splendid Suns", "A Thousand Splendid Suns", "Laila# Mariam# Rasheed# Tariq", new DateTime(2007, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Contemporary# Novels# Historical# War# Adult Fiction# Adult# Drama# Literature", "9780000000000", "English", 372, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 45, 46, "A Wrinkle in Time", "A Wrinkle in Time", "Meg Murry# Charles Wallace Murry# Calvin OKeefe# Dr. Kate Murry# Sandy Murry# Dennys Murry# Mrs. Whatsit# Mrs. Who# Mrs. Which", new DateTime(2017, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Young Adult# Science Fiction# Childrens# Middle Grade# Time Travel# Adventure# Science Fiction Fantasy", "9780000000000", "English", 218, 46 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 46, 47, "A Game of Thrones", "A Game of Thrones", "Brandon Stark# Catelyn Stark# Tyrion Lannister# Daenerys Targaryen# Eddard Stark# Theon Greyjoy# Robb Stark# Arya Stark# Jaime Lannister# Joffrey Baratheon# Robert Baratheon# Tywin Lannister# Lysa Arryn# Petyr Baelish# Sansa Stark# Viserys Targaryen# Varys# Hodor# Beric Dondarrion# Thoros of Myr# Sandor Clegane# Samwell Tarly# Pyp# Tommen Baratheon# Stannis Baratheon# Grenn# Mace Tyrell# Septa Mordane# Jon Snow# Cersei Lannister# Jorah Mormont", new DateTime(2005, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Adult# Science Fiction Fantasy# High Fantasy# Adventure# Dragons# Audiobook# Epic", "9780000000000", "English", 835, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 47, 48, "The Adventures of Huckleberry Finn", "The Adventures of Huckleberry Finn", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.82", " Walter Trier (Ilustrator)\"", " John Seelye (Introduction)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 48, 49, "The Lovely Bones", "The Lovely Bones", "Susie Salmon# Clarissa# Holly# Jack Salmon# Abigail Salmon# Lindsey Salmon# Buckley Salmon# George Harvey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Young Adult# Contemporary# Fantasy# Crime# Adult# Adult Fiction# Drama# Novels", "9780000000000", "English", 372, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 49, 50, "The Outsiders", "The Outsiders", "Ponyboy Curtis# Sodapop Curtis# Darrel Darry Curtis# Dallas Dally Winston# Johnny Cade# Keith Two-Bit Matthews# Steve Randle# Sherri Cherry Valance# Curly Shepard# Tim Shepard", new DateTime(1997, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Young Adult# Fiction# School# Realistic Fiction# Read For School# Coming Of Age# Historical Fiction# Contemporary# Teen", "10000000000000", "English", 192, 50 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 50, 51, "Where the Wild Things Are", "Where the Wild Things Are", "Max Cannon", new DateTime(2000, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Fiction# Classics# Fantasy# Adventure# Young Adult# Animals# Kids# Monsters", "9780000000000", "English", 37, 51 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 51, 52, "Green Eggs and Ham", "Green Eggs and Ham", "Sam-I-Am", new DateTime(1988, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Classics# Fiction# Poetry# Fantasy# Humor# Kids# Food# Young Adult", "9780000000000", "English", 62, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 52, 53, "The Odyssey", "The Odyssey", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.77", " Bernard Knox (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 53, 54, "Life of Pi", "Life of Pi", "Pi Patel# Richard Parker", new DateTime(2006, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Fantasy# Classics# Adventure# Contemporary# Novels# Literature# Magical Realism# India# Philosophy", "9780000000000", "English", 460, 54 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 54, 55, "A Tale of Two Cities", "A Tale of Two Cities", "Classics# Fiction# Historical Fiction# Literature# Historical# Novels# School# Classic Literature# 19th Century# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.85", 0, 55 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 55, 56, "Water for Elephants", "Water for Elephants", "Jacob Jankowski# August (Water for Elephants)# Rosie Noah# Camel# Uncle Al# Kinko/Walter# Marlena LArche# Rosemary (Water for Elephants)", new DateTime(2007, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Historical# Adult# Adult Fiction# Contemporary# Book Club# Novels# Animals", "9780000000000", "English", 335, 56 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 56, 57, "Lolita", "Lolita", "Classics# Fiction# Literature# Novels# Russia# Romance# Russian Literature# Literary Fiction# 20th Century# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B00IIAQY3Q", "English", "3.89", 0, 57 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 57, 58, "Slaughterhouse-Five", "Slaughterhouse-Five", "Billy Pilgrim# Kilgore Trout# Eliot Rosewater# Roland Weary# Paul Lazzaro# Edgar Derby# Robert Pilgrim# Valencia Merble# Barbara Pilgrim# Howard W. Campbell Jr.# Montana Wildhack# Bertam Copeland Rumfoord", new DateTime(1999, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Science Fiction# War# Historical Fiction# Literature# Novels# Time Travel# American# Fantasy", "9780000000000", "English", 275, 58 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 58, 59, "Frankenstein: The 1818 Text", "Frankenstein: The 1818 Text", "Classics# Fiction# Horror# Science Fiction# Gothic# Fantasy# School# Literature# Novels# 19th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 59, 60, "The Kite Runner", "The Kite Runner", "Fiction# Historical Fiction# Contemporary# Classics# Novels# Historical# Literature# Adult# Adult Fiction# Drama", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.3", 0, 60 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 60, 61, "The Handmaid's Tale", "The Handmaid's Tale", "The Commander# Offred# Serena Joy# Ofglen# Nick# Moira# Luke Castellan", new DateTime(1998, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Dystopia# Science Fiction# Feminism# Fantasy# Adult# Audiobook# Literature# Novels", "10000000000000", "English", 314, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 61, 62, "The Giver", "The Giver", "Rosemary (Lois Lowry)# Jonas (Lois Lowry)# The Giver (Lois Lowry)# Gabriel (Lois Lowry)# Asher (Lois Lowry)# Fiona (Lois Lowry)# Mother (Lois Lowry)# Father (Lois Lowry)# The Chief Elder (Lois Lowry)# Lily (Lois Lowry)", new DateTime(2006, 1, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Classics# Dystopia# Science Fiction# Fantasy# School# Childrens# Middle Grade# Read For School", "9780000000000", "English", 208, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 62, 63, "Catch-22", "Catch-22", "Yossarian# Chaplain Tappman# Milo Minderbinder# Nately", new DateTime(2004, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# War# Historical Fiction# Humor# Literature# Novels# Unfinished# American# Historical", "9780000000000", "English", 453, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 63, 64, "Dune", "Dune", "Stilgar# Vladimir Harkonnen# Duncan Idaho# Leto Atreides# Paul Atreides# Alia Atreides# Lady Jessica# Shaddam IV# Gurney Halleck", new DateTime(2019, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Fantasy# Classics# Science Fiction Fantasy# Space Opera# Audiobook# Novels# Adventure# Adult", "9780000000000", "English", 661, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 64, 65, "The Pillars of the Earth", "The Pillars of the Earth", "Thomas Becket# Henry II of England# Tom Builder# Prior Philip# Aliena# Jack Jackson# Stephen of England# Empress Matilda# William Hamleigh# Ellen# Richard of Kingsbridge# Alfred Builder# Waleran Bigod# Lord Percy Hamleigh# Lady Regan Hamleigh# Remigius", new DateTime(2002, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Classics# Medieval# Audiobook# British Literature# Novels# Adult", "10000000000000", "English", 976, 65 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 65, 66, "The Stand", "The Stand", "Horror# Fiction# Fantasy# Science Fiction# Post Apocalyptic# Thriller# Dystopia# Apocalyptic# Audiobook# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.34", 0, 66 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 66, 67, "The Adventures of Sherlock Holmes", "The Adventures of Sherlock Holmes", "Inspector Lestrade# Irene Adler# Sherlock Holmes# Dr. John Watson", new DateTime(1998, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Mystery# Fiction# Short Stories# Crime# Detective# Literature# Mystery Thriller# Adventure# Audiobook", "10000000000000", "English", 389, 67 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 67, 68, "Watership Down", "Watership Down", "Bigwig# Fiver# El-Ahrairah# Hazel# Pipkin# Blackberry# Dandelion# Hyzenthlay# Frith# Silver (Watership Down)# Kehaar# General Woundwort", new DateTime(1975, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Fantasy# Young Adult# Animals# Childrens# Adventure# Literature# Novels# Audiobook", "9780000000000", "English", 478, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 68, 55, "Great Expectations", "Great Expectations", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.78", " Marisa Sestino (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 69, 70, "Little Women", "Little Women", "Marmee# Meg March# Beth March# Amy March# Laurie Laurence# Mr. Laurence# Professor Bhaer# Mr. March# Hannah Brown# Aunt March# John Brooke# Jo March", new DateTime(2004, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Young Adult# Romance# Historical# Literature# Childrens# Classic Literature# Novels", "9780000000000", "English", 449, 70 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 70, 71, "The Bell Jar", "The Bell Jar", "Constantin# Esther Greenwood# Valerie# Marco# Mrs. Greenwood# Buddy Willard# Doctor Nolan# Joan Gilling# Jay Cee# Betsy# Irwin# Doctor Gordon# Philomena Guinea# Mrs. Willard# Lenny Shepherd# Dodo Conway# Eric# Doreen", new DateTime(2006, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Feminism# Mental Health# Psychology# Mental Illness# Literature# Novels# Poetry# Adult", "10000000000000", "English", 294, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 71, 72, "Harry Potter and the Deathly Hallows", "Harry Potter and the Deathly Hallows", "Sirius Black# Draco Malfoy# Ron Weasley# Petunia Dursley# Vernon Dursley# Dudley Dursley# Severus Snape# Rubeus Hagrid# Lord Voldemort# Minerva McGonagall# Neville Longbottom# Fred Weasley# George Weasley# Percy Weasley# Ginny Weasley# Colin Creevey# Filius Flitwick# Lucius Malfoy# Pomona Sprout# Arthur Weasley# Molly Weasley# Cho Chang# Remus Lupin# Sybil Trelawney# Peter Pettigrew# Oliver Wood# Fleur Delacour# Viktor Krum# Bellatrix Lestrange# Alastor Moody# Bill Weasley# Luna Lovegood# Nymphadora Tonks# Dolores Umbridge# Dobby# Kingsley Shacklebolt# Padma Patil# Parvati Patil# Kreacher# Narcissa Malfoy# Horace Slughorn# Rufus Scrimgeour# Dean Thomas# Aberforth Dumbledore# James Potter# Lily Potter# Xenophilius Lovegood# Seamus Finnigan# Garrick Ollivander# Katie Bell# Griphook# James Sirius Potter# Teddy Lupin# Hugo Weasley# Albus Dumbledore# Lily Luna Potter# Albus Severus Potter# Rose Weasley# Harry Potter# Hermione Granger# Lavender Brown", new DateTime(2007, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Childrens# Adventure# Audiobook# Middle Grade# Classics# Science Fiction Fantasy", "9780000000000", "English", 759, 72 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 72, 73, "One Flew Over the Cuckoo's Nest", "One Flew Over the Cuckoo's Nest", "Chief Bromden# Randle Patrick McMurphy# Nurse Ratched# William Billy Bibbit# Charles Cheswick# Dale Harding# Doctor Spivey# Bruce Fredrickson# James Jim Sefelt# Scanlon# Martini", new DateTime(1963, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Psychology# Novels# School# Mental Health# American# Mental Illness# Contemporary", "10000000000000", "English", 325, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 73, 74, "Anna Karenina", "Anna Karenina", "4.05", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " George Gibian (Preface)", " Louise Maude (Translator)", " Lev Tolstoi", 0, 74 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 74, 75, "Outlander", "Outlander", "Jamie Fraser# Ian Murray# Claire Randall Fraser# Jonathan Randall# Dougal MacKenzie# Colum MacKenzie# Geillis Duncan# Jenny Murray# Frank Randall# Laoghaire MacKenzie# Murtagh Fraser", new DateTime(2005, 7, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Fantasy# Fiction# Time Travel# Historical# Historical Romance# Adult# Audiobook# Scotland", "9780000000000", "English", 850, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 75, 76, "My Sister's Keeper", "My Sister's Keeper", "Anna Fitzgerald# Sara Fitzgerald# Kate Fitzgerald# Brian Fitzgerald# Jesse Fitzgerald# Campbell Alexander# Julia Romana", new DateTime(2005, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Chick Lit# Young Adult# Drama# Adult# Adult Fiction# Realistic Fiction# Family# Novels", "9780000000000", "English", 423, 76 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 76, 77, "Matilda", "Matilda", "Childrens# Fiction# Classics# Fantasy# Young Adult# Middle Grade# Humor# Audiobook# Magic# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.32", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 77, 9, "The Fellowship of the Ring", "The Fellowship of the Ring", "Frodo Baggins# Meriadoc Brandybuck# Peregrin Took# Gandalf# Aragorn# Gimli# Boromir# Bilbo Baggins# Tom Bombadil# Rúmil# Saruman# Elrond Half-elven# Arwen Undómiel# Galadriel# Gollum# Goldberry# Legolas# Sam Gamgee", new DateTime(1973, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Adventure# Science Fiction Fantasy# High Fantasy# Epic Fantasy# Young Adult# Novels# Magic# Literature# Audiobook", "9780000000000", "English", 527, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 78, 79, "The Girl with the Dragon Tattoo", "The Girl with the Dragon Tattoo", "Fiction# Mystery# Suspense# Contemporary# Adult# Adult Fiction# Sweden# Thriller# Audiobook# Crime", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.14", 0, 79 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 79, 80, "Rebecca", "Rebecca", "Maxim de Winter# Mrs. Danvers# the second Mrs. de Winter# Rebecca de Winter# Frank Crowley# Jack Favell# Beatrice Lacy# Giles Lacy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Mystery# Romance# Gothic# Historical Fiction# Thriller# Suspense# Mystery Thriller# Adult", "9780000000000", "English", 449, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 80, 81, "1984", "1984", "Winston Smith# Big Brother# OBrien# Emmanuel Goldstein# Tom Parsons# Syme# Julia", new DateTime(2013, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Science Fiction# Dystopia# Literature# Novels# Politics# School# Fantasy# Adult", "B003JTHWKU", "English", 237, 81 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 81, 82, "The Color Purple", "The Color Purple", "Nettie# Albert# Celie# Shug Avery# Miss Millie", new DateTime(2019, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Feminism# Historical# LGBT# African American# Literature# Novels# Adult", "9780000000000", "English", 304, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 82, 83, "A Tree Grows in Brooklyn", "A Tree Grows in Brooklyn", "Francie Nolan# Neeley Nolan# Katie Nolan# Johnny Nolan# Mary Rommely# Sissy Rommely# Eva Evy Rommely Flittman# Thomas Rommely# Sergeant McShane", new DateTime(2006, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Young Adult# Coming Of Age# Historical# Literature# New York# Novels# Book Club", "9780000000000", "English", 496, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 83, 84, "A Clockwork Orange", "A Clockwork Orange", "Pete# Alex Jacobi# Georgie# Dim", new DateTime(2019, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Science Fiction# Dystopia# Literature# Novels# Horror# Thriller# Crime# Modern Classics", "9780000000000", "English", 240, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 84, 85, "The Road", "The Road", "The man# The boy", new DateTime(2006, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Science Fiction# Dystopia# Post Apocalyptic# Classics# Horror# Literature# Novels# Apocalyptic# Contemporary", "9780000000000", "English", 241, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 85, 26, "The Brothers Karamazov", "The Brothers Karamazov", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.32", " Larissa Volokhonsky (Translator)\"", " Richard Pevear (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 86, 87, "Angela's Ashes", "Angela's Ashes", "Frank McCourt", new DateTime(2005, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Memoir# Biography# Classics# Ireland# Autobiography# Biography Memoir# History# Irish Literature# Historical", "9780000000000", "English", 452, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 87, 88, "Vampire Academy", "Vampire Academy", "Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Mason Ashford# Victor Dashkov# Mia Rinaldi# Janine Hathaway# Natalie Dashkov# Edison Eddie Castile# Ellen Kirova# Rosemarie Rose Hathaway# Camille Conta# Stan Alto# Jesse Zeklos# Tatiana Ivashkov", new DateTime(2007, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Vampires# Paranormal# Romance# Urban Fantasy# Fiction# Supernatural# Paranormal Romance# Magic", "9780000000000", "English", 332, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 88, 89, "Siddhartha", "Siddhartha", "Classics# Fiction# Philosophy# Religion# Spirituality# Literature# Buddhism# German Literature# Novels# Historical Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.03", 0, 89 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 89, 90, "The Poisonwood Bible", "The Poisonwood Bible", "Orleanna Price# Ruth May Price# Rachel Rebeccah Price# Leah Price# Nathan Price# Dr Bud Wharton# Adah Price# Reverend & Mrs. Underdown", new DateTime(2005, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Africa# Classics# Historical# Literary Fiction# Literature# Novels# Religion# Adult Fiction", "9780000000000", "English", 546, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 90, 91, "The Golden Compass", "The Golden Compass", "Lyra Belacqua# Pantalaimon# Lord Asriel# Iorek Byrnison# Iofur Raknison# Marisa Coulter# Lee Scoresby# Roger Parslow# Serafina Pekkala# Hester# Farder Coram# John Faa# Billy Costa", new DateTime(1996, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Adventure# Science Fiction# Science Fiction Fantasy# Steampunk# Middle Grade# Audiobook", "9780000000000", "English", 399, 91 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 91, 92, "Don Quixote", "Don Quixote", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.88", " Roberto González Echevarría (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 92, 93, "Atlas Shrugged", "Atlas Shrugged", "Classics# Philosophy# Literature# Politics# Science Fiction# Dystopia# Economics# Novels# Audiobook# Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.69", 0, 93 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 93, 2, "Harry Potter and the Prisoner of Azkaban", "Harry Potter and the Prisoner of Azkaban", "Fantasy# Young Adult# Fiction# Magic# Childrens# Adventure# Middle Grade# Audiobook# Classics# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.57", 0, 94 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 94, 95, "The Old Man and the Sea", "The Old Man and the Sea", "Santiago# Manolin", new DateTime(1996, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Novels# American# School# Adventure# Classic Literature# Literary Fiction# 20th Century", "9780000000000", "English", 96, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 95, 96, "The Notebook", "The Notebook", "Noah Taylor Calhoun# Allison Nelson# Lon Hammond Jr# Anne Nelson", new DateTime(2000, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Drama# Classics", "B000Q67J66", "English", 227, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 96, 97, "Winnie-the-Pooh", "Winnie-the-Pooh", "Classics# Childrens# Fiction# Fantasy# Animals# Picture Books# Young Adult# Audiobook# Middle Grade# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.34", 0, 97 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 97, 98, "The Complete Stories and Poems", "The Complete Stories and Poems", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Poetry# Horror# Fiction# Short Stories# Mystery# Gothic# Literature# Fantasy# Classic Literature", "9780000000000", "English", 821, 98 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 98, 99, "Interview with the Vampire", "Interview with the Vampire", "Lestat de Lioncourt# Claudia# Daniel Molloy# Louis de Pointe du Lac", new DateTime(2004, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Fiction# Vampires# Paranormal# Supernatural# Classics# Gothic# Urban Fantasy# Historical Fiction", "9780000000000", "English", 342, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 99, 100, "A Prayer for Owen Meany", "A Prayer for Owen Meany", "Owen Meany# John Wheelwright", new DateTime(1990, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Contemporary# Literature# Literary Fiction# Novels# Historical Fiction# Adult Fiction# Coming Of Age# American", "9780000000000", "English", 637, 100 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 100, 101, "\"Moby-Dick or", "\"Moby-Dick or", "3.51", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Rockwell Kent (Illustrator)", " Tom Quirk (Notes)", " Andrew Delbanco (Introduction)", 0, 101 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 101, 102, "The Red Tent", "The Red Tent", "Isaac (Bible)# Dinah (Bible)# Jacob (Bible)", new DateTime(1997, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Religion# Book Club# Feminism# Adult# Adult Fiction# Womens# Novels", "9780000000000", "English", 324, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 102, 103, "The Secret Life of Bees", "The Secret Life of Bees", "Lily Owens# Rosaleen# August Boatwright# June Boatwright# May Boatwright# T. Ray Owens", new DateTime(2003, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Young Adult# Classics# Adult Fiction# Historical# Contemporary# Adult# Coming Of Age# Chick Lit", "9780000000000", "English", 302, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 103, 2, "Harry Potter and the Goblet of Fire", "Harry Potter and the Goblet of Fire", "Fantasy# Young Adult# Fiction# Magic# Childrens# Adventure# Audiobook# Middle Grade# Classics# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.56", 0, 104 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 104, 105, "Clockwork Angel", "Clockwork Angel", "Fantasy# Young Adult# Paranormal# Romance# Steampunk# Historical Fiction# Fiction# Urban Fantasy# Vampires# Angels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.32", 0, 105 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 105, 72, "Harry Potter and the Half-Blood Prince", "Harry Potter and the Half-Blood Prince", "Draco Malfoy# Ron Weasley# Petunia Dursley# Vernon Dursley# Dudley Dursley# Severus Snape# Lord Voldemort# Neville Longbottom# Fred Weasley# George Weasley# Ginny Weasley# Arthur Weasley# Molly Weasley# Cornelius Fudge# Peter Pettigrew# Fleur Delacour# Bellatrix Lestrange# Bill Weasley# Luna Lovegood# Nymphadora Tonks# Kreacher# Narcissa Malfoy# Horace Slughorn# Albus Dumbledore# Harry Potter# Hermione Granger# Madam Malkin# Romilda Vane", new DateTime(2006, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Childrens# Adventure# Audiobook# Middle Grade# Classics# Science Fiction Fantasy", "10000000000000", "English", 652, 106 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 106, 107, "And Then There Were None", "And Then There Were None", "Justice Lawrence John Wargrave# Vera Elizabeth Claythorne# Philip Lombard# General John Gordon Macarthur# Dr Edward George Armstrong# Anthony James Marston# William Henry Blore# Mr Thomas Rogers# Mrs Ethel Rogers# Emily Caroline Brent# Isaac Morris# Fred Narracott", new DateTime(2004, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Classics# Fiction# Crime# Thriller# Mystery Thriller# Audiobook# Adult# Suspense# Novels", "9780000000000", "English", 264, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 107, 108, "Middlesex", "Middlesex", "Calliope Stephanides# Eleutherios Stephanides# Desdemona Stephanides# Sourmelina Zizmo# Miltiades Stephanides# Theodora Stephanides# Chapter Eleven# The Obscure Object# James Zizmo# Michael Antoniou", new DateTime(2003, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Contemporary# LGBT# Literary Fiction# Novels# Classics# Literature# Queer# Adult", "9780000000000", "English", 529, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 108, 109, "The Stranger", "The Stranger", "Classics# Fiction# Philosophy# France# Literature# Novels# French Literature# School# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.98", 0, 109 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 109, 110, "The Master and Margarita", "The Master and Margarita", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.29", " Diana Lewis Burgin (Translator)\"", " Ellendea Proffer (Annotations and Afterword)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 110, 111, "The Name of the Wind", "The Name of the Wind", "Bast# Denna# Ambrose# Kvothe# Simmon# Wilem# The Chandrian# Devi# Auri# Fela# Chronicler", new DateTime(2007, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Science Fiction Fantasy# Adult# Adventure# Audiobook# Epic", "9780000000000", "English", 662, 111 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 111, 112, "The Shining", "The Shining", "Wendy Torrance# Danny Torrance# Dick Halloran# Horace Derwent# Stuart Ullman# Albert Shockley# Delberg Grady# Watson# Bill Edmonds# Charles Grondin# Sylvia Hunter Derwent# Howard Cottrell# Larry Durkin# Jack Torrance", new DateTime(1980, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Classics# Fantasy# Mystery# Paranormal# Suspense# Novels# Adult", "9780000000000", "English", 659, 112 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 112, 48, "The Adventures of Tom Sawyer", "The Adventures of Tom Sawyer", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.91", " John Seelye (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 113, 114, "Eragon", "Eragon", "Eragon (The Inheritance Cycle)# Saphira (The Inheritance Cycle)# Roran Garrowsson# Arya (The Inheritance Cycle)# Brom (The Inheritance Cycle)# Orik (The Inheritance Cycle)# Horst (The Inheritance Cycle)# Murtagh (The Inheritance Cycle)# Solembum# Queen Islanzadi# Angela the Herbalist", new DateTime(2005, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Dragons# Adventure# Magic# High Fantasy# Science Fiction Fantasy# Young Adult Fantasy# Childrens", "9780000000000", "English", 503, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 114, 77, "Charlie and the Chocolate Factory", "Charlie and the Chocolate Factory", "Childrens# Fantasy# Fiction# Classics# Young Adult# Middle Grade# Humor# Adventure# Juvenile# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 115, 116, "Flowers for Algernon", "Flowers for Algernon", "Charlie Gordon# Alice Kinnian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Science Fiction# Young Adult# Literature# Psychology# School# Novels# Adult# Read For School", "10000000000000", "English", 216, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 116, 117, "On the Road", "On the Road", "", new DateTime(1976, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Travel# Literature# Novels# American# Adventure# 20th Century# Unfinished# Modern Classics", "9780000000000", "English", 307, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 117, 118, "The Metamorphosis", "The Metamorphosis", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.82", " Mircea Ivănescu (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 118, 11, "Looking for Alaska", "Looking for Alaska", "Miles Halter# Alaska Young# Chip Martin# Takumi Hikohito# Lara Buterskaya", new DateTime(2006, 12, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Contemporary# Romance# Realistic Fiction# Coming Of Age# Teen# Mystery# Young Adult Contemporary# High School", "10000000000000", "English", 221, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 119, 120, "The Shadow of the Wind", "The Shadow of the Wind", "Fiction# Historical Fiction# Mystery# Fantasy# Books About Books# Historical# Spain# Spanish Literature# Gothic# Magical Realism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.27", 0, 120 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 120, 121, "The Curious Incident of the Dog in the Night-Time", "The Curious Incident of the Dog in the Night-Time", "Christopher John Francis Boone# Toby# Siobhan# Mr. Jeavons# Mrs. Alexander# Ed Boone# Judy Boone# Mr. Roger Shears# Mrs. Eileen Shears# Rhodri# Wellington", new DateTime(2004, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Young Adult# Contemporary# Novels# Classics# Psychology# Literature# Realistic Fiction# Adult Fiction", "9780000000000", "English", 226, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 121, 122, "The Very Hungry Caterpillar", "The Very Hungry Caterpillar", "", new DateTime(1994, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Picture Books# Childrens# Fiction# Classics# Animals# Food# Counting# Storytime# Kids# Mathematics", "9780000000000", "English", 26, 122 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 122, 123, "Tuesdays with Morrie", "Tuesdays with Morrie", "Mitch Albom# Morrie Schwartz", new DateTime(2000, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Memoir# Biography# Inspirational# Classics# Philosophy# Self Help# Contemporary# Adult# Biography Memoir", "9780000000000", "English", 210, 123 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 123, 124, "The Unbearable Lightness of Being", "The Unbearable Lightness of Being", "Fiction# Classics# Philosophy# Literature# Novels# Czech Literature# Romance# Contemporary# Literary Fiction# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 124, 125, "The Name of the Rose", "The Name of the Rose", "Fiction# Historical Fiction# Mystery# Classics# Historical# Literature# Crime# Italian Literature# Italy# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 125 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 125, 126, "Where the Red Fern Grows", "Where the Red Fern Grows", "Billy Colman# Old Dan# Little Ann", new DateTime(2000, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# Childrens# Animals# Historical Fiction# Middle Grade# School# Realistic Fiction# Read For School", "9780000000000", "English", 272, 126 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 126, 2, "Harry Potter and the Chamber of Secrets", "Harry Potter and the Chamber of Secrets", "Fantasy# Young Adult# Fiction# Magic# Childrens# Middle Grade# Adventure# Audiobook# Classics# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.43", 0, 127 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 127, 128, "The Godfather", "The Godfather", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.36", " Peter Bart (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 128, 129, "The Scarlet Letter", "The Scarlet Letter", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.41", " Nina Baym (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 129, 130, "In Cold Blood", "In Cold Blood", "Perry Edward Smith# Richard Hickock# Herb Clutter# Bonnie Clutter# Nancy Clutter# Kenyon Clutter# Alvin Dewey", new DateTime(1994, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Classics# True Crime# Crime# Mystery# History# Literature# Thriller# American# Biography", "9780000000000", "English", 343, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 130, 131, "Fight Club", "Fight Club", "The Narrator# Tyler Durden# Marla Singer", new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Classics# Thriller# Novels# Mystery# Adult# Literature# American# Adult Fiction", "9780000000000", "English", 218, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 131, 123, "The Five People You Meet in Heaven", "The Five People You Meet in Heaven", "Eddie# Marguerite# Tala# Blue Man# Steve Rogers# Ruby", new DateTime(2003, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Inspirational# Contemporary# Fantasy# Adult# Spirituality# Classics# Adult Fiction# Philosophy# Novels", "9780000000000", "English", 196, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 132, 133, "\"Hush", "\"Hush", "Young Adult# Fantasy# Romance# Paranormal# Angels# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Young Adult Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 133 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 133, 52, "The Cat in the Hat", "The Cat in the Hat", "The Cat in the Hat", new DateTime(1985, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Classics# Fiction# Poetry# Fantasy# Humor# Animals# Kids# Cats", "9780000000000", "English", 61, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 134, 135, "American Gods", "American Gods", "Shadow Moon# Mr. Wednesday# Spider# Laura Moon# Hinzelmann# Easter# Whiskey Jack# Loki# Odin# Mr. Ibis# Samantha Black Crow# Bilquis# Media# Mad Sweeney# Czernobog# Mr. Jacquel# Mr. Nancy# Chad Mulligan# Margaret Black Crow# Mr. Town# Mr. World# Technical Boy", new DateTime(2011, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Urban Fantasy# Mythology# Audiobook# Science Fiction# Science Fiction Fantasy# Adult# Contemporary# Novels", "10000000000000", "English", 635, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 135, 136, "The Count of Monte Cristo", "The Count of Monte Cristo", "Classics# Fiction# Historical Fiction# Adventure# Literature# France# Historical# Classic Literature# Novels# Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 136 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 136, 137, "Lonesome Dove", "Lonesome Dove", "Captain Woodrow Call# Augustus Gus McCrae# Joshua Deets# Newt Dobbs# Pea Eye Parker# Lorena Wood", new DateTime(1999, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Westerns# Classics# Historical# Adventure# Novels# Literature# Audiobook# American", "9780000000000", "English", 960, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 137, 138, "Perfume: The Story of a Murderer", "Perfume: The Story of a Murderer", "Fiction# Classics# Historical Fiction# Horror# Mystery# Thriller# Crime# Historical# German Literature# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 138 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 138, 139, "Holes", "Holes", "Stanley Yelnats", new DateTime(2000, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Childrens# Middle Grade# Realistic Fiction# Classics# Mystery# Adventure# School# Contemporary", "9780000000000", "English", 233, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 139, 140, "\"The Lion", "\"The Lion", "Fantasy# Classics# Fiction# Young Adult# Childrens# Adventure# Middle Grade# Christian# Magic# Christian Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.22", 0, 140 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 140, 141, "Watchmen", "Watchmen", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.36", " John Higgins (Colorist)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 141, 112, "It", "It", "Dick Halloran# Pennywise the Dancing Clown# Bill Denbrough# Richie Tozier# Eddie Kaspbrak# Stan Uris# Ben Hanscom# Beverly Marsh# Mike Hanlon# Frank Dodd# Henry Bowers# Audra Phillips# George Denbrough# Adrian Mellon# Patrick Hockstetter# American Law Enforcement", new DateTime(1987, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Fantasy# Audiobook# Mystery# Adult# Paranormal# Classics# Novels", "9780000000000", "English", 1116, 142 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 142, 43, "The Last Olympian", "The Last Olympian", "Nico di Angelo# Thalia Grace# Tyson# Annabeth Chase# Demeter (Goddess)# Luke Castellan# Hera# Hades# Will Solace# Percy Jackson", new DateTime(2009, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Greek Mythology# Urban Fantasy# Magic", "9780000000000", "English", 381, 143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 143, 144, "The Little House Collection", "The Little House Collection", "Classics# Historical Fiction# Childrens# Fiction# Young Adult# Historical# Middle Grade# Juvenile# Literature# Kids", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.34", 0, 144 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 144, 145, "The Divine Comedy", "The Divine Comedy", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.05", " Eugenio Montale (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 145, 146, "Peter Pan", "Peter Pan", "Classics# Fantasy# Fiction# Childrens# Adventure# Young Adult# Audiobook# Middle Grade# Fairy Tales# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 146, 147, "All Quiet on the Western Front", "All Quiet on the Western Front", "Classics# Fiction# Historical Fiction# War# Historical# Literature# School# German Literature# World War I# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 147 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 147, 148, "\"The Hobbit", "\"The Hobbit", "Fantasy# Classics# Fiction# Adventure# Young Adult# Science Fiction Fantasy# High Fantasy# Childrens# Epic Fantasy# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.27", 0, 148 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 148, 149, "The Compleat Works of Wllm Shkspr (abridged)", "The Compleat Works of Wllm Shkspr (abridged)", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.44", " Jess Winfield (Editor)\"", " Daniel Singer (Contributor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 149, 40, "Love in the Time of Cholera", "Love in the Time of Cholera", "Fiction# Classics# Historical Fiction# Romance# Magical Realism# Literature# Novels# Spanish Literature# Literary Fiction# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 150 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 150, 88, "Shadow Kiss", "Shadow Kiss", "Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Mason Ashford# Adrian Ivashkov# Victor Dashkov# Mia Rinaldi# Janine Hathaway# Jillian Mastrano# Edison Eddie Castile# Rosemarie Rose Hathaway# Camille Conta# Stan Alto# Jesse Zeklos# Tatiana Ivashkov# Ryan Aylesworth# Shane Reyes# Brandon Lazar# Dean Barnes", new DateTime(2008, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Fiction# Magic", "9780000000000", "English", 443, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 151, 22, "Insurgent", "Insurgent", "Albert# Drew Leighton (Divergent)# Eric (Divergent)# Beatrice Prior# Peter# Caleb Prior# Natalie Prior# Molly Atwood# Christina# Jeanine Matthews# Marcus Eaton# Tobias Eaton", new DateTime(2012, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Romance# Adventure# Teen# Post Apocalyptic# Action", "9780000000000", "English", 525, 152 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 152, 153, "The Thorn Birds", "The Thorn Birds", "Ralph de Bricassart# Meghann Meggie Cleary# Luke ONeill# Fiona Fee Cleary# Padraic Paddy Cleary# Francis Frank Cleary# Dane ONeill# Justine ONeill# Mary Elizabeth Cleary Carson# Rainer Rain Moerling Hartheim# Luddie Mueller# Anne Mueller# Archbishop (later Cardinal) Vittorio di Contini-Verchese# Bob Cleary# Jack Cleary# Hughie Cleary# Stuart Stu Cleary# James and Patrick Jims and Patsy Cleary# Harold Hal Cleary", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Classics# Australia# Historical# Historical Romance# Novels# Drama# Adult", "10000000000000", "English", 692, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 153, 96, "A Walk to Remember", "A Walk to Remember", "Landon Carter# Jamie Sullivan", new DateTime(2000, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Young Adult# Adult# Adult Fiction# Drama# Contemporary Romance# Love", "10000000000000", "English", 215, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 154, 52, "How the Grinch Stole Christmas!", "How the Grinch Stole Christmas!", "Max Cannon# Cindy Lou Who# Grinch", new DateTime(2004, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Christmas# Classics# Fiction# Poetry# Holiday# Fantasy# Humor# Kids", "9780000000000", "English", 64, 155 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 155, 12, "The Ultimate Hitchhiker's Guide to the Galaxy", "The Ultimate Hitchhiker's Guide to the Galaxy", "Zaphod Beeblebrox# Arthur Dent# Ford Prefect# Trillian# Marvin# the paranoid android", new DateTime(2002, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Humor# Fantasy# Classics# Comedy# Science Fiction Fantasy# Adventure# Novels# British Literature", "9780000000000", "English", 815, 156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 156, 157, "Atonement", "Atonement", "Briony Tallis# Emily Tallis# Cecilia Tallis# Leon Tallis# Lola Quincey# Jackson Quincey# Pierrot Quincey# Paul Marshall# Robbie Turner", new DateTime(2003, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Classics# Historical# War# Literary Fiction# Contemporary# Literature# Novels", "9780000000000", "English", 351, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 157, 158, "The Importance of Being Earnest", "The Importance of Being Earnest", "Lane# John Worthing# Algernon Montcrieff# Cecily Cardew# Gwendolen Fairfax# Miss Prism# Rev. Canon Chasuble# Merriman# Lady Bracknell", new DateTime(2005, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Plays# Fiction# Drama# Humor# Literature# School# Comedy# Theatre# Romance", "9780000000000", "English", 76, 158 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 158, 159, "\"Eat", "\"Eat", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.57", "Elizabeth Gilbert (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 159, 160, "Their Eyes Were Watching God", "Their Eyes Were Watching God", "Eleanor# Sam Watson# Shelby# Janie Starks# Pheoby Watson# Nanny# Leafy# Johnny Taylor# Logan Killicks# Jody Starks# Tea Cake# Pearl Stone# Mrs. Sumpkins# Lulu Moss# Mis Washburn# Mr. Washburn# Miss Nellie# Mayrella", new DateTime(2006, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# School# African American# Literature# Novels# Feminism# Read For School# High School", "9780000000000", "English", 219, 160 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 160, 161, "The Three Musketeers", "The Three Musketeers", "DArtagnan# Athos# Porthos# Aramis# Cardinal Richelieu# King Louis XIII# Anne of Austria# Milady de Winter# George Villiers# 1st Duke of Buckingham# Monsieur de Treville", new DateTime(2001, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Adventure# France# Literature# Historical# French Literature# Classic Literature# Novels", "10000000000000", "English", 625, 161 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 161, 162, "The Wonderful Wizard of Oz", "The Wonderful Wizard of Oz", "Classics# Fantasy# Fiction# Childrens# Young Adult# Adventure# Audiobook# Middle Grade# Magic# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 162, 88, "Frostbite", "Frostbite", "Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Mason Ashford# Adrian Ivashkov# Mia Rinaldi# Janine Hathaway# Natasha Ozera# Rosemarie Rose Hathaway", new DateTime(2008, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Fiction# Magic", "10000000000000", "English", 327, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 163, 164, "Goodnight Moon", "Goodnight Moon", "Childrens# Picture Books# Classics# Fiction# Poetry# Kids# Animals# Juvenile# Young Adult# Storytime", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.28", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 164, 52, "The Lorax", "The Lorax", "Lorax# Swomee-Swans# Brown Bar-ba-loots# Humming-Fishes", new DateTime(1998, 2, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Fantasy# Environment# Young Adult# Kids# Juvenile", "9780000000000", "English", 72, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 165, 166, "\"Good Omens: The Nice and Accurate Prophecies of Agnes Nutter", "\"Good Omens: The Nice and Accurate Prophecies of Agnes Nutter", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.24", " Neil Gaiman (Goodreads Author)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 166, 88, "Blood Promise", "Blood Promise", "Sydney Sage# Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Adrian Ivashkov# Mia Rinaldi# Janine Hathaway# Avery Lazar# Jillian Mastrano# Abe Mazur# Rosemarie Rose Hathaway# Olena Belikov", new DateTime(2009, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Fiction# Magic", "9780000000000", "English", 503, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 167, 168, "Tess of the D'Urbervilles", "Tess of the D'Urbervilles", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.8", " Tim Dolin (Notes)\"", " Maria Grazia Griffini (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 168, 169, "The Good Earth", "The Good Earth", "Wang Lung# O-lan", new DateTime(2009, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# China# Literature# Historical# Asia# Novels# School# Classic Literature", "9780000000000", "English", 418, 169 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 169, 170, "Heart of Darkness", "Heart of Darkness", "Classics# Fiction# Literature# Africa# Historical Fiction# School# Novels# Read For School# Adventure# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.43", 0, 170 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 170, 43, "The Battle of the Labyrinth", "The Battle of the Labyrinth", "Nico di Angelo# Tyson# Annabeth Chase# Grover Underwood# Hera# Daedalus# Rachel Elizabeth Dare# Percy Jackson", new DateTime(2008, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Greek Mythology# Urban Fantasy# Magic", "10000000000000", "English", 361, 171 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 171, 24, "A Midsummer Night's Dream", "A Midsummer Night's Dream", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.95", " Catherine Belsey (Contributor)\"", " Barbara A. Mowat (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 172, 29, "Clockwork Princess", "Clockwork Princess", "Theresa Tessa Gray# Magnus Bane# William Herondale# James Jem Carstairs# Henry Branwell# Charlotte Branwell# Gideon Lightwood# Gabriel Lightwood# Sophie Collins# Cecily Herondale", new DateTime(2013, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Steampunk# Historical Fiction# Urban Fantasy# Angels# Fiction# Historical", "9780000000000", "English", 567, 173 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 173, 174, "The Prophet", "The Prophet", "Al Mustafa# Al Mitra", new DateTime(2010, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Poetry# Philosophy# Classics# Fiction# Spirituality# Religion# Literature# Inspirational# Self Help# Novels", "9780000000000", "English", 127, 174 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 174, 175, "The Mists of Avalon", "The Mists of Avalon", "Morgause# Igraine# Viviane# Uther# Gorlois# Morgaine# Gwenhwyfar# Merlin# Kevin# the Bard# Lancelet# Uriens# Accolon# King Arthur", new DateTime(2001, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Historical Fiction# Arthurian# Mythology# Science Fiction Fantasy# Historical# Classics# Romance# Magic", "B000FC1JCQ", "English", 1009, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 175, 43, "The Titan's Curse", "The Titan's Curse", "Artemis (Goddess)# Nico di Angelo# Thalia Grace# Tyson# Annabeth Chase# Demeter (Goddess)# Grover Underwood# Zeus (God)# Dionysus (mythology)# Ares (god)# Athena (Greek goddess)# Hera# Atlas# Luke# Poseidon (God)# Zöe# Chiron# Mr. Chase# Dr. Thorn# Aphrodite# Bianca di Angelo# Percy Jackson", new DateTime(2007, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Greek Mythology# Urban Fantasy# Magic", "9780000000000", "English", 320, 122 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 176, 43, "The Sea of Monsters", "The Sea of Monsters", "Tyson# Annabeth Chase# Grover Underwood# Luke Castellan# Ares (god)# Circe# Blackbeard# Chiron# Hermes# Polyphemus# Clarisse# Percy Jackson", new DateTime(2006, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Urban Fantasy# Greek Mythology# Magic", "9780000000000", "English", 279, 177 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 177, 178, "The Joy Luck Club", "The Joy Luck Club", "Suyuan Woo# June Woo# Lindo Jong# Waverly Jong# An-Mei Hsu# Rose Hsu Jordan# Ying-Ying St. Clair# Lena St. Clair", new DateTime(2006, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Classics# China# Contemporary# Adult Fiction# Adult# Literature# Asia# Novels", "9780000000000", "English", 288, 178 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 178, 179, "Alice in Wonderland", "Alice in Wonderland", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.02", " Rene Cloke (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 179, 180, "The Call of the Wild", "The Call of the Wild", "Classics# Fiction# Adventure# Young Adult# Animals# Historical Fiction# Literature# School# Childrens# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.87", 0, 180 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 180, 181, "Jonathan Livingston Seagull", "Jonathan Livingston Seagull", "Fiction# Classics# Philosophy# Fantasy# Spirituality# Inspirational# Self Help# Literature# Novels# Animals", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 181 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 181, 182, "Madame Bovary", "Madame Bovary", "3.68", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Margaret Mauldon (Translator)", " Malcolm Bowie (Introduction)", " Paul De Man (Editor)", 0, 182 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 182, 183, "The Phantom Tollbooth", "The Phantom Tollbooth", "Fantasy# Fiction# Childrens# Classics# Young Adult# Middle Grade# Adventure# Humor# Science Fiction Fantasy# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 183, 184, "Bridge to Terabithia", "Bridge to Terabithia", "Jesse Aarons# Leslie Burke", new DateTime(2009, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Classics# Childrens# Fantasy# Middle Grade# Realistic Fiction# School# Juvenile# Contemporary", "B001UFP6JY", "English", 190, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 184, 185, "The Hunger Games Trilogy Boxset", "The Hunger Games Trilogy Boxset", " Peter Klöss (Translator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Sylke Hachmeister (Translator)", " Hanna Hörl (Illustrator)", " Pilar Ramírez Tello (Goodreads Author) (Translator)", 0, 185 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 185, 186, "\"Oh", "\"Oh", "Childrens# Picture Books# Fiction# Classics# Poetry# Fantasy# Young Adult# Inspirational# Kids# Humor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.35", 0, 186 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 186, 79, "The Girl Who Played with Fire", "The Girl Who Played with Fire", "Fiction# Mystery# Thriller# Crime# Mystery Thriller# Suspense# Contemporary# Sweden# Adult# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 187 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 187, 188, "The Maze Runner", "The Maze Runner", "Chuck# Teresa Agnes# Minho# Alby# Gally# Thomas# Ben# Newt", new DateTime(2009, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Adventure# Post Apocalyptic# Mystery# Teen# Audiobook", "9780000000000", "English", 384, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 188, 189, "The Neverending Story", "The Neverending Story", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.17", " Roswitha Quadflieg (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 189, 55, "Oliver Twist", "Oliver Twist", "3.87", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " 吴倩卓 (Translator)", " 查尔斯·狄更斯", " Gerald Dickens (Narrator)", 0, 190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 190, 191, "Ulysses", "Ulysses", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.73", " John M. Woolsey (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 191, 192, "Treasure Island", "Treasure Island", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.83", " Richard S. Hartmetz (Goodreads Author) (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 192, 193, "Fifty Shades of Grey", "Fifty Shades of Grey", "Anastasia Steele# Christian Grey# Kate Kavanagh# Elliot Grey# José Rodriguez# Paul Clayton# Ray Steele# Dr. Grace Trevelyan Grey# Jason  Taylor", new DateTime(2011, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Erotica# Adult# BDSM# Contemporary# Chick Lit# Contemporary Romance# Erotic Romance# Adult Fiction", "9780000000000", "English", 356, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 193, 194, "The Clan of the Cave Bear", "The Clan of the Cave Bear", "Ayla# Brun# Broud# Mog-Ur# Iza", new DateTime(2016, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Fantasy# Historical# Classics# Romance# Adventure# Prehistoric# Adult# Novels", "B00466HQ2Y", "English", 516, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 194, 47, "A Storm of Swords", "A Storm of Swords", "Brandon Stark# Catelyn Stark# Tyrion Lannister# Daenerys Targaryen# Robb Stark# Arya Stark# Jaime Lannister# Joffrey Baratheon# Tywin Lannister# Stannis Baratheon# Melisandre# Davos Seaworth# Lysa Arryn# Petyr Baelish# Sansa Stark# Varys# Hodor# Brienne of Tarth# Samwell Tarly# Sandor Clegane# Pyp# Grenn# Tommen Baratheon# Oswell Kettleback# Beric Dondarrion# Thoros of Myr# Jon Snow# Cersei Lannister# Jorah Mormont", new DateTime(2003, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adult# Adventure# Dragons# Audiobook# Epic", "9780000000000", "English", 1177, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 195, 196, "The Canterbury Tales", "The Canterbury Tales", "Classics# Fiction# Poetry# Literature# School# Medieval# Short Stories# Historical Fiction# Classic Literature# Read For School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.5", 0, 196 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 196, 100, "The World According to Garp", "The World According to Garp", "T.S. Garp# Jenny Fields# Helen Garp# Roberta Muldoon", new DateTime(1999, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Contemporary# Literature# Novels# Literary Fiction# Humor# American# Adult Fiction# Drama", "9780000000000", "English", 610, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 197, 95, "A Farewell to Arms", "A Farewell to Arms", "Frederic Henry# Catherine Barkley# Rinaldi", new DateTime(2004, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# War# Literature# Novels# American# Romance# Classic Literature# School", "9780000000000", "English", 293, 198 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 198, 55, "David Copperfield", "David Copperfield", "Classics# Fiction# Literature# Historical Fiction# Novels# 19th Century# British Literature# Classic Literature# Victorian# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4", 0, 199 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 199, 200, "Tote Mädchen lügen nicht", "Tote Mädchen lügen nicht", "Young Adult# Contemporary# Fiction# Realistic Fiction# Mystery# Mental Health# Teen# Audiobook# Romance# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "German", "3.92", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 200, 201, "Wicked: The Life and Times of the Wicked Witch of the West", "Wicked: The Life and Times of the Wicked Witch of the West", "Fantasy# Fiction# Adult# Science Fiction Fantasy# Retellings# Adult Fiction# Magic# Witches# Fairy Tales# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.54", 0, 201 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 201, 202, "Shōgun", "Shōgun", "John Blackthorne# Toranaga# Mariko# Jabu# Buntaró# Hiromacu# Martin Alvito# Jaemon# Išido# Ochiba", new DateTime(2009, 2, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Japan# Historical# Classics# Adventure# Asia# Literature# Novels# Japanese Literature", "9780000000000", "English", 1152, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 202, 203, "Extremely Loud & Incredibly Close", "Extremely Loud & Incredibly Close", "Oskar Schell", new DateTime(2006, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Historical Fiction# Novels# Adult Fiction# Adult# Literary Fiction# Literature# New York# Young Adult", "9780000000000", "English", 326, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 203, 107, "Murder on the Orient Express", "Murder on the Orient Express", "Samuel Edward Ratchett# Hector MacQueen# Masterman# Colonel Arbuthnot# Harriet Hubbard# Count Rudolf Andrenyi# Countess Elena Andrenyi# Princess Natalia Dragomiroff# Mary Debenham# Hildegarde Schmidt# Antonio Foscarel# Greta Ohlsson# Pierre Michel# Cyrus Hardman# Dr. Constantine# M. Bouc# Hercule Poirot", new DateTime(2007, 6, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Classics# Fiction# Crime# Mystery Thriller# Audiobook# Thriller# Detective# Adult# British Literature", "9780000000000", "English", 347, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 204, 91, "His Dark Materials", "His Dark Materials", "Lyra Belacqua# Will Parry# Mary Malone# Pantalaimon# Lord Asriel# Iorek Byrnison# Iofur Raknison# Marisa Coulter# Lee Scoresby# Roger Parslow# Stanislaus Grumman# Serafina Pekkala", new DateTime(2003, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Science Fiction Fantasy# Science Fiction# Adventure# Classics# Steampunk# Magic", "9780000000000", "English", 1088, 205 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 205, 206, "A Little Princess", "A Little Princess", "Classics# Fiction# Childrens# Young Adult# Historical Fiction# Middle Grade# Historical# Literature# Juvenile# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 206 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 206, 207, "The Other Boleyn Girl", "The Other Boleyn Girl", "Anne Boleyn# Catherine of Aragon# Jane Seymour# Mary Boleyn# Mary Tudor# Queen of France# Henry VIII of England# Elizabeth I of England# Mary I of England", new DateTime(2003, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Romance# Adult# British Literature# Historical Romance# Tudor Period# Chick Lit# Adult Fiction", "10000000000000", "English", 661, 76 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 207, 208, "Schindler's List", "Schindler's List", "Oskar Schindler# Amon Leopold Göth", new DateTime(1994, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "History# Nonfiction# Classics# Holocaust# War# Historical# World War II# Biography# Literature# Media Tie In", "9780000000000", "English", 429, 208 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 208, 209, "The Boy in the Striped Pajamas", "The Boy in the Striped Pajamas", "Bruno Wisitzki", new DateTime(2006, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Young Adult# Historical# Holocaust# War# Classics# World War II# School# Childrens", "10000000000000", "English", 240, 209 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 209, 210, "Jurassic Park", "Jurassic Park", "John Hammond# Ian Malcolm# Alan Grant# Ellie Sattler# Tim Murphy", new DateTime(2012, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Thriller# Adventure# Fantasy# Horror# Classics# Science Fiction Fantasy# Dinosaurs# Suspense", "B007UH4D3G", "English", 466, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 210, 88, "Last Sacrifice", "Last Sacrifice", "Sydney Sage# Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Adrian Ivashkov# Victor Dashkov# Janine Hathaway# Jillian Mastrano# Abe Mazur# Natasha Ozera# Rosemarie Rose Hathaway", new DateTime(2010, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Fiction# Magic", "9780000000000", "English", 594, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 211, 212, "The Night Circus", "The Night Circus", "Celia Bowen# Marco Alisdair# Isobel Martin# Penelope Poppet Aislin Murray# Winston Widget Aidan Murray# Bailey Clarke# Alexander H.# Hector Bowen# Chandresh Christophe Lefevre# Friedrick Stefan Thiessen# Ethan Barris# Tara Burgess# Lainie Burgess# Tante Padva# Tsukiko", new DateTime(2011, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Romance# Historical Fiction# Magic# Young Adult# Magical Realism# Adult# Audiobook# Historical", "9780000000000", "English", 391, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 212, 213, "Fallen", "Fallen", "Lucinda Price# Daniel Grigori# Cameron Cam Briel# Arriane Alter# Pennyweather Penn Van Syckle Lockwood# Roland Sparks# Gabrielle Gabbe Givens# Mary Margaret Molly Zane", new DateTime(2009, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Angels# Paranormal Romance# Fiction# Supernatural# Urban Fantasy# Teen", "9780000000000", "English", 452, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 213, 214, "The Silmarillion", "The Silmarillion", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.93", " Ted Nasmith (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 214, 215, "The Secret Magdalene", "The Secret Magdalene", "Salome# John the Baptizer# Yeshu’a# Mary Magdalene", new DateTime(2007, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Religion# Historical# Spirituality# Novels# Contemporary# Biblical Fiction# Literature# Biblical", "9780000000000", "English", 448, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 215, 216, "Beloved", "Beloved", "Baby Suggs# Sethe# Beloved# Paul D# Denver# Stamp Paid# Sixo# Halle# Schoolteacher", new DateTime(2004, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Magical Realism# Literature# African American# Historical# Novels# School# Literary Fiction", "9780000000000", "English", 324, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 216, 118, "The Trial", "The Trial", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.96", " Edwin Muir (Translator)\"", " Willa Muir (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 217, 218, "A Confederacy of Dunces", "A Confederacy of Dunces", "Fiction# Classics# Humor# Literature# Comedy# Novels# American# Literary Fiction# Audiobook# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.89", 0, 218 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 218, 95, "The Sun Also Rises", "The Sun Also Rises", "Jake Barnes# Brett Ashley# Robert Cohn# Michael Campbell# Bill Gorton# Pedro Romero", new DateTime(1957, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Novels# American# Historical Fiction# Spain# School# Classic Literature# 20th Century", "10000000000000", "English", 189, 219 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 219, 220, "The Selection", "The Selection", "Aspen Leger# America Singer# Prince Maxon", new DateTime(2012, 4, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Dystopia# Fantasy# Fiction# Science Fiction# Audiobook# Teen# Chick Lit# Young Adult Fantasy", "9780000000000", "English", 336, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 220, 221, "The Velveteen Rabbit", "The Velveteen Rabbit", "Childrens# Classics# Fiction# Picture Books# Fantasy# Animals# Young Adult# Juvenile# Kids# Short Stories", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 221 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 221, 1, "Catching Fire", "Catching Fire", "Katniss Everdeen# Peeta Mellark# Primrose Everdeen# Gale Hawthorne# Effie Trinket# Haymitch Abernathy# Cinna# Finnick Odair# Johanna Mason# President Coriolanus Snow# Madge Undersee# Caesar Flickerman# Twill# Cashmere# Gloss# Enobaria# Beetee# Wiress# Mags# Blight# Woof# Cecilia# Chaff# Seeder# Plutarch Heavensbee# Octavia (Hunger Games)# Portia (hunger Games)", new DateTime(2009, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Romance# Adventure# Teen# Post Apocalyptic# Action", "9780000000000", "English", 391, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 222, 43, "The Lost Hero", "The Lost Hero", "Leo Valdez# Thalia Grace# Annabeth Chase# Hera# Juno# Rachel Elizabeth Dare# Jason Grace# Piper McLean# Will Solace", new DateTime(2010, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Childrens# Greek Mythology# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 553, 143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 223, 224, "Throne of Glass", "Throne of Glass", "Celaena Sardothien# Chaol Westfall# Prince Dorian Havilliard# Princess Nehemia Ytger# Kaltain Rompier", new DateTime(2012, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Magic# Young Adult Fantasy# High Fantasy# New Adult# Adventure# Paranormal", "10000000000000", "English", 406, 224 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 224, 88, "Spirit Bound", "Spirit Bound", "Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Adrian Ivashkov# Victor Dashkov# Mia Rinaldi# Jillian Mastrano# Abe Mazur# Natasha Ozera# Rosemarie Rose Hathaway", new DateTime(2010, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Fiction# Magic", "9780000000000", "English", 489, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 225, 29, "Clockwork Prince", "Clockwork Prince", "Theresa Tessa Gray# Magnus Bane# William Herondale# James Jem Carstairs# Jessamine Lovelace# Henry Branwell# Charlotte Branwell# Nathaniel Gray# Gideon Lightwood# Gabriel Lightwood# Sophie Collins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Steampunk# Historical Fiction# Urban Fantasy# Fiction# Angels# Vampires", "9780000000000", "English", 498, 226 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 226, 53, "The Iliad/The Odyssey", "The Iliad/The Odyssey", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.04", " Bernard Knox (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 227, 228, "The Crucible", "The Crucible", "Classics# Plays# Fiction# Historical Fiction# Drama# School# Read For School# Historical# High School# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.59", 0, 228 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 228, 58, "Cat's Cradle", "Cat's Cradle", "Bokonon# Angela Hoenikker# Emily Hoenikker# Frank Hoenikker# Newt Hoenikker# Papa Monzano# Mona Aamons Monzano# John   --", new DateTime(1999, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Science Fiction# Humor# Literature# Novels# Dystopia# American# Fantasy# 20th Century", "9780000000000", "English", 179, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 229, 230, "The God of Small Things", "The God of Small Things", " Donada Peters (Narrator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Luana Stoica (trad.)", " Diana Quick (Reading)", " Barbara Auer (Narrator)", 0, 230 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 230, 231, "The Wind in the Willows", "The Wind in the Willows", "Classics# Fiction# Childrens# Fantasy# Animals# Young Adult# Adventure# Literature# Middle Grade# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 231 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 231, 232, "The Screwtape Letters", "The Screwtape Letters", "Screwtape# Wormwood# The Patient# Screwtape", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Christian# Religion# Christianity# Fantasy# Theology# Christian Fiction# Faith# Philosophy", "B002BD2V2Y", "English", 228, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 232, 233, "Girl with a Pearl Earring", "Girl with a Pearl Earring", "Johannes Vermeer# Griet# Pieter van Ruijven# Catharina Bolnes# Maria Thins# Tanneke# Pieter (Girl with a pearl earring)# Antonie van Leeuwenhoek", new DateTime(2005, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Classics# Art# Romance# Adult Fiction# Adult# Novels# Literature", "9780000000000", "English", 233, 233 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 233, 234, "The Hiding Place: The Triumphant True Story of Corrie Ten Boom", "The Hiding Place: The Triumphant True Story of Corrie Ten Boom", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.42", " Elizabeth Sherrill (Goodreads Author)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 234, 13, "A Light in the Attic", "A Light in the Attic", "", new DateTime(2002, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Poetry# Childrens# Classics# Fiction# Humor# Young Adult# Picture Books# Juvenile# Middle Grade# Banned Books", "9780000000000", "English", 176, 235 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 235, 236, "The Silence of the Lambs", "The Silence of the Lambs", "Jack Crawford# Hannibal Lecter# Clarice Starling", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Mystery# Crime# Suspense# Mystery Thriller# Classics# Novels# Drama", "9780000000000", "English", 421, 198 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 236, 237, "Shiver", "Shiver", "Grace Brisbane# Sam  Roth# Isabel Culpeper# Jack Culpeper# Geoffrey Beck# Olivia Marx# Rachel# William Koenig", new DateTime(2009, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Werewolves# Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Teen", "9780000000000", "English", 392, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 237, 238, "Uglies", "Uglies", "David Strorm# Tally Youngblood# Shay# Peris# Dr. Cable", new DateTime(2005, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Romance# Teen# Adventure# Post Apocalyptic# Science Fiction Fantasy", "9780000000000", "English", 425, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 238, 29, "City of Fallen Angels", "City of Fallen Angels", "Alexander Alec Lightwood# Jonathan Jace Wayland# Isabelle Izzy Sophia Lightwood# Magnus Bane# Jordan Kyle# Maia Roberts# Jocelyn Fray# Luke Garroway# Camille Belcourt# Clarissa Clary Fray# Simon Lewis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Vampires# Fiction# Angels# Supernatural# Magic", "9780000000000", "English", 425, 239 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 239, 240, "Man's Search for Meaning", "Man's Search for Meaning", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.36", " Isle Lasch (Translator)\"", " William J. Winslade (Afterword)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 240, 241, "She's Come Undone", "She's Come Undone", "", new DateTime(1998, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Chick Lit# Adult Fiction# Novels# Coming Of Age# Adult# Literary Fiction# Drama# Mental Illness", "9780000000000", "English", 465, 241 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 241, 242, "The Phantom of the Opera", "The Phantom of the Opera", "Classics# Fiction# Horror# Romance# Gothic# Mystery# Historical Fiction# France# Literature# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.96", 0, 242 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 242, 243, "Marley and Me: Life and Love With the World's Worst Dog", "Marley and Me: Life and Love With the World's Worst Dog", "Jenny# Patrick Grogan# Marley# Conor Grogan# Colleen Grogan# Família Grogan# John Grogan", new DateTime(2005, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Animals# Memoir# Dogs# Biography# Humor# Biography Memoir# Adult# Contemporary# Autobiography", "9780000000000", "English", 291, 243 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 243, 244, "Ella Enchanted", "Ella Enchanted", "Ella Varner# Lucinda# Mandy# Prince Charmont# Areida# Hattie# Olive Abroholos Elephanta", new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Fairy Tales# Childrens# Middle Grade# Retellings# Magic# Adventure", "9780000000000", "English", 232, 244 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 244, 245, "The Wind-Up Bird Chronicle", "The Wind-Up Bird Chronicle", "Fiction# Magical Realism# Japan# Japanese Literature# Fantasy# Contemporary# Literature# Novels# Mystery# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 245 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 245, 246, "Cinder", "Cinder", "Linh Cinder# Queen Levana# Emperor Kai# Iko# Crescent Moon Cress Darnel# Dr. Dmitri Erland# Sybil Mira# Linh Adri# Linh Peony# Linh Pearl", new DateTime(2012, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Science Fiction# Romance# Dystopia# Retellings# Fiction# Fairy Tales# Audiobook# Young Adult Fantasy", "10000000000000", "English", 400, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 246, 112, "The Green Mile", "The Green Mile", "John Coffey# Paul Edgecomb# Percy Wetmore# American Law Enforcement# Brutus Howell", new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Fantasy# Thriller# Mystery# Supernatural# Paranormal# Crime# Drama# Historical Fiction", "9780000000000", "English", 592, 247 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 247, 248, "Blindness", "Blindness", "The doctor (Blindness)# The doctors wife# The girl with the dark glasses# The first blind man# The first blind mans wife# The boy with the squint# The old man with the black eye patch# The car thief", new DateTime(2013, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Dystopia# Science Fiction# Classics# Novels# Literature# Portugal# Horror# Portuguese Literature# Contemporary", "B003T0GBOM", "English", 349, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 248, 47, "A Clash of Kings", "A Clash of Kings", "Brandon Stark# Catelyn Stark# Tyrion Lannister# Daenerys Targaryen# Eddard Stark# Theon Greyjoy# Robb Stark# Arya Stark# Jaime Lannister# Joffrey Baratheon# Tywin Lannister# Stannis Baratheon# Melisandre# Davos Seaworth# Lysa Arryn# Petyr Baelish# Sansa Stark# Varys# Hodor# Brienne of Tarth# Rickon Stark# Rhaego# Gendry# Edric Storm# Lord High Captain Ser Imry Florent# Selyse Baratheon# Shireen Baratheon# Margaery Tyrell# Mace Tyrell# Ser Garlan Tyrell# Myrcella Baratheon# Rhllor# Hoster Tully# Ser Brynden Tully# Jeor Mormont# Maester Cressen# Maester Pylos# PatchFace# Lord Steffon Baratheon# Cassana Baratheon# Aerys Targaryen II# Ser Harbert# Lord Gulian Swann# Ser Cortnay Penrose# Lord Selwyn the Evenstar# Beric Dondarrion# Thoros of Myr# Bryce Caron# Paxter Redwyne# Ardrian Celtigar# Monford Velaryon# Duram Bar Emmon# Salladhor Saan# Guncer Sunglass# Willem Darry# Robert Arryn# Ser Axell Florent# Syrio Forel# Lommy Greenhands# Hot Pie# Praed# Jaqen Hghar# Rorge# Reysen# Cutjack# Woth# Gerren# Urreg# Ser Ilyn Payne# Ser Arys Oakheart# Ser Boros Blount# Ser Meryn Trant# Ser Mandon Moore# Ser Preston Greenfield# Ser Gregor Clegane# Lord Gyles Rosby# Tanda Stokeworth# Lollys Stokeworth# Falyse Stokeworth# Jalabhar Xho# Ermesande Hayford# Tyrek Lannister# Ser Hobber Redwyne# Ser Horas Redwyne# Ser Balon Swann# Morros Slynt# Janos Slynt# Lothor Brune# Dontos Hollard# Ser Aron Santagar# Old Nan# Septa Mordane# Lord Bronn# Timett son of Timett# Shagga son of Dolf# Chella daughter of Cheyk# Tysha# Vardis Egen# Ser Barristan Selmy# Lancel Lannister# Captain Vylarr# Grey Wind# Nymeria# Shaggydog# Walder Frey# Little Walder Frey# Ser Stevron Frey# Black Walder Frey# Ser Emmon Frey# Red Walder Frey# Walder Rivers# White Walda# Ser Aenys Frey# Ser Rodrik Cassel# Beth Cassel# Farlen# Turnip# Maester Luwin# Septon Chayle# Hayhead# Mikken# Alebelly# Joseth# Shyra Errol# Tomard# TomToo# Jory Cassel# Qhorin Halfhand# Pypar# Todder# Othor# Ser Endrew Tarth# Conwy# Ser Alliser Thorne# Donal Noye# Thoren Smallwood# Jaremy Rykker# Waymar Royce# Ser Arnell# Dywen# Olyvar Frey# Ser Robin Ryger# Ser Cleos Frey# Genna Frey# Ser Edmure Tully# Lord Rickard Karstark# Willem Lannister# Tion Frey# Maester Vyman# Marq Piper# Karyl Vance# Jonos Bracken# Jason Mallister# Patrek Mallister# Greatjon Umber# Tytos Blackwood# Ser Desmond Grell# Burton Crakehall# Ser Amory Lorch# Ser Stafford Lannister# Daven Lannister# Allar Deem# Ser Jacelyn Bywater# Tobho Mott# Allard Seaworth# Dale Seaworth# Maric Seaworth# Matthos Seaworth# Devan Seaworth# Marya Seaworth# Septon Barre# Hubard Rambton# Yohn Royce# Balon Greyjoy# Alannys Greyjoy# Euron Greyjoy# Aeron Greyjoy# Rodrik Greyjoy# Maron Greyjoy# Lord Sawane# Goodbrother of Great Wyk# Sylas Sourmouth# Dagmer Cleftjaw# Maester Qalen# Maester Wendamyr# Rakharo# Aggo# Ko Jhogo# Doreah# Jhiqui# Rhaegal# Viserion# Drogon# Khal Pono# Mirri Maz Duur# Khal Jhaqo# Magister Illyrio# Lynesse Hightower# Lord Leyton Hightower# Gerold Hightower# Tregar Ormollen# Ryman Frey# Hosteen Frey# Pyat Pree# Xaro Xhoan Daxos# Quaithe of the Shadow# Bedwyck# Eddison Tollett# Jarman Buckwell# Ser Mallador Locke# Sheila Whent# Jeyne Poole# Maester Frenken# Podrick Payne# Ironbelly# Master Salloreon# Chataya# Alayaya# Wyman Manderly# Poxy Tym# Halys Hornwood# Daryn Hornwood# Larence Snow# Ser Wendel Manderly# Wylis Manderly# Roose Bolton# Domeric Bolton# Ramsay Snow# Reek# Mors Crowfood# Hother Umber# Robett Glover# Leobald Tallhart# Beren Tallhart# Benfred Tallhart# Ser Helman Tallhart# Howland Reed# Cley Cerwyn# Doran Martell# Trystane Martell# Elia of Dorne# Rhaenys Targaryen# Aegon Targaryen# Hallyne the Pyromancer# Meera Reed# Jojen Reed# Hallis Mollen# Jon Umber# Colen of Greenpools# Lord Estermont# Lord Mathis Rowan# Lady Oakheart# Lord Randyll Tarly# Lucas Blackwood# Ser Perwyn Frey# Jon Fossoway# Guyard Morrigen# Tanton Fossoway# Craster# Mance Rayder# Gared# Lark the Sisterman# Brown Bernarr# Sigrin the Shipwright# Otter Gimpknee# Rymolf Stormdrunk# Donnel Locke# Maester Colemon# The Tickler# Polliver# Dunsen# Mycah# Goodwife Amabel# Goodwife Harra# Weese# Quhuru Mo# Kevan Lannister# Alyn Stackspear# Whitesmile Wat# Lord Lefford# Ser Dunaver# Jodge# Harys Swyft# Maester Tothmure# Lord Vargo Hoat# Lord Lydden# Joss Stilwood# Eggon# Tobbot# Robar Royce# SER ROBERT BRAX# Lymond Vikary# Lord Jast# Martyn Lannister# Ser Parmen Crane# Emmon Cuy# Ser Gawen Wylde# Edwyn Frey# Petyr Frey# Aegon Frey# Stygg# Werlag# Urzen# Black Lorren# Gevin Harlaw# Lord Botley# Todric# Andrik the Unsmiling# Lord Drumm of Old Wyk# Qarl the Maid# Ser Addam Marbrand# Ser Lyonel Baratheon# Tuffleberry# Martyn Rivers# Rymund the Rhymer# Utherydes Wayn# Enger# Long Lew# Poul Pernford# Brandon the Shipwright# Mathos Mallarawan# Wendello Qar Deeth# Egon Emeros the Exquisite# Ser Osmund Kettleblack# Osney Kettleblack# Osfryd Kettleblack# Tygett Lannister# Alester Florent of Brightwater# Lord Meadows# Rattleshirt# Harma the Dogshead# Alfyn Crowkiller# Rickard Stark# The Weeping Man# Symon Silver Tongue# Ashara Dayne# Flement Brax# Pinkeye# Ser Cadwyn# Ben Blackthumb# Shagwell the Fool# Squint# Gariss# Gynir Rednose# Gelmarr the Grim# Squire Dalbridge# Stonesnake# Ygritte# Ethan Glover# Jeffory Mallister# Kyle Royce# Elbert Arryn# Porther# Hullen# Harridan# Ser Arneld# Strong Belwas# Arstan Whitebeard# Walton Steelshanks# Septon Utt# Qyburn# Faithful Ursywck# Elmar Frey# Ser Jared Frey# Harys Haigh# Ronel Rivers# Lord Crakehall# Philip Foote# Josmyn Peckledon# Willit# Dykk Harlaw# Endehar# Red Rolfe# Ulf the Ill# Harrag Sheepstealer# Kenned the Whale# Maester Ballabar# Ragwyle# Arthur Dayne# Dolorous Edd# Robin Flint# Lord Velaryon# Alysanne# Prince Rhaegar# Maester Aemon# King Harren# Hal Mollen# Fat Tom# Maekar Targaryens# Moon Boy# Bael the Bard# Ser Harys Swyft# Lord Rossart# Elenei# Durran Godsgrief# Azor Ahai# Lord Caswell# Chiswyck# Lord of Light# Lord Cerwyn# Lord Hornwood# Ser Mark Mullendore# Lord Celtigar# Ser Errol# Prince Tommen# Myraham# Lord Varner# King Daeron# Lady Lyanna# Lord Caron# Esgred# High Septon# Lady Selyse# Robert I Baratheon# Big Walder Frey# Donella Hornwood# SER ROBERT BRAX# Lymond Vikary# Lord Jast# Martyn Lannister# Ser Parmen Crane# Emmon Cuy# Ser Gawen Wylde# Edwyn Frey# Petyr Frey# Aegon Frey# Stygg# Werlag# Urzen# Black Lorren# Gevin Harlaw# Lord Botley# Todric# Andrik the Unsmiling# Lord Drumm of Old Wyk# Qarl the Maid# Ser Addam Marbrand# Ser Lyonel Baratheon# Tuffleberry# Martyn Rivers# Rymund the Rhymer# Utherydes Wayn# Enger# Long Lew# Poul Pernford# Brandon the Shipwright# Mathos Mallarawan# Wendello Qar Deeth# Egon Emeros the Exquisite# Ser Osmund Kettleblack# Osney Kettleblack# Osfryd Kettleblack# Tygett Lannister# Alester Florent of Brightwater# Lord Meadows# Rattleshirt# Harma the Dogshead# Alfyn Crowkiller# Rickard Stark# The Weeping Man# Symon Silver Tongue# Ashara Dayne# Flement Brax# Pinkeye# Ser Cadwyn# Ben Blackthumb# Shagwell the Fool# Squint# Gariss# Gynir Rednose# Gelmarr the Grim# Squire Dalbridge# Stonesnake# Ygritte# Ethan Glover# Jeffory Mallister# Kyle Royce# Elbert Arryn# Porther# Hullen# Harridan# Ser Arneld# Strong Belwas# Arstan Whitebeard# Walton Steelshanks# Septon Utt# Qyburn# Faithful Ursywck# Elmar Frey# Ser Jared Frey# Harys Haigh# Ronel Rivers# Lord Crakehall# Philip Foote# Josmyn Peckledon# Dykk Harlaw# Endehar# Red Rolfe# Ulf the Ill# Harrag Sheepstealer# Kenned the Whale# Maester Ballabar# Ragwyle# Arthur Dayne# Dolorous Edd# Robin Flint# Lord Velaryon# Alysanne# Prince Rhaegar# Maester Aemon# King Harren# Hal Mollen# Fat Tom# Maekar Targaryens# Moon Boy# Bael the Bard# Ser Harys Swyft# Lord Rossart# Elenei# Durran Godsgrief# Azor Ahai# Lord Caswell# Chiswyck# Lord of Light# Lord Cerwyn# Lord Hornwood# Ser Mark Mullendore# Lord Celtigar# Ser Errol# Prince Tommen# Myraham# Lord Varner# King Daeron# Lady Lyanna# Lord Caron# Esgred# High Septon# Lady Selyse# Ottyn Wythers# SER ROBERT BRAX# Lymond Vikary# Lord Jast# Martyn Lannister# Ser Parmen Crane# Emmon Cuy# Ser Gawen Wylde# Edwyn Frey# Petyr Frey# Aegon Frey# Stygg# Werlag# Urzen# Black Lorren# Gevin Harlaw# Lord Botley# Todric# Andrik the Unsmiling# Lord Drumm of Old Wyk# Qarl the Maid# Ser Addam Marbrand# Ser Lyonel Baratheon# Tuffleberry# Martyn Rivers# Rymund the Rhymer# Utherydes Wayn# Enger# Long Lew# Poul Pernford# Brandon the Shipwright# Mathos Mallarawan# Egon Emeros the Exquisite# Ser Osmund Kettleblack# Osney Kettleblack# Osfryd Kettleblack# Tygett Lannister# Alester Florent of Brightwater# Lord Meadows# Rattleshirt# Harma the Dogshead# Alfyn Crowkiller# Rickard Stark# The Weeping Man# Symon Silver Tongue# Ashara Dayne# Flement Brax# Pinkeye# Ser Cadwyn# Ben Blackthumb# Shagwell the Fool# Squint# Gariss# Gynir Rednose# Gelmarr the Grim# Squire Dalbridge# Stonesnake# Ygritte# Ethan Glover# Jeffory Mallister# Kyle Royce# Elbert Arryn# Porther# Hullen# Harridan# Ser Arneld# Strong Belwas# Arstan Whitebeard# Walton Steelshanks# Septon Utt# Qyburn# Faithful Ursywck# Elmar Frey# Ser Jared Frey# Harys Haigh# Ronel Rivers# Lord Crakehall# Philip Foote# Josmyn Peckledon# Willit# Dykk Harlaw# Endehar# Red Rolfe# Ulf the Ill# Harrag Sheepstealer# Kenned the Whale# Maester Ballabar# Ragwyle# Arthur Dayne# Dolorous Edd# Robin Flint# Lord Velaryon# Alysanne# Prince Rhaegar# Maester Aemon# King Harren# Hal Mollen# Fat Tom# Maekar Targaryens# Moon Boy# Bael the Bard# Ser Harys Swyft# Lord Rossart# Elenei# Durran Godsgrief# Azor Ahai# Lord Caswell# Chiswyck# Lord of Light# Lord Cerwyn# Lord Hornwood# Ser Mark Mullendore# Lord Celtigar# Ser Errol# Prince Tommen# Myraham# Lord Varner# King Daeron# Lady Lyanna# Lord Caron# Esgred# High Septon# Lady Selyse# Samwell Tarly# Asha Greyjoy# Sandor Clegane# Oswell Kettleback# Tommen Baratheon# Jon Snow# Cersei Lannister# Jorah Mormont", new DateTime(2002, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adult# Adventure# Dragons# Audiobook# Epic", "9780000000000", "English", 969, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 249, 250, "The Sound and the Fury", "The Sound and the Fury", "The Compsons# Dilsey Gibson# Quentin Compson III# Jason Compson IV# Caroline Bascomb Compson# Candace Caddy Compson# Benjamin Benjy Compson# Miss Quentin Compson", new DateTime(1990, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Novels# American# 20th Century# Southern Gothic# Southern# Literary Fiction# School", "10000000000000", "English", 366, 250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 250, 251, "The Shack", "The Shack", "Mackenzie Allen Philips", new DateTime(2008, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Christian# Christian Fiction# Religion# Spirituality# Faith# Inspirational# Christianity# Adult Fiction# Adult", "B001B8Z2S0", "English", 294, 251 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 251, 252, "Marked", "Marked", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Fiction# Supernatural# Urban Fantasy# Paranormal Romance# Teen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.8", 0, 252 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 252, 253, "The Guernsey Literary and Potato Peel Pie Society", "The Guernsey Literary and Potato Peel Pie Society", "Historical Fiction# Fiction# Historical# Romance# World War II# Book Club# War# Adult# Adult Fiction# Books About Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 253 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 253, 95, "For Whom the Bell Tolls", "For Whom the Bell Tolls", "Mariecke# Pilar# Robert Jordan# Anselmo# El Sordo# Pablo Saler", new DateTime(1995, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Historical Fiction# War# Novels# American# Spain# Classic Literature# Literary Fiction", "10000000000000", "English", 471, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 254, 255, "Fear and Loathing in Las Vegas", "Fear and Loathing in Las Vegas", "Fiction# Classics# Humor# Journalism# Novels# American# Literature# Contemporary# Travel# Comedy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 255 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 255, 256, "The House of the Spirits", "The House of the Spirits", "Fiction# Magical Realism# Historical Fiction# Classics# Fantasy# Spanish Literature# Literature# Historical# Novels# Latin American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 256, 257, "The Complete Calvin and Hobbes", "The Complete Calvin and Hobbes", "Calvin# Hobbes", new DateTime(2005, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Comics# Humor# Graphic Novels# Fiction# Comedy# Classics# Graphic Novels Comics# Comic Strips# Childrens# Comic Book", "9780000000000", "English", 1456, 257 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 257, 258, "Roots: The Saga of an American Family", "Roots: The Saga of an American Family", "George Lincoln Rockwell# Alex Haley# Kunta Kinte", new DateTime(1977, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Classics# Historical# African American# Africa# Race# Literature# Audiobook# Novels", "9780000000000", "English", 729, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 258, 112, "Misery", "Misery", "Paul Sheldon# Annie Wilkes", new DateTime(1988, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Suspense# Mystery# Novels# Adult# Mystery Thriller# Crime# Drama", "9780000000000", "English", 370, 142 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 259, 260, "Howl's Moving Castle", "Howl's Moving Castle", "Michael (angel)# Wizard Howl# Sophie Hatter# Calcifer# Witch of the Waste# Lily Angorian", new DateTime(2001, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Magic# Middle Grade# Childrens# Adventure# Classics# Young Adult Fantasy", "9780000000000", "English", 329, 260 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 260, 261, "Stranger in a Strange Land", "Stranger in a Strange Land", "Valentine Michael Smith# Jubal Harshaw# Gillian Boardman# Ben Caxton", new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Fantasy# Novels# Speculative Fiction# Philosophy# Religion# Audiobook", "9780000000000", "English", 525, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 261, 262, "Island of the Blue Dolphins", "Island of the Blue Dolphins", "Karana", new DateTime(2010, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Historical Fiction# Classics# Childrens# Middle Grade# Adventure# Historical# School# Survival", "B0038AUY8M", "English", 194, 262 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 262, 5, "Midnight Sun [2008 Draft]", "Midnight Sun [2008 Draft]", "Edward Cullen# Jacob Black# Bella Swan# Billy Black# Esme Cullen# Alice Cullen# Jasper Hale# Carlisle Cullen# Rosalie Hale# Charlie Swan# Emmett Cullen# Mike Newton# Angela Weber", new DateTime(2008, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Vampires# Romance# Paranormal# Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Teen", "10000000000000", "English", 264, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 263, 79, "The Girl Who Kicked the Hornet's Nest", "The Girl Who Kicked the Hornet's Nest", "Fiction# Mystery# Thriller# Crime# Mystery Thriller# Suspense# Contemporary# Adult# Sweden# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.22", 0, 264 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 264, 265, "The Secret History", "The Secret History", "Richard Papen# Camilla Macaulay# Julian Morrow# Charles Macaulay# Henry Winter# Edmund Corcoran# Francis Abernathy", new DateTime(2004, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Contemporary# Literary Fiction# Thriller# Classics# Adult# Crime# Mystery Thriller# Novels", "9780000000000", "English", 559, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 265, 266, "White Oleander", "White Oleander", "Astrid Magnusson# Ingrid Magnusson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Drama# Adult Fiction# Coming Of Age# Adult# Novels# Chick Lit# Literary Fiction# Young Adult", "9780000000000", "English", 446, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 266, 267, "The Diary of a Young Girl", "The Diary of a Young Girl", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.15", " Barbara Mooyaart-Doubleday (Translator)\"", " 郭清玲 (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 267, 268, "Delirium", "Delirium", "Hana Tate# Magdalena Lena Ella Haloway-Tiddle# Alex Sheathes# Carol Tiddle# Grace Tiddle", new DateTime(2012, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fantasy# Fiction# Teen# Audiobook# Love# Post Apocalyptic", "9780000000000", "English", 441, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 268, 269, "Beautiful Disaster", "Beautiful Disaster", "Abby Abernathy# Travis Maddox# Travis Maddox# Abby Abernathy", new DateTime(2011, 5, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# College# Fiction# Chick Lit# Adult# Love", "B0052VUNHC", "English", 319, 269 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 269, 270, "Othello", "Othello", "Iago# Bianca# Othello# Miguel Cássio# Desdêmona# Emilia# Rodrigo", new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Plays# Fiction# Drama# School# Literature# Theatre# Read For School# Poetry# Tragedy", "9780000000000", "English", 314, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 270, 215, "Flow Down Like Silver: Hypatia of Alexandria", "Flow Down Like Silver: Hypatia of Alexandria", "", new DateTime(2009, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Egypt# Fiction# Historical# Philosophy# Literature# Africa# Romance# Ancient History# Classics", "9780000000000", "English", 301, 271 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 271, 11, "Paper Towns", "Paper Towns", "Margo Roth Spiegelman# Quentin  Jacobsen# Marcus Radar Lincoln# Lacey Pemberton# Ben Starling# Jason Worthington", new DateTime(2009, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Fiction# Romance# Mystery# Realistic Fiction# Teen# Coming Of Age# Adventure# Young Adult Contemporary", "9780000000000", "English", 305, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 272, 99, "The Vampire Lestat", "The Vampire Lestat", "Lestat de Lioncourt# Gabrielle de Lioncourt# Akasha# Marius de Romanus# Nicolas de Lenfrent# Louis de Pointe du Lac# Armand", new DateTime(2004, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Vampires# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Historical Fiction# Adult", "9780000000000", "English", 481, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 273, 274, "Speak", "Speak", "Ivy Hall# Heather# Nichole Smythe Burnell# Melinda Sordino# Andy Evans# David Petrakis# Mr. Freeman# Rachel Bruin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Contemporary# Realistic Fiction# Teen# Mental Health# High School# Coming Of Age# School# Abuse", "9780000000000", "English", 224, 274 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 274, 26, "The Idiot", "The Idiot", " Joseph Frank (Introduction)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Martin Geeson (Narrator)", " Constance Garnett (Translator)", " Eva M. Martin (Translator)", 0, 275 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 275, 270, "King Lear", "King Lear", "Regan# Cordelia# Goneril# Leir of Britain# Fool# Duke of Cornwall# Duke of Albany# Earl of Kent# Earl of Gloucester# Edgar# Edmund", new DateTime(2004, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Plays# Drama# Fiction# School# Literature# Theatre# Poetry# Read For School# Tragedy", "9780000000000", "English", 338, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 276, 277, "The Once and Future King", "The Once and Future King", "Merlin# Sir Lancelot# Sir Mordred# Queen Guinevere# King Arthur", new DateTime(1987, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Classics# Fiction# Historical Fiction# Arthurian# Mythology# Science Fiction Fantasy# Young Adult# Literature# Historical", "9780000000000", "English", 639, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 277, 241, "I Know This Much Is True", "I Know This Much Is True", "", new DateTime(1999, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# Adult Fiction# Mental Illness# Adult# Drama# Psychology# Literature", "9780000000000", "English", 897, 278 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 278, 135, "Neverwhere", "Neverwhere", "Richard Mayhew# Door# Marquis de Carabas# Hunter# Mr. Croup# Mr. Vandemar# Islington# Jessica Bartram# Old Bailey", new DateTime(2003, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Urban Fantasy# Science Fiction Fantasy# Audiobook# Science Fiction# Adventure# Horror# Adult# Young Adult", "9780000000000", "English", 370, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 279, 280, "Into the Wild", "Into the Wild", "Christopher McCandless", new DateTime(1997, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Biography# Travel# Adventure# Classics# Memoir# Nature# Biography Memoir# School# Survival", "9780000000000", "English", 207, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 280, 281, "Inkheart", "Inkheart", "Fantasy# Young Adult# Fiction# Childrens# Middle Grade# Adventure# Magic# Books About Books# Young Adult Fantasy# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.88", 0, 281 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 281, 282, "Uncle Tom's Cabin", "Uncle Tom's Cabin", "Uncle Tom# Simon Legree# Topsy# Evangeline St. Claire# Eliza Harris# George Harris# Augustine St. Clare# Ophelia St. Claire# George Shelby# Tom Loker# Cassy (Uncle Toms Cabin)# Aunt Chloe", new DateTime(1999, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# Historical# American# Novels# Classic Literature# 19th Century# School", "10000000000000", "English", 438, 282 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 282, 283, "\"Lamb: The Gospel According to Biff", "\"Lamb: The Gospel According to Biff", "Fiction# Humor# Historical Fiction# Fantasy# Religion# Comedy# Historical# Audiobook# Adult# Adult Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 283 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 283, 284, "The Historian", "The Historian", "Bartholomew Rossi# Helen Rossi# Dracula", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Fantasy# Horror# Mystery# Vampires# Historical# Paranormal# Gothic# Thriller", "B000FCK6EI", "English", 704, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 284, 67, "The Complete Sherlock Holmes", "The Complete Sherlock Holmes", "Charles Baskerville# Inspector Lestrade# Henry Baskerville# Irene Adler# James Moriarty# Mrs Hudson (Conan Doyle series)# John H. Watson# M.D.# Mycroft Holmes# Sherlock Holmes# Dr. John Watson", new DateTime(1986, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Mystery# Fiction# Crime# Short Stories# Detective# Literature# Mystery Thriller# Historical Fiction# Thriller", "9780000000000", "English", 1796, 285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 285, 286, "Candide", "Candide", "Classics# Fiction# Philosophy# France# Literature# Humor# French Literature# School# 18th Century# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.77", 0, 286 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 286, 77, "James and the Giant Peach", "James and the Giant Peach", "Childrens# Fantasy# Fiction# Classics# Young Adult# Middle Grade# Adventure# Juvenile# Humor# Chapter Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 287 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 287, 288, "Invisible Man", "Invisible Man", "Mr. Norton# Jim Trueblood# Dr. Hebert Bledsoe# Mary Rambo# Lucius Brockway# Brother Jack# Tod Clifton# Ras the Exhorter# Sybil (Invisible Man)# Unnamed Narrator", new DateTime(1995, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# African American# Race# Novels# Historical Fiction# School# American# Literary Fiction", "10000000000000", "English", 581, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 288, 289, "Gone Girl", "Gone Girl", "Nick Dunne# Amy Elliot Dunne# Margo Go Dunne# Rand Elliot# Marybeth Elliot# Jim Gilpin# Rhonda Boney# Tanner Bolt# Andie Hardy# Desi Collings", new DateTime(2014, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Crime# Mystery Thriller# Suspense# Contemporary# Adult# Adult Fiction# Audiobook", "10000000000000", "English", 415, 289 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 289, 290, "Blood River: A Journey to Africa's Broken Heart", "Blood River: A Journey to Africa's Broken Heart", "Henry Morton Stanley", new DateTime(2008, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Travel# Nonfiction# Africa# History# Adventure# Memoir# Biography# Politics# Travelogue# Autobiography", "9780000000000", "English", 363, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 290, 291, "Paradise Lost", "Paradise Lost", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.81", " Contributor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 291, 292, "Leaves of Grass", "Leaves of Grass", "", new DateTime(2006, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Poetry# Classics# Fiction# Literature# American# 19th Century# Philosophy# Classic Literature# School# The United States Of America", "10000000000000", "English", 624, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 292, 293, "All Creatures Great and Small", "All Creatures Great and Small", "James Herriot# Siegfried Farnon# Tristan Farnon# Helen Alderson# Mrs. Hall# Mrs. Pumphrey# Tricky Woo# Granville Bennet# Diana Brompton# Herbert Jarvis# Broom# Charlie Dent# John Skipton# Copfield", new DateTime(1998, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Animals# Memoir# Classics# Biography# Humor# Autobiography# Biography Memoir# British Literature# Audiobook", "9780000000000", "English", 437, 293 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 293, 294, "Graceling", "Graceling", "Katsa (Graceling Realm)# Bitterblue# Leck (Graceling Realm)# Randa (Graceling Realm)# Grandfather Tealiff# Po (Graceling Realm)", new DateTime(2008, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Adventure# Young Adult Fantasy# Magic# High Fantasy# Teen# Paranormal", "10000000000000", "English", 471, 294 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 294, 270, "The Complete Works", "The Complete Works", "", new DateTime(1990, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Poetry# Fiction# Plays# Drama# Literature# Reference# Theatre# Classic Literature# Historical Fiction", "9780000000000", "English", 1248, 295 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 295, 296, "The Thirteenth Tale", "The Thirteenth Tale", "Margaret Lea# Emmeline March# Adeline March# Vida Winter# Aurelius Love", new DateTime(2006, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Historical Fiction# Gothic# Books About Books# Adult# Historical# Fantasy# Book Club# Adult Fiction", "9780000000000", "English", 406, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 296, 297, "Foundation", "Foundation", "Hari Seldon# Hober Mallow# Salvor Hardin", new DateTime(2004, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Fantasy# Space Opera# Novels# Space# Audiobook# Speculative Fiction", "9780000000000", "English", 244, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 297, 245, "Norwegian Wood", "Norwegian Wood", "Fiction# Japan# Romance# Japanese Literature# Contemporary# Novels# Literature# Literary Fiction# Asia# Magical Realism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 147 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 298, 299, "The Things They Carried", "The Things They Carried", "", new DateTime(1998, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# War# Classics# Short Stories# School# Historical# Military Fiction# Literature# Read For School", "9780000000000", "English", 246, 289 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 299, 100, "The Cider House Rules", "The Cider House Rules", "Dr. Wilbur Larch# Candy Kendall# Wally Worthington# Rose Rose# Homer Wells", new DateTime(2000, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Literature# Literary Fiction# Contemporary# Novels# American# Adult Fiction# Historical", "9780000000000", "English", 973, 300 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 300, 301, "The Time Machine", "The Time Machine", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.89", " Carlo Pagetti (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 301, 112, "Different Seasons", "Different Seasons", "", new DateTime(1995, 2, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Short Stories# Thriller# Mystery# Fantasy# Drama# Classics# Suspense# Anthologies", "9780000000000", "English", 560, 10 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 302, 245, "Kafka on the Shore", "Kafka on the Shore", "Fiction# Magical Realism# Japan# Fantasy# Japanese Literature# Contemporary# Novels# Literature# Literary Fiction# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 303 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 303, 304, "Heidi", "Heidi", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Angelo Rinaldi (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 304, 305, "\"Are You There God? It's Me", "\"Are You There God? It's Me", "Young Adult# Fiction# Childrens# Classics# Middle Grade# Coming Of Age# Realistic Fiction# Contemporary# Banned Books# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 305 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 305, 29, "City of Lost Souls", "City of Lost Souls", "Alexander Alec Lightwood# Jonathan Jace Wayland# Isabelle Izzy Sophia Lightwood# Magnus Bane# Jordan Kyle# Maia Roberts# Jocelyn Fray# Luke Garroway# Sebastian Morgenstern# Aline Penhallow# Camille Belcourt# Clarissa Clary Fray# Jonathan Morgenstern# Simon Lewis", new DateTime(2012, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Vampires# Angels# Fiction# Supernatural# Magic", "9780000000000", "English", 546, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 306, 307, "Sophie's World", "Sophie's World", "Philosophy# Fiction# Classics# Young Adult# Novels# Fantasy# Literature# Contemporary# Unfinished# Scandinavian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 307 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 307, 308, "Walden", "Walden", "Henry David Thoreau", new DateTime(2004, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Nonfiction# Philosophy# Nature# Memoir# Literature# Biography# Essays# American# Environment", "10000000000000", "English", 352, 308 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 308, 111, "The Wise Man's Fear", "The Wise Man's Fear", "Bast# Denna# Ambrose# Kvothe# Simmon# Wilem# The Chandrian# Maer Alveron# Felurian# Devi# Tempi# Auri# Fela# Chronicler", new DateTime(2011, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Science Fiction Fantasy# Adventure# Audiobook# Adult# Epic", "9780000000000", "English", 994, 309 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 309, 310, "زندگی مه آلود پریا", "زندگی مه آلود پریا", "", new DateTime(2015, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction", "9790000000000", "Persian", 204, 310 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 310, 311, "The Awakening", "The Awakening", "Edna Pontellier# Léonce Pontellier# Robert Lebrun# Alcée Arobin# Adèle Ratignolle# Mademoiselle Reisz", new DateTime(2006, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Feminism# School# Literature# Historical Fiction# Read For School# High School# American# 19th Century", "9780000000000", "English", 195, 311 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 311, 312, "Fangirl", "Fangirl", "Wren# Cath Avery# Levi", new DateTime(2013, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Realistic Fiction# New Adult# Audiobook# Chick Lit# Coming Of Age# Young Adult Contemporary", "B00BMKH5NW", "English", 483, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 312, 313, "Sophie's Choice", "Sophie's Choice", "Stingo# Nathan Landau# Sophie Zawistowska", new DateTime(1992, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Holocaust# War# Historical# World War II# Literature# Novels# Literary Fiction", "9780000000000", "English", 562, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 313, 314, "The Prince of Tides", "The Prince of Tides", "Tom Wingo# Susan Lowenstein# Savannah Wingo# Luke Wingo", new DateTime(2002, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Southern# Romance# Contemporary# Literary Fiction# Literature# Drama# Novels# Adult Fiction", "9780000000000", "English", 679, 314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 314, 315, "Never Let Me Go", "Never Let Me Go", "Kathy H.# Ruth# Tommy", new DateTime(2010, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Science Fiction# Dystopia# Contemporary# Literary Fiction# Novels# Adult# Romance# Literature# British Literature", "9780000000000", "English", 288, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 315, 43, "The Son of Neptune", "The Son of Neptune", "Nico di Angelo# Octavian# Hera# Reyna# Juno# Hazel Levesque# Frank Zhang# Ella the Harpy# Percy Jackson", new DateTime(2011, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Greek Mythology# Urban Fantasy# Childrens# Young Adult Fantasy", "9780000000000", "English", 513, 143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 316, 317, "Dead Until Dark", "Dead Until Dark", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft", new DateTime(2001, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Romance# Fiction# Mystery# Paranormal Romance# Supernatural# Horror", "9780000000000", "English", 292, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 317, 318, "Fried Green Tomatoes at the Whistle Stop Cafe", "Fried Green Tomatoes at the Whistle Stop Cafe", "Ruth# Mrs. Ninny Threadgoode# Evelyn Couch# Idgie", new DateTime(2002, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# LGBT# Classics# Chick Lit# Southern# Historical# Humor# Queer# Adult Fiction", "9780000000000", "English", 416, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 318, 193, "Fifty Shades Darker", "Fifty Shades Darker", "Anastasia Steele# Christian Grey", new DateTime(2011, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Erotica# Fiction# BDSM# Adult# Contemporary# Contemporary Romance# Chick Lit# Erotic Romance# Adult Fiction", "9780000000000", "English", 532, 319 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 319, 320, "Ready Player One", "Ready Player One", "Wade Owen Watts# Ogden Morrow# Parzival# Aech# James Donovan Halliday# Art3mis# Kira Morrow# Daito# Shoto# Nolan Sorrento", new DateTime(2011, 8, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Young Adult# Fantasy# Dystopia# Adventure# Science Fiction Fantasy# Adult# Cyberpunk# Novels", "9780000000000", "English", 374, 320 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 320, 321, "Middlemarch", "Middlemarch", "Classics# Fiction# Historical Fiction# Literature# 19th Century# Victorian# British Literature# Novels# Romance# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 321 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 321, 322, "The Monster at the End of this Book", "The Monster at the End of this Book", "Picture Books# Childrens# Fiction# Humor# Classics# Monsters# Storytime# Kids# Juvenile# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.44", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 322, 224, "A Court of Mist and Fury", "A Court of Mist and Fury", "Cassian# Nesta Archeron# Rhysand# Feyre Archeron# Tamlin# Elain Archeron# Azriel# Lucien Vanserra# Morrigan", new DateTime(2016, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Romance# Young Adult# New Adult# Fae# Magic# Fiction# Young Adult Fantasy# Paranormal# High Fantasy", "B015FELXQ0", "English", 626, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 323, 324, "Things Fall Apart", "Things Fall Apart", "Okonkwo# Ikemefuna# Ezinma# Nwoye", new DateTime(1994, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Africa# School# Literature# Novels# Read For School# African Literature# Nigeria", "10000000000000", "English", 209, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 324, 325, "Bridget Jones's Diary", "Bridget Jones's Diary", "Fiction# Chick Lit# Romance# Humor# Contemporary# Adult# Comedy# Adult Fiction# British Literature# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.78", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 325, 326, "Mrs. Dalloway", "Mrs. Dalloway", "Classics# Fiction# Literature# Novels# British Literature# Feminism# 20th Century# Literary Fiction# School# English Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 326 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 326, 1, "Mockingjay", "Mockingjay", "Katniss Everdeen# Peeta Mellark# Primrose Everdeen# Gale Hawthorne# Haymitch Abernathy# Finnick Odair# Johanna Mason# President Coriolanus Snow# President Coin", new DateTime(2010, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Romance# Adventure# Teen# Post Apocalyptic# Science Fiction Fantasy", "9780000000000", "English", 390, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 327, 41, "Franny and Zooey", "Franny and Zooey", "Franny Glass# Zooey Glass# Buddy Glass# Lane Coutell# Bessie Glass", new DateTime(2001, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Short Stories# Literature# American# Novels# 20th Century# Literary Fiction# Adult Fiction# Adult", "9780000000000", "English", 201, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 328, 329, "The Power of One", "The Power of One", "Doc Bradley Stanwick# Peekay# Geel Piet# Morris Levy# The Judge# Mrs. Boxall# Miss Bornstein", new DateTime(1996, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Africa# Classics# South Africa# Coming Of Age# Historical# Young Adult# Novels# Book Club", "9780000000000", "English", 544, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 329, 232, "The Magician's Nephew", "The Magician's Nephew", "Polly# Aslan# Digory Kirke# Jadis# Andrew Kirke# Sarah Houplin# Letitia Ketterley", new DateTime(2005, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Classics# Fiction# Young Adult# Childrens# Adventure# Christian# Middle Grade# Christian Fiction# Magic", "9780000000000", "English", 221, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 330, 135, "Stardust", "Stardust", "Tristran Thorn# Yvaine# Victoria Forester# Dunstan Thorn# Madame Semele# Lady Una# Lord Primus# Lord Septimus# The Lilim# Mr. Monday", new DateTime(2006, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Romance# Young Adult# Adventure# Science Fiction Fantasy# Magic# Audiobook# Fairy Tales# Adult", "9780000000000", "English", 248, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 331, 332, "A Time to Kill", "A Time to Kill", "Jake Brigance# Carl Lee Hailey# Lucien Wilbanks# Harry Rex Vonner# Tonya Hailey# James Willard# Billy Ray Cobb# Ellen Roark# Ozzie Walls# Judge Omar Noose# Rufus Buckley# Ethel Twitty# Freddy Cobb# Stump Sisson# Mickey Mouse (A Time to Kill)# Ollie Agee# Mack Loyd Crowell# Bo Marsharfsky# Dr. W.T. Bass# Clyde Sisco# DeWayne Looney# Dr. Wilbert Rodeheaver# Wanda Womack", new DateTime(2004, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Crime# Suspense# Legal Thriller# Mystery Thriller# Drama# Novels# Adult Fiction", "10000000000000", "English", 515, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 332, 112, "The Gunslinger", "The Gunslinger", "Jake Chambers# Roland Deschain", new DateTime(2003, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Science Fiction Fantasy# Audiobook# Thriller# Post Apocalyptic", "10000000000000", "English", 231, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 333, 62, "Number the Stars", "Number the Stars", "Annemarie Johansen# Ellen Rosen", new DateTime(1998, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Young Adult# Fiction# Classics# Childrens# Historical# Holocaust# Middle Grade# World War II# School", "9780000000000", "English", 137, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 334, 335, "Do Androids Dream of Electric Sheep?", "Do Androids Dream of Electric Sheep?", "Rick Deckard# John Isidore# Roy Baty# Rachael Rosen# Iran Deckard# Phil Resch# Luba Luft# Bill Barbour# Pris Stratton# Hannibal Sloat# Irmgard Baty# Inspector Garland# Max Polokov# Wilbur Mercer# Buster Friendly# Al Jarry", new DateTime(2008, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Dystopia# Cyberpunk# Science Fiction Fantasy# Fantasy# Novels# Speculative Fiction# American", "B000SEGTI0", "English", 258, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 335, 22, "Allegiant", "Allegiant", "Beatrice Prior# Peter# Caleb Prior# Christina# Marcus Eaton# Tobias Eaton", new DateTime(2013, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fiction# Science Fiction# Fantasy# Romance# Adventure# Teen# Post Apocalyptic# Audiobook", "9780000000000", "English", 526, 336 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 336, 312, "Eleanor & Park", "Eleanor & Park", "Park Sheridan# Eleanor Douglas", new DateTime(2013, 2, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Audiobook# Teen# Coming Of Age# Young Adult Contemporary# High School", "9780000000000", "English", 328, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 337, 338, "A Short History of Nearly Everything", "A Short History of Nearly Everything", "", new DateTime(2004, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Science# History# Audiobook# Humor# Popular Science# Physics# Historical# Philosophy# Unfinished", "9780000000000", "English", 544, 289 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 338, 9, "The Lord of the Rings", "The Lord of the Rings", "Frodo Baggins# Meriadoc Brandybuck# Peregrin Took# Gandalf# Aragorn# Gimli# Boromir# Bilbo Baggins# Treebeard# Saruman# Éowyn# Éomer# Elrond Half-elven# Arwen Undómiel# Galadriel# Faramir# Gollum# Legolas# Sam Gamgee", new DateTime(2005, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Classics# Fiction# Adventure# Science Fiction Fantasy# Epic Fantasy# Literature# High Fantasy# Novels# Young Adult", "10000000000000", "English", 1216, 81 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 339, 340, "Me Before You", "Me Before You", "Will Traynor# Louisa Lou Clark# Camilla Traynor", new DateTime(2013, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Contemporary# Chick Lit# Adult# Adult Fiction# Audiobook# Drama# Realistic Fiction# Contemporary Romance", "9780000000000", "English", 369, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 340, 43, "The Mark of Athena", "The Mark of Athena", "Leo Valdez# Nico di Angelo# Annabeth Chase# Hades# Jason Grace# Piper McLean# Hazel Levesque# Frank Zhang# Percy Jackson", new DateTime(2012, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Greek Mythology# Urban Fantasy# Romance# Childrens", "9780000000000", "English", 586, 341 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 341, 342, "The Art of Racing in the Rain", "The Art of Racing in the Rain", "Eve# Enzo# Denny Swift# Zoë", new DateTime(2008, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Animals# Contemporary# Dogs# Adult Fiction# Audiobook# Adult# Book Club# Novels# Family", "9780000000000", "English", 321, 342 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 342, 343, "The Way of Kings", "The Way of Kings", "Kaladin Stormblessed# Dalinar Kholin# Shallan Davar# Jasnah Kholin# Adolin Kholin# Hoid", new DateTime(2010, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Audiobook# Science Fiction Fantasy# Adult# Epic# Magic# Adventure", "9780000000000", "English", 1007, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 343, 344, "If I Stay", "If I Stay", "Teddy Hall# Kim Schein# Adam Wilde# Mia Hall", new DateTime(2009, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Teen# Music# Death# Audiobook# Young Adult Contemporary", "9780000000000", "English", 201, 344 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 344, 345, "Black Beauty", "Black Beauty", "Black Beauty# Ginger", new DateTime(2003, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Childrens# Animals# Young Adult# Horses# Historical Fiction# Middle Grade# Adventure# Literature", "9780000000000", "English", 245, 345 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 345, 346, "Legend", "Legend", "June Iparis# Daniel Altan Wing# Metias Iparis# Commander Jameson# Thomas Bryant# Tess# Kaede", new DateTime(2011, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Romance# Fantasy# Fiction# Adventure# Teen# Action# Post Apocalyptic", "10000000000000", "English", 305, 346 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 346, 347, "The Hound of the Baskervilles", "The Hound of the Baskervilles", "Classics# Mystery# Fiction# Crime# Detective# Mystery Thriller# Thriller# British Literature# Literature# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.12", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 347, 191, "A Portrait of the Artist as a Young Man", "A Portrait of the Artist as a Young Man", " J.M. Gaffney (Editor)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Jeri Johnson (Editor)", " Hans Walter Gabler", " Jim Norton (Translation)", 0, 230 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 348, 349, "Gulliver's Travels", "Gulliver's Travels", "Classics# Fiction# Fantasy# Adventure# Literature# Novels# Classic Literature# 18th Century# School# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.57", 0, 252 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 349, 350, "Bel Canto", "Bel Canto", "Katsumi Hosokawa# Roxane Coss# Gen Watanabe# Carmen Lowell", new DateTime(2005, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Literary Fiction# Book Club# Novels# Music# Adult Fiction# Literature# Adult# Romance", "9780000000000", "English", 352, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 350, 351, "American Psycho", "American Psycho", "Patrick Bateman# Evelyn Richards# Timothy Price# Paul Owen# Luis Carruthers# Courtney Lawrence", new DateTime(1991, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Horror# Thriller# Classics# Crime# Contemporary# Mystery# Novels# Literature# American", "9780000000000", "English", 399, 351 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 351, 141, "V for Vendetta", "V for Vendetta", "Graphic Novels# Comics# Fiction# Dystopia# Science Fiction# Graphic Novels Comics# Comic Book# Classics# Politics# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 147 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 352, 353, "Love You Forever", "Love You Forever", "Picture Books# Childrens# Fiction# Classics# Family# Love# Kids# Realistic Fiction# Canada# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 353, 77, "The Witches", "The Witches", "Fantasy# Childrens# Fiction# Classics# Young Adult# Middle Grade# Witches# Magic# Humor# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 354 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 354, 355, "القرآن الكريم", "القرآن الكريم", "Moses (Bible)# Jesus# Abraham (Bible)# Adam (Bible)# Mary (mother of Jesus)", new DateTime(1950, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Religion# Islam# Nonfiction# Classics# Philosophy# Spirituality# Reference# History# Theology# Mythology", "10000000000000", "Arabic", 604, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 355, 356, "The Graveyard Book", "The Graveyard Book", "Fantasy# Young Adult# Fiction# Horror# Paranormal# Childrens# Middle Grade# Audiobook# Ghosts# Supernatural", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 356 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 356, 357, "The Complete Novels", "The Complete Novels", "Mr. Bennet# Mrs. Bennet# Jane Bennet# Elizabeth Bennet# Mary Bennet# Kitty Bennet# Lydia Bennet# Louisa Hurst# Caroline Bingley# Fitzwilliam Darcy# Georgiana Darcy# Lady Catherine de Bourgh# Anne de Bourgh# Colonel Fitzwilliam# Mr. Gardiner# Mrs. Gardiner# Sir William Lucas# Lady Lucas# Charlotte Lucas# Maria Lucas# Lady Russell# Emma Woodhouse# Elinor Dashwood# Marianne Dashwood# Catherine Morland# Henry Tilney# Eleanor Tilney# General Tilney# John Thorpe# Isabella Thorpe# Fanny Price (Mansfield Park)# Edmund Bertram# Henry Crawford# Mary Crawford# Sir Thomas Bertram# Lady Bertram# William Price# Tom Bertram# Maria Bertram# Julia Bertram# Mr. Rushworth# Mr. Yates# Mr. Price# Mrs. Price# Edward Ferrars# Charles Bingley# George Wickham# Mr. William Collins# George Knightley# Harriet Smith# Jane Fairfax# Frank Churchill# Henry Woodhouse# Colonel Brandon# Lady Middleton# John Middleton# Mr. Dashwood# Mrs. John Dashwood# Mrs. Dashwood# Philip Elton# Augusta Elton# Miss Bates# Isabella Woodhouse# John Knightley# Anne Elliot", new DateTime(1996, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Romance# Historical Fiction# Literature# Historical# Classic Literature# Novels# Regency# British Literature", "9780000000000", "English", 1344, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 357, 193, "Fifty Shades Freed", "Fifty Shades Freed", "Anastasia Steele# Christian Grey", new DateTime(2012, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Erotica# Fiction# BDSM# Adult# Contemporary# Contemporary Romance# Chick Lit# Erotic Romance# Adult Fiction", "9780000000000", "English", 579, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 358, 359, "Cold Mountain", "Cold Mountain", "", new DateTime(2006, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Romance# Civil War# War# Classics# Literature# Novels# Literary Fiction", "9780000000000", "English", 356, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 359, 180, "White Fang", "White Fang", "Classics# Fiction# Adventure# Animals# Young Adult# Historical Fiction# Literature# Childrens# Novels# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 360 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 360, 361, "Wonder", "Wonder", "August Pullman# Olivia Pullman# Jack Will# Julian Albans# Summer Dawson# Miranda Navas# Nate Pullman# Isabel Pullman# Justin (Wonder)# Charlotte Cody", new DateTime(2012, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Middle Grade# Contemporary# Realistic Fiction# Childrens# School# Family# Coming Of Age# Juvenile", "10000000000000", "English", 315, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 361, 362, "Beowulf", "Beowulf", "Classics# Poetry# Fiction# Fantasy# School# Mythology# Literature# Medieval# Read For School# Epic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.45", 0, 362 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 362, 363, "Tuck Everlasting", "Tuck Everlasting", "Winnie Foster# Angus Bain# Jesse Tuck# Mae Tuck# Miles Tuck", new DateTime(1985, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Classics# Fiction# Childrens# Middle Grade# School# Historical Fiction# Romance# Read For School", "9780000000000", "English", 148, 363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 363, 343, "The Final Empire", "The Final Empire", "Marsh# Vin# Elend Venture# Sazed# Kelsier# Dockson# Hammond# Breeze# Clubs# Spook# The Lord Ruler# Lord Renoux# Yeden# OreSeur", new DateTime(2006, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Adult# Science Fiction Fantasy# Audiobook# Young Adult# Adventure", "9780000000000", "English", 544, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 364, 365, "Beautiful Creatures", "Beautiful Creatures", "Young Adult# Fantasy# Paranormal# Romance# Fiction# Magic# Supernatural# Witches# Paranormal Romance# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.76", 0, 281 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 365, 89, "Steppenwolf", "Steppenwolf", "Fiction# Classics# Philosophy# German Literature# Literature# Novels# Germany# 20th Century# Literary Fiction# Psychology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 366, 114, "Eldest", "Eldest", "Eragon (The Inheritance Cycle)# Saphira (The Inheritance Cycle)# Oromis (The Inheritance Cycle)# Glaedr (The Inheritance Cycle)# Roran Garrowsson# Hrothgar (The Inheritance Cycle)# Arya (The Inheritance Cycle)# Orik (The Inheritance Cycle)# Horst (The Inheritance Cycle)# Murtagh (The Inheritance Cycle)# Solembum# Jeod Longshanks# The Twins# Nasuada# Queen Islanzadi# Jormundur# Lethrblaka# Albreich# Angela the Herbalist", new DateTime(2007, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Dragons# Adventure# Magic# High Fantasy# Epic Fantasy# Science Fiction Fantasy# Young Adult Fantasy", "9780000000000", "English", 704, 367 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 367, 368, "Dark Lover", "Dark Lover", "Mr. X (Black Dagger Brotherhood)# Marissa# Butch Brian ONeal# Zsadist# Vishous (Black Dagger)# Fritz Perlmutter# Phury# Beth (Elizabeth) Randall# Tohrment# Mr. O# Wellesandra# Darius# The Scribe Virgin# Rhage# Wrath (Blind King)", new DateTime(2005, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Paranormal# Vampires# Paranormal Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Erotica", "9780000000000", "English", 393, 368 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 368, 369, "Go Ask Alice", "Go Ask Alice", "Young Adult# Fiction# Classics# Contemporary# Realistic Fiction# Teen# Mental Health# Banned Books# Coming Of Age# Psychology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.76", 0, 369 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 369, 370, "انتحار فاشل", "انتحار فاشل", "", new DateTime(2016, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Short Stories# Fiction# Anthologies# Novels# Literature# Collections", "9790000000000", "Arabic", 175, 370 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 370, 371, "The Eye of the World", "The Eye of the World", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Loial# Thom Merrilin# Padan Fain# Baalzamon# Elyas Machera# Tam alThor", new DateTime(1990, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Magic# Adult# Audiobook# Epic", "9780000000000", "English", 814, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 371, 98, "The Tell-Tale Heart and Other Writings", "The Tell-Tale Heart and Other Writings", "", new DateTime(2004, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Horror# Fiction# Short Stories# Poetry# Literature# Mystery# Gothic# School# Fantasy", "9780000000000", "English", 448, 285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 372, 250, "As I Lay Dying", "As I Lay Dying", "Cash Bundren# Anse Bundren# Addie Bundren# Darl Bundren# Jewel Bundren# Dewey Dell# Vardaman Bundren# Vernon Tull# Cora Tull# Peabody", new DateTime(1991, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Novels# American# School# Southern Gothic# Literary Fiction# Southern# 20th Century", "9780000000000", "English", 288, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 373, 374, "A Separate Peace", "A Separate Peace", "Classics# Fiction# Young Adult# Historical Fiction# School# Coming Of Age# Literature# Read For School# High School# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.58", 0, 354 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 374, 375, "The Complete Maus", "The Complete Maus", "Vladek Spiegelman# Anja Spiegelman# Art Spiegelman# Mala Spiegelman", new DateTime(2003, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Graphic Novels# Comics# Nonfiction# History# Biography# Memoir# War# Historical# Holocaust# Graphic Novels Comics", "9780000000000", "English", 296, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 375, 4, "Mansfield Park", "Mansfield Park", "Classics# Fiction# Romance# Historical Fiction# Literature# 19th Century# Historical# British Literature# Classic Literature# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.86", 0, 376 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 376, 377, "The Amazing Adventures of Kavalier & Clay", "The Amazing Adventures of Kavalier & Clay", "Joe Kavalier# Sam Clay# Rosa Saks", new DateTime(2001, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Novels# Literature# Historical# Literary Fiction# Contemporary# Comics# Jewish# New York", "9780000000000", "English", 639, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 377, 114, "Brisingr", "Brisingr", "Eragon (The Inheritance Cycle)# Saphira (The Inheritance Cycle)# Oromis (The Inheritance Cycle)# Glaedr (The Inheritance Cycle)# Roran Garrowsson# Sloan (The Inheritance Cycle)# Katrina (The Inheritance Cycle)# Elva (The Inheritance Cycle)# Arya (The Inheritance Cycle)# Orik (The Inheritance Cycle)# Murtagh (The Inheritance Cycle)# Nasuada# Galbatorix# Blödhgarm# Lady Lorana# Queen Islanzadi# Menoa Tree# Rhunön# King Orrin# Fadawar (The Inheritance Cycle)# Jormundur# Trianna (The Inheritance Cycle)# Lethrblaka# Jarsha (The Inheritance Cycle)# Angela the Herbalist", new DateTime(2008, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Dragons# Magic# Adventure# High Fantasy# Epic Fantasy# Science Fiction Fantasy# Young Adult Fantasy", "9780000000000", "English", 748, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 378, 370, "العصبي", "العصبي", "", new DateTime(2016, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Short Stories# Fiction# Anthologies", "9790000000000", "Arabic", 165, 370 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 379, 380, "\"A Child Called \"\"It\"\"\"", "\"A Child Called \"\"It\"\"\"", "", new DateTime(1995, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Memoir# Biography# Psychology# Autobiography# Abuse# Adult# Biography Memoir# True Crime# True Story", "9780000000000", "English", 184, 380 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 380, 381, "Stargirl", "Stargirl", "Stargirl Caraway# Leo Borlock", new DateTime(2002, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Contemporary# Realistic Fiction# Romance# Middle Grade# Childrens# Teen# School# Coming Of Age", "9780000000000", "English", 186, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 381, 382, "Tao Te Ching", "Tao Te Ching", "4.28", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Jacob Needleman (Translation)", " Toinette Lippe (Goodreads Author) (Translation)", " Jane English (Translation)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 382, 96, "Dear John", "Dear John", "Savannah Lynn Curtis# John Tyree", new DateTime(2006, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Young Adult# Love# Contemporary Romance# Drama", "9780000000000", "English", 276, 383 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 383, 384, "Midnight's Children", "Midnight's Children", "Saleem Sinai", new DateTime(1995, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# India# Magical Realism# Classics# Historical Fiction# Fantasy# Literature# Novels# Literary Fiction# Indian Literature", "9780000000000", "English", 647, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 384, 385, "Obsidian", "Obsidian", "Daemon Black# Adam Thompson# Katy Swartz# Dee Black# Andrew Thompson# Ash Thompson# Matthew Garrison", new DateTime(2012, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Aliens# Science Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Fiction", "10000000000000", "English", 335, 385 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 385, 112, "'Salem's Lot", "'Salem's Lot", "Benjamin Mears# Susan Norton# Matt Burke# Mark Petrie# Father Donald Callahan# Mike Ryerson# Dr James Cody# Richard Throckett Straker# Danny Glick# Larry Crockett# Sonny James# Charles Boone# Loretta Starcher# Weasel Craig# Larry McLeod# Joe Crane# June Petrie# Hal Griffen# Dud Rogers# Cynthia Stowens# Buddy Bascomb# Nolly Gardener# Tookey# Miss Coogan# Royal Snow# Harriet Durham", new DateTime(1991, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Vampires# Fantasy# Thriller# Paranormal# Supernatural# Audiobook# Adult# Mystery", "9780000000000", "English", 483, 142 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 386, 21, "The Martian Chronicles", "The Martian Chronicles", "", new DateTime(1984, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Short Stories# Fantasy# Science Fiction Fantasy# American# Audiobook# Literature# Space", "9780000000000", "English", 182, 387 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 387, 388, "Crescendo", "Crescendo", "Nora Grey# Jev Patch Cipriano# Vee Sky# Marcie Millar# Rixon# Scott Parnell", new DateTime(2010, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Angels# Paranormal# Romance# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 432, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 388, 389, "The English Patient", "The English Patient", "Kip# Hana# Geoffrey Clifton# Katharine Clifton# David Caravaggio# Ladislaus de Almásy# Gyges of Lydia# Candaules of Lydia", new DateTime(2006, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Classics# Romance# Historical# War# Canada# Literature# Literary Fiction# Novels", "9780000000000", "English", 320, 389 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 389, 36, "East of Eden", "East of Eden", "Mr. Edwards# Ethel# Lee# Faye# Tom Hamilton# Cyrus Trask# Mrs. Trask# Alice Trask# Adam Trask# Charles Trask# Aron Trask# Caleb Trask# Samuel Hamilton# Liza Hamilton# George Hamilton# Will Hamilton# Joe Hamilton# Lizzie Hamilton# Una Hamilton# Dessie Hamilton# Olive Hamilton# Mollie Hamilton# Cathy Ames# Abra Bacon# Joe Valery", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# Novels# American# Literary Fiction# Historical# Classic Literature# Adult", "9780000000000", "English", 601, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 390, 391, "Cloud Atlas", "Cloud Atlas", "Adam Ewing# Autua# Dr. Goose# Robert Frobisher# Rufus Sixsmith# Vyvyan Ayrs# Jocasta Ayrs# Eva van Outryve de Crommelynck# Luisa Rey# Timothy Cavendish# Sonmi~451# Zachry# Meronym# Hae-Joo Im# Mr. Meeks# Ernie Blacksmith# Nurse Noakes# Javier Gomez# Fay Li# Bill Smoke# Joe Napier# Yoona-939# Isaac Sachs# Old Georgie", new DateTime(2004, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Science Fiction# Fantasy# Historical Fiction# Dystopia# Contemporary# Novels# Literary Fiction# Literature# Historical", "9780000000000", "English", 509, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 391, 392, "Zen and the Art of Motorcycle Maintenance: An Inquiry Into Values", "Zen and the Art of Motorcycle Maintenance: An Inquiry Into Values", "Phaedrus# Sylvia Sutherland# John Sutherland# Chris", new DateTime(2006, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Philosophy# Fiction# Classics# Spirituality# Travel# Psychology# Literature# Self Help# Unfinished# Religion", "9780000000000", "English", 540, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 392, 393, "The Martian", "The Martian", "Mark Watney# Venkat Kapoor# Melissa Lewis# Rick Martinez# Beth Johanssen# Alex Vogel# Teddy Sanders# Mindy Park# Annie Montrose# Bruce Ng# Mitch Henderson# Chris Beck# Rich Purnell# Brendan Hutch", new DateTime(2014, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Audiobook# Adventure# Space# Adult# Science Fiction Fantasy# Thriller# Humor# Survival", "9780000000000", "English", 384, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 393, 394, "The Firm", "The Firm", "Fiction# Thriller# Mystery# Suspense# Crime# Mystery Thriller# Legal Thriller# Novels# Drama# Law", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 394 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 394, 96, "The Last Song", "The Last Song", "Will Blakelee# Veronica Ronnie Miller", new DateTime(2009, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Young Adult# Contemporary# Chick Lit# Adult# Realistic Fiction# Adult Fiction# Drama# Love", "9780000000000", "English", 390, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 395, 396, "My Ántonia", "My Ántonia", "Ántonia Shimerda# Jim Burden# Josiah Burden# Emmaline Burden# Ambrosch Shimerda# Lena Lingard# Otto Fuchs# Jake Marpole# Mr. Shimerda# Mrs. Shimerda", new DateTime(2000, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# School# American# Historical# Novels# Adult Fiction# Classic Literature", "9780000000000", "English", 232, 396 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 396, 397, "Shatter Me", "Shatter Me", "Adam Kent# Juliette Ferrars# Aaron Warner Anderson# Kenji Kishimoto# Castle", new DateTime(2011, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fantasy# Romance# Science Fiction# Paranormal# Fiction# Supernatural# Post Apocalyptic# Audiobook", "9780000000000", "English", 338, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 397, 91, "The Amber Spyglass", "The Amber Spyglass", "Lyra Belacqua# Will Parry# Mary Malone# Pantalaimon# Lord Asriel# Iorek Byrnison# Marisa Coulter# Lee Scoresby# Roger Parslow# Stanislaus Grumman# Serafina Pekkala", new DateTime(2003, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Childrens# Adventure# Science Fiction Fantasy# Steampunk# Audiobook# Magic", "9780000000000", "English", 467, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 398, 399, "Doctor Zhivago", "Doctor Zhivago", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.01", " Manya Harari (Translator)\"", " Max Hayward (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 399, 20, "The Hunchback of Notre-Dame", "The Hunchback of Notre-Dame", "Classics# Fiction# Historical Fiction# France# Literature# French Literature# Gothic# Historical# Romance# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 400 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 400, 401, "Robinson Crusoe", "Robinson Crusoe", "Classics# Fiction# Adventure# Literature# Historical Fiction# Novels# Classic Literature# 18th Century# School# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.68", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 401, 145, "Inferno", "Inferno", "Classics# Poetry# Fiction# Literature# Religion# Fantasy# School# Italian Literature# Philosophy# Medieval", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 402 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 402, 403, "Like Water for Chocolate", "Like Water for Chocolate", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.95", " Carol Christensen (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 403, 130, "Breakfast at Tiffany's and Three Stories", "Breakfast at Tiffany's and Three Stories", "Holly Golightly# Doc Golightly# Joe Bell# I.Y. Yunioshi", new DateTime(1993, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Short Stories# Romance# American# Literature# Audiobook# Novels# 20th Century# New York", "10000000000000", "English", 142, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 404, 405, "Room", "Room", "Jack Tenpenny# Ma# Old Nick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Adult# Adult Fiction# Book Club# Audiobook# Thriller# Drama# Realistic Fiction# Crime", "B003YFIUW8", "English", 321, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 405, 75, "Dragonfly in Amber", "Dragonfly in Amber", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Fergus Fraser# Ian Murray# Claire Randall Fraser# Jonathan Randall# Dougal MacKenzie# Colum MacKenzie# Geillis Duncan# Jenny Murray# Frank Randall# Murtagh Fraser", new DateTime(2001, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Fantasy# Fiction# Time Travel# Historical# Historical Romance# Audiobook# Scotland# Adult", "9780000000000", "English", 963, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 406, 58, "Breakfast of Champions", "Breakfast of Champions", "Kilgore Trout# Eliot Rosewater# Rabo Karabekian# Dwayne Hoover# Francine Pefko# Kazak# Wayne Hoobler# Cyprian Ukwende# Celia Hoover# Harry LeSabre# Bunny Hoover# Beatrice Keedlser# Bonnie MacMahon", new DateTime(1999, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Science Fiction# Humor# Literature# Novels# American# Literary Fiction# Audiobook# Comedy", "9780000000000", "English", 303, 407 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 407, 77, "The BFG", "The BFG", "Fantasy# Childrens# Fiction# Classics# Young Adult# Middle Grade# Humor# Adventure# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.22", 0, 408 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 408, 409, "Six of Crows", "Six of Crows", "Inej Ghafa# Kaz Brekker# Jesper Fahey# Wylan Van Eck# Matthias Helvar# Nina Zenik", new DateTime(2015, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Adventure# Magic# Romance# LGBT# High Fantasy# Audiobook", "9780000000000", "English", 465, 409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 409, 72, "Harry Potter Series Box Set", "Harry Potter Series Box Set", "", new DateTime(2007, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Childrens# Classics# Science Fiction Fantasy# Middle Grade# Novels", "9780000000000", "English", 4100, 410 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 410, 411, "The Origin of Species", "The Origin of Species", "", new DateTime(2004, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science# Nonfiction# Classics# Biology# Evolution# Philosophy# History# Nature# Anthropology# Reference", "9780000000000", "English", 703, 411 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 411, 412, "A Fine Balance", "A Fine Balance", "Maneck Kohlah# Omprakash Darji# Ishvar Darji# Dina Dalal# Rustom Dalal# Nusswan Shroff# Vasantrao Valmik# Thakur Dharamsi# Ashraf Chacha# Rajaram# Shankar# Beggar Master", new DateTime(2001, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# India# Historical Fiction# Canada# Indian Literature# Asia# Literary Fiction# Novels# Literature# Historical", "9780000000000", "English", 603, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 412, 413, "Daughter of Smoke & Bone", "Daughter of Smoke & Bone", "Madrigal# Karou# Akiva (Daughter of Smoke & Bone)# Kazimir# Zuzana# Issa# Brimstone# Thiago# Mik# Ziri", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Angels# Urban Fantasy# Fiction# Magic# Young Adult Fantasy# Supernatural", "9780000000000", "English", 418, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 413, 192, "The Strange Case of Dr. Jekyll and Mr. Hyde", "The Strange Case of Dr. Jekyll and Mr. Hyde", " Dan Chaon (Goodreads Author) (Afterword)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Patrick Horgan (Narrator)", " Théo Varlet (Translation)", " Mervyn Peake (Illustrator)", 0, 414 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 414, 29, "City of Heavenly Fire", "City of Heavenly Fire", "Alexander Alec Lightwood# Jonathan Jace Wayland# Isabelle Izzy Sophia Lightwood# Theresa Tessa Gray# Magnus Bane# Jordan Kyle# Maia Roberts# Jocelyn Fray# Luke Garroway# Sebastian Morgenstern# Clarissa Clary Fray# Simon Lewis", new DateTime(2014, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Urban Fantasy# Vampires# Angels# Fiction# Magic# Supernatural", "9780000000000", "English", 725, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 415, 416, "Evermore", "Evermore", "Ever Bloom# Damen Auguste# Drina# Miles# Haven Turner", new DateTime(2009, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Vampires# Magic", "9780000000000", "English", 301, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 416, 91, "The Subtle Knife", "The Subtle Knife", "Lyra Belacqua# Will Parry# Mary Malone# Pantalaimon# Marisa Coulter# Lee Scoresby# Stanislaus Grumman# Serafina Pekkala# Hester", new DateTime(2018, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Adventure# Science Fiction# Science Fiction Fantasy# Audiobook# Steampunk# Magic", "B00SSJYF8S", "English", 370, 417 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 417, 418, "Death of a Salesman", "Death of a Salesman", "Willy Loman# Linda Loman# Happy Loman# Biff Loman# Ben Loman# Howard Wagner", new DateTime(1994, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Plays# Classics# Fiction# Drama# School# Theatre# Literature# Read For School# High School# American", "9780000000000", "English", 117, 418 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 418, 112, "11/22/1963", "11/22/1963", "John F. Kennedy# Lee Harvey Oswald# Jake Epping# Al Templeton# Harry Dunning# Marina Oswald# Bill Titus# Sadie Dunhill# Yellow Card Man# Deacon Deke Simmons# Ellen Dockerty# George de Mohrenschildt# Richie Tozier# Beverly Marsh", new DateTime(2011, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Science Fiction# Time Travel# Fantasy# Horror# Thriller# Audiobook# Historical# Mystery", "9780000000000", "English", 849, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 419, 109, "The Plague", "The Plague", "Fiction# Classics# Philosophy# France# Literature# French Literature# Novels# 20th Century# Literary Fiction# Africa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.01", 0, 420 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 420, 421, "Midnight in the Garden of Good and Evil", "Midnight in the Garden of Good and Evil", "Jim Williams# Danny Hansford", new DateTime(1999, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# True Crime# Mystery# Crime# History# Southern# Classics# Travel# Memoir# Audiobook", "9780000000000", "English", 386, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 421, 422, "A Streetcar Named Desire", "A Streetcar Named Desire", "Blanche DuBois# Stanley Kowalski# Stella Kowalski# Harold Mitchel# Eunice Hubbel# Steve Hubbel# Pablo Gonzales# Negro Woman# Baby# Matron# Doctor# Mexican Woman# Young Collector", new DateTime(1952, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Plays# Classics# Drama# Fiction# School# Theatre# American# Literature# Read For School# High School", "9780000000000", "English", 107, 422 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 422, 423, "Infinite Jest", "Infinite Jest", "Hal Incadenza# Joelle Van Dyne# Michael Pemulis# Mario Incandenza# Ken Erdedy# Avril Incandenza# Orin Incandenza# Randy Lenz# Ortho Stice# Tiny Ewell# Poor Tony Krause# Clenette Henderson# Remy Marathe# Hugh Steeply# Pat Montesian# Ann Kittenplan# Trevor Axford# LaMont Chu# Geoffrey Day# Gerhardt Schtitt# Ted Schacht# Dr. James Orin Incandenza# Katherine Ann Gompert# Dr. Charles Tavis# Mildred L. Bonk# Harriet Bonk-Green# Jim Troelsch# Donald W. Gately# Bruce Green# Emil Minty# Lyle", new DateTime(2005, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Literature# Novels# Contemporary# Humor# Unfinished# Literary Fiction# American# Philosophy", "9780000000000", "English", 1088, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 423, 424, "The Prince", "The Prince", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.82", " Benjamin Martinez (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 424, 24, "Hamlet", "Hamlet", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.02", " Rex Gibson (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 425, 426, "\"Faust", "\"Faust", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.93", " Peter Salm (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 426, 427, "Snow Flower and the Secret Fan", "Snow Flower and the Secret Fan", "Snowflower# Lily", new DateTime(2005, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# China# Historical# Asia# Book Club# Adult# Adult Fiction# Asian Literature# Novels", "B000FCK71U", "English", 288, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 427, 315, "The Remains of the Day", "The Remains of the Day", "James Stevens# Miss Kenton# Lord Darlington# Mr. Farraday# Reginald Cardinal# M. Dupont# William Stevens# Senator Lewis", new DateTime(2005, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Classics# Literature# Literary Fiction# Historical# Novels# British Literature# Contemporary# Audiobook", "10000000000000", "English", 258, 428 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 428, 429, "Anna and the French Kiss", "Anna and the French Kiss", "Anna Oliphant# Étienne St. Clair# Meredith Chevalier# Rashmi# Joshua Wasserstein# Ellie# Bridgette Saunderwick# Christopher# Dave Higgenbottom# Sean Oliphant# Kevin Quiggley# Amanda Spitterton-Watts# Matt# Isla Martin", new DateTime(2010, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Fiction# Realistic Fiction# Young Adult Contemporary# Contemporary Romance# Teen# Young Adult Romance", "9780000000000", "English", 372, 429 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 429, 47, "A Feast for Crows", "A Feast for Crows", "Arya Stark# Jaime Lannister# Petyr Baelish# Sansa Stark# Varys# Brienne of Tarth# Samwell Tarly# Arianne Martell# Victarion Greyjoy# Asha Greyjoy# Pyp# Tommen Baratheon# Thoros of Myr# Jon Snow# Cersei Lannister", new DateTime(2011, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adult# Adventure# Dragons# Audiobook# Epic", "9780000000000", "English", 1061, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 430, 431, "The Angel Experiment", "The Angel Experiment", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Erasers# Fang# Ari", new DateTime(2006, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Paranormal# Teen# Action# Mystery# Urban Fantasy", "9780000000000", "English", 445, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 431, 432, "Miss Peregrine's Home for Peculiar Children", "Miss Peregrine's Home for Peculiar Children", "Olive Abroholos Elephanta# Fiona Waters# Horace Somnusson# Millard Nullings# Jacob Portman# Emma Bloom# Alma Lefay Peregrine# Abraham Portman# Bronwyn Bruntley# Enoch OConnor# Ferdinand Portman# Hugh Apiston# Claire Densmore# Miss Avocet", new DateTime(2011, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Paranormal# Mystery# Horror# Time Travel# Historical Fiction# Supernatural# Adventure", "10000000000000", "English", 352, 432 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 432, 433, "Matched", "Matched", "Cassia Reyes# Ky Markham# Xander Carrow", new DateTime(2010, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Fantasy# Teen# Audiobook# Futuristic# Post Apocalyptic", "9780000000000", "English", 369, 344 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 433, 434, "Flowers in the Attic", "Flowers in the Attic", "Cathy Dollanganger# Chris Dollanganger# Cory Dollanganger# Carrie Dollanganger# Corrine Dollanganger# Olivia Foxworth", new DateTime(1979, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Horror# Young Adult# Mystery# Classics# Romance# Gothic# Thriller# Drama# Adult", "9780000000000", "English", 389, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 434, 435, "The Shipping News", "The Shipping News", "", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Literature# Canada# Literary Fiction# Novels# Classics# American# Adult Fiction# Adult", "9780000000000", "English", 337, 435 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 435, 436, "\"Unbroken: A World War II Story of Survival", "\"Unbroken: A World War II Story of Survival", "Nonfiction# History# Biography# World War II# War# Historical# Audiobook# Military Fiction# Memoir# Biography Memoir", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 436 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 436, 437, "The Scarlet Pimpernel", "The Scarlet Pimpernel", "Percy Blakeney# Marguerite Blakeney# George IV# Citizen Armand Chauvelin# Armand St. Just# Suzanne de Tournay# Sir Andrew Ffoulkes", new DateTime(2005, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Historical Fiction# Fiction# Adventure# Romance# Historical# Mystery# Literature# France# French Revolution", "9780000000000", "English", 182, 437 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 437, 438, "Hopeless", "Hopeless", "Six# Dean Holder# Sky Davis", new DateTime(2012, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# Fiction# Abuse# High School# Chick Lit# Drama", "9780000000000", "English", 410, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 438, 439, "Jonathan Strange & Mr Norrell", "Jonathan Strange & Mr Norrell", "Jonathan Strange# Gilbert Norrell# George Gordon Byron# 6th Baron Byron# John Uskglass (The Raven King)# John Childermass# Vinculus# Robert Jenkinson# 2nd Earl of Liverpool# Arthur Wellesley# 1st Duke of Wellington# Stephen Black# John Segundus# Mr. Honeyfoot# Mrs. Honeyfoot# Christopher Drawlight# Henry Lascelles# Jeremy Johns# Arabella Woodhope Strange# Laurence Strange# Sir Walter Pole# Lady Emma Wintertowne Pole# Henry Woodhope# John Hyde# Dr. Lancelot Greysteel# Louisa Greysteel# Flora Greysteel# Mrs Delgado# Napoleon Bonaparte", new DateTime(2006, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Historical Fiction# Historical# Magic# Science Fiction Fantasy# Alternate History# Audiobook# Adult# Magical Realism", "10000000000000", "English", 1006, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 439, 440, "The Chosen", "The Chosen", "Reuven Malter# Danny Saunders", new DateTime(1987, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Young Adult# Jewish# Religion# School# Literature# Judaism# Novels", "9780000000000", "English", 304, 440 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 440, 441, "High Fidelity", "High Fidelity", "", new DateTime(1996, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Music# Contemporary# Humor# Romance# Novels# British Literature# Literature# Comedy# Adult Fiction", "9780000000000", "English", 340, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 441, 442, "\"Blood Meridian", "\"Blood Meridian", "Fiction# Historical Fiction# Westerns# Classics# Literature# Novels# American# Horror# Historical# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.17", 0, 442 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 442, 443, "All the Light We Cannot See", "All the Light We Cannot See", "Werner Pfennig# Marie-Laure LeBlanc# Frank Volkheimer# Etienne LeBlanc# Frederick (All the Light We Cannot See)# Jutta Pfennig# Madame Manec# Reinhold von Rumpel# Frau Elena# Daniel LeBlanc# Dr. Hauptmann# Walter Bernd# Bastian", new DateTime(2014, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# War# World War II# Adult# Audiobook# France# Book Club# Adult Fiction", "9780000000000", "English", 531, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 443, 215, "Houdini Heart", "Houdini Heart", "", new DateTime(2011, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Fiction# Mystery# Magical Realism# Literature# Gothic# Thriller# Supernatural# Mythology", "9780000000000", "English", 254, 271 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 444, 445, "Artemis Fowl", "Artemis Fowl", "Artemis Fowl II# Domovoi Butler# Captain Holly Short# Commander Julius Root# Foaly# Mulch Diggums# Juliet Butler# Angeline Fowl# Captain Trouble Kelp# Briar Cudgeon# Nguyen Xuan# Corporal Grub Kelp# Professor Cumulus# Dr Jerbal Argon# Chix Verbil", new DateTime(2003, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Childrens# Adventure# Science Fiction# Magic# Urban Fantasy# Audiobook", "9780000000000", "English", 396, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 445, 446, "Pippi Longstocking", "Pippi Longstocking", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.13", " Louis S. Glanzman (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 446, 72, "The Tales of Beedle the Bard", "The Tales of Beedle the Bard", "", new DateTime(2008, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Young Adult# Short Stories# Childrens# Magic# Middle Grade# Fairy Tales# Science Fiction Fantasy# Audiobook", "9780000000000", "English", 109, 447 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 447, 108, "The Virgin Suicides", "The Virgin Suicides", "Cecilia Lisbon# Lux Lisbon# Mary Lisbon# Therese Lisbon# Bonnie Lisbon", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Classics# Young Adult# Literary Fiction# Coming Of Age# Novels# Literature# Adult Fiction# Adult", "9780000000000", "English", 250, 448 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 448, 449, "The Reader", "The Reader", "Fiction# Historical Fiction# German Literature# Classics# Holocaust# Romance# Historical# Germany# War# World War II", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.76", 0, 449 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 449, 76, "Nineteen Minutes", "Nineteen Minutes", "Josie Cormier# Alex Cormier# Lacy Houghton# Lewis Houghton# Peter Houghton# Jordan McAfee# Patrick Ducharme", new DateTime(2007, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Chick Lit# Adult# Adult Fiction# Drama# Young Adult# Realistic Fiction# Mystery# Crime", "9780000000000", "English", 440, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 450, 43, "The House of Hades", "The House of Hades", "Nico di Angelo# Hades# Hazel Levesque# Annabeth Chase# Percy Jackson# Leo Valdez# Jason Grace# Piper McLean# Frank Zhang", new DateTime(2013, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Middle Grade# Adventure# Greek Mythology# Urban Fantasy# Romance# Magic", "9780000000000", "English", 597, 341 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 451, 452, "Shantaram", "Shantaram", "Lin Ford# Karla Saraanen# Lisa# Prabaker# Abdel Khader Khan# Abdullah Taheri# Nazeer# Didier", new DateTime(2004, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# India# Travel# Adventure# Contemporary# Novels# Asia# Historical Fiction# Unfinished# Crime", "9780000000000", "English", 936, 452 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 452, 453, "\"The Devil in the White City: Murder", "\"The Devil in the White City: Murder", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", "Erik Larson (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 453, 454, "Redeeming Love", "Redeeming Love", "Angel# Michael Hosea", new DateTime(2007, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Christian Fiction# Christian# Fiction# Romance# Historical Fiction# Historical# Historical Romance# Adult# Faith# Christian Romance", "9780000000000", "English", 479, 454 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 454, 455, "The Age of Innocence", "The Age of Innocence", "Classics# Fiction# Historical Fiction# Romance# Literature# American# Historical# Novels# New York# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 455 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 455, 5, "The Host", "The Host", "Melanie Stryder# Ian OShea# Wanderer# Jamie Stryder# Jebediah Stryder# Kyle OShea# Jared Howe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Fantasy# Romance# Fiction# Dystopia# Paranormal# Aliens# Adult# Paranormal Romance", "9780000000000", "English", 620, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 456, 15, "The Lost Symbol", "The Lost Symbol", "Robert Langdon# Katherine Solomon# Peter Solomon# Inoue Sato# Warren Bellamy# Zachary Solomon# Turner Simkins", new DateTime(2009, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Mystery Thriller# Suspense# Adventure# Historical Fiction# Crime# Novels# Adult", "9780000000000", "English", 509, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 457, 458, "Neuromancer", "Neuromancer", "Armitage# Lady 3Jane Marie-France Tessier-Ashpool# Henry Dorsett Case# Wintermute# The Dixie Flatline# Molly Millions", new DateTime(2000, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Cyberpunk# Classics# Science Fiction Fantasy# Dystopia# Fantasy# Novels# Speculative Fiction# Audiobook", "B000O76ON6", "English", 292, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 458, 252, "Betrayed", "Betrayed", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Fiction# Supernatural# Urban Fantasy# Paranormal Romance# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 459 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 459, 460, "Waiting for Godot", "Waiting for Godot", "Estragon# Vladimir# Lucky# Pozzo# boy", new DateTime(2011, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Plays# Classics# Drama# Fiction# Theatre# Literature# Philosophy# School# Irish Literature# France", "10000000000000", "English", 109, 460 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 460, 36, "The Grapes of Wrath", "The Grapes of Wrath", "Tom Joad# Rose of Sharon Joad Rivers# Ma Joad# Pa Joad# Uncle John Joad# Jim Casy# Al Joad# Ruthie Joad# Winfield Joad# Noah Joad# Grampa Joad# Granma Joad# Connie Rivers", new DateTime(2014, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# Novels# School# American# Historical# Classic Literature# High School", "9780000000000", "English", 479, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 461, 4, "Northanger Abbey", "Northanger Abbey", "Classics# Fiction# Romance# Historical Fiction# Gothic# Literature# 19th Century# Historical# British Literature# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 462 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 462, 8, "The Voyage of the Dawn Treader", "The Voyage of the Dawn Treader", "Fantasy# Fiction# Classics# Young Adult# Childrens# Adventure# Christian# Middle Grade# Christian Fiction# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.09", 0, 463 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 463, 191, "Dubliners", "Dubliners", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.85", " Introduction and Notes)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 464, 368, "Lover Awakened", "Lover Awakened", "Mary Luce# Marissa# Butch Brian ONeal# Zsadist# Bella Soang# Vishous (Black Dagger)# Phury# Beth (Elizabeth) Randall# John Matthew# Tohrment# Rehvenge# Wellesandra# The Scribe Virgin# Rhage# Wrath (Blind King)", new DateTime(2006, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Paranormal# Vampires# Paranormal Romance# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 448, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 465, 74, "War and Peace", "War and Peace", "4.12", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Vladimir Levstik (Translator)", " Louise Maude (Translator)", " Aylmer Maude (Translator)", 0, 466 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 466, 224, "A Court of Thorns and Roses", "A Court of Thorns and Roses", "Amarantha# Feyre Archeron# Tamlin# Lucien Vanserra# Rhysand# Nesta Archeron# Elain Archeron", new DateTime(2015, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# New Adult# Retellings# Fiction# Magic# Fae# Young Adult Fantasy# Paranormal", "9780000000000", "English", 419, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 467, 468, "Divine Secrets of the Ya-Ya Sisterhood", "Divine Secrets of the Ya-Ya Sisterhood", "", new DateTime(2004, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Chick Lit# Contemporary# Adult Fiction# Southern# Adult# Novels# Historical Fiction# Humor# Womens", "9780000000000", "English", 383, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 468, 469, "The Waste Land", "The Waste Land", "Poetry# Classics# Fiction# Literature# 20th Century# American# School# British Literature# College# English Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 469, 252, "Untamed", "Untamed", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Fiction# Supernatural# Paranormal Romance# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 470 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 470, 203, "Everything Is Illuminated", "Everything Is Illuminated", "Alexander Perchov# Jonathan Safran Foer", new DateTime(2003, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Contemporary# Novels# Literature# Holocaust# Literary Fiction# Jewish# Magical Realism# Historical", "9780000000000", "English", 276, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 471, 47, "A Dance with Dragons", "A Dance with Dragons", "Brandon Stark# Tyrion Lannister# Daenerys Targaryen# Theon Greyjoy# Arya Stark# Stannis Baratheon# Melisandre# Davos Seaworth# Sansa Stark# Varys# Brienne of Tarth# Jon Snow# Cersei Lannister", new DateTime(2011, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Dragons# Adult# Adventure# Audiobook# Epic", "10000000000000", "English", 1125, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 472, 224, "Crown of Midnight", "Crown of Midnight", "Celaena Sardothien# Chaol Westfall# Prince Dorian Havilliard# Princess Nehemia Ytger# Archer Finn# Kaltain Rompier", new DateTime(2013, 8, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Magic# Fiction# Young Adult Fantasy# New Adult# High Fantasy# Fae# Paranormal", "9780000000000", "English", 420, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 473, 474, "To the Lighthouse", "To the Lighthouse", "James Ramsay# Mrs. Ramsay# Mr. Ramsay# Lily Briscoe# Paul Rayley# Minta Doyle# Charles Tansley# William Bankes# Augustus Carmichael# Andrew Ramsay# Jasper Ramsay# Roger Ramsay# Prue Ramsay# Rose Ramsay# Nancy Ramsay# Cam Ramsay# Mrs. McNab", new DateTime(1989, 12, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Novels# British Literature# 20th Century# Feminism# Literary Fiction# School# Modern Classics", "9780000000000", "English", 209, 474 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 474, 475, "I Know Why the Caged Bird Sings", "I Know Why the Caged Bird Sings", "Marguerite Johnson Maya# Bailey Johnson Jr.# Annie Henderson Momma# Uncle Willie# Bailey Johnson# Vivian Baxter", new DateTime(1993, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Classics# Memoir# Biography# Autobiography# Poetry# Feminism# African American# Biography Memoir# Race", "9780000000000", "English", 289, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 475, 476, "\"I", "\"I", "Science Fiction# Fiction# Classics# Short Stories# Science Fiction Fantasy# Robots# Fantasy# Audiobook# Novels# Speculative Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 476, 5, "The Twilight Collection", "The Twilight Collection", "", new DateTime(2007, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Vampires# Romance# Paranormal# Fiction# Paranormal Romance# Supernatural# Teen# Urban Fantasy", "9780000000000", "English", 1690, 477 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 477, 36, "The Pearl", "The Pearl", "Kino# Juana# Coyotito# Juan Tomas# Apolonia", new DateTime(2002, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# School# Historical Fiction# Novels# Read For School# American# Classic Literature# High School", "9780000000000", "English", 96, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 478, 220, "The One", "The One", "Aspen Leger# America Singer# Prince Maxon", new DateTime(2014, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Dystopia# Fantasy# Fiction# Science Fiction# Audiobook# Teen# Chick Lit# Young Adult Fantasy", "9780000000000", "English", 323, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 479, 480, "The Jungle", "The Jungle", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.75", " Kathleen DeGrave (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 480, 112, "Carrie", "Carrie", "Carrie White# Margaret White# Tommy Ross# Chris Hargensen# Sue Snell# Rita Desjardin# Billy Nolan", new DateTime(2005, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Paranormal# Fantasy# Classics# Supernatural# Adult# Novels# Adult Fiction", "9780000000000", "English", 253, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 481, 482, "Snow Falling on Cedars", "Snow Falling on Cedars", "Kabuo Miyamoto# Ishmael Chambers# Hatsue Miyamoto# Carl Heine", new DateTime(1995, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Mystery# Historical# Literature# Novels# Romance# Classics# Literary Fiction# Adult Fiction", "9780000000000", "English", 460, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 482, 75, "Voyager", "Voyager", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Fergus Fraser# Marsali Fraser# Ian Murray# Lord John Grey# Claire Randall Fraser# Geillis Duncan# Jenny Murray# Stephen Bonnet# Young Ian Murray# William Ransom# Laoghaire MacKenzie# Mr. Willoughby# Joan MacKimmie# Michael Murray", new DateTime(2001, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Fantasy# Fiction# Time Travel# Historical# Historical Romance# Adult# Audiobook# Scotland", "9780000000000", "English", 870, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 483, 484, "\"I", "\"I", "Historical Fiction# Fiction# Classics# Historical# Literature# Italy# Novels# British Literature# Audiobook# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 484 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 484, 224, "Heir of Fire", "Heir of Fire", "Celaena Sardothien# Chaol Westfall# Prince Dorian Havilliard# Manon Blackbeak# Rowan Whitethorn", new DateTime(2014, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Magic# New Adult# Young Adult Fantasy# Fiction# Fae# High Fantasy# Paranormal", "9780000000000", "English", 565, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 485, 486, "Me Talk Pretty One Day", "Me Talk Pretty One Day", "David Sedaris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Humor# Memoir# Essays# Short Stories# Comedy# Biography# Audiobook# Biography Memoir# Autobiography", "9780000000000", "English", 272, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 486, 252, "Chosen", "Chosen", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Fiction# Supernatural# Paranormal Romance# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.91", 0, 356 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 487, 488, "A Room with a View", "A Room with a View", "Lucy Honeychurch# Charlotte Bartlett# George Emerson# Mr. Emerson# Rev. Arthur Beebe# Eleanor Lavish# Cecil Vyse# Freddy Honeychurch# Rev. Cuthbert Eager# Miss Alan", new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Romance# Historical Fiction# Literature# Italy# British Literature# 20th Century# Novels# Classic Literature", "9780000000000", "English", 119, 488 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 488, 55, "Bleak House", "Bleak House", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4", " Hablot Knight Browne (Illustrations)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 489, 490, "The Republic", "The Republic", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.94", " Benjamin Jowett (Translator)\"", " Maria Helena da Rocha Pereira (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 490, 232, "The Last Battle", "The Last Battle", "Aslan# Lucy Pevensie# Edmund Pevensie# Eustace Scrubb# Jill Pole# Jewel# The Anti-Christ# Puzzle# King Tirian# Digory Kirke# Peter Pevensie# Reepicheep# Shift", new DateTime(2005, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Young Adult# Childrens# Christian# Adventure# Middle Grade# Christian Fiction# Science Fiction Fantasy", "9780000000000", "English", 288, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 491, 492, "The Exorcist", "The Exorcist", "Lankester Merrin# Pazuzu# Damien Karras# Regan MacNeil# Chris MacNeil", new DateTime(1994, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Classics# Paranormal# Thriller# Supernatural# Fantasy# Religion# Audiobook# Adult", "9780000000000", "English", 385, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 492, 493, "The Elephant Tree", "The Elephant Tree", "", new DateTime(2010, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Thriller# Fiction# Mystery# Drama# Crime# Suspense# Novels# Dark# Contemporary# Adult Fiction", "9780000000000", "English", 252, 493 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 493, 356, "Coraline", "Coraline", "Fantasy# Horror# Fiction# Young Adult# Childrens# Middle Grade# Audiobook# Paranormal# Adventure# Supernatural", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 494 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 494, 89, "Demian: Die Geschichte von Emil Sinclairs Jugend", "Demian: Die Geschichte von Emil Sinclairs Jugend", "Fiction# Classics# Philosophy# Literature# German Literature# Novels# Germany# 20th Century# Coming Of Age# Spirituality", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "German", "4.13", 0, 326 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 495, 496, "The 5th Wave", "The 5th Wave", "Evan Walker# Cassie Sullivan# Sammy Sullivan# Ben Parish# Colonel Alexander", new DateTime(2013, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Science Fiction# Dystopia# Fiction# Aliens# Fantasy# Post Apocalyptic# Romance# Audiobook# Apocalyptic", "9780000000000", "English", 457, 496 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 496, 497, "The Iron King", "The Iron King", "Meghan Chase# Puck# Grimalkin# Ash - Ashallayn Darkmyr Tallyn# Ethan Chase# Machina The Iron King", new DateTime(2010, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fae# Fairies# Magic# Urban Fantasy# Fiction# Young Adult Fantasy", "9780000000000", "English", 363, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 497, 498, "Quantum Roots II: Worm Holes", "Quantum Roots II: Worm Holes", "", new DateTime(2017, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Drama# Fiction# Contemporary# Novels# Book Club# Epic# Young Adult# Adventure# Adult# New Adult", "9780000000000", "English", 296, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 498, 499, "Aristotle and Dante Discover the Secrets of the Universe", "Aristotle and Dante Discover the Secrets of the Universe", "Aristotle Ari Mendoza# Dante Quintana", new DateTime(2012, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# LGBT# Contemporary# Romance# Fiction# Audiobook# Realistic Fiction# Queer# Coming Of Age# Young Adult Contemporary", "9780000000000", "English", 359, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 499, 500, "The Arabian Nights", "The Arabian Nights", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.04", " A.S. Byatt (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 500, 501, "The Complete Poems of Emily Dickinson", "The Complete Poems of Emily Dickinson", "Poetry# Classics# Fiction# Literature# 19th Century# American# Classic Literature# Womens# School# College", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.23", 0, 501 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 501, 213, "Torment", "Torment", "Lucinda Price# Daniel Grigori# Arriane Alter# Cameron Briel# Shelby Sterris# Miles Fisher# Mary Margaret  Zane# Roland Sparks# Gabrielle Givens# Dawn Casterly# Lillith Clout", new DateTime(2010, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Angels# Romance# Paranormal# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Teen", "9780000000000", "English", 452, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 502, 88, "Bloodlines", "Bloodlines", "Sydney Sage# Dimitri Belikov# Adrian Ivashkov# Jillian Mastrano# Abe Mazur# Edison Eddie Castile# Zoe Sage", new DateTime(2011, 8, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Magic# Supernatural# Paranormal Romance# Fiction", "9780000000000", "English", 421, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 503, 504, "Mistress Suffragette", "Mistress Suffragette", "", new DateTime(2017, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Novels# Historical Fiction# Drama# New Adult# Historical# Adult# Contemporary# Book Club# Young Adult", "B06XG3G2TF", "", 333, 504 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 504, 505, "Vanity Fair", "Vanity Fair", "Classics# Fiction# Historical Fiction# Literature# 19th Century# British Literature# Victorian# Romance# Classic Literature# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 505 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 505, 506, "Wizard's First Rule", "Wizard's First Rule", "Richard Cypher# Kahlan Amnell# Zeddicus Zul Zorander# Darken Rahl", new DateTime(2003, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Magic# Adventure# Romance# Adult# Epic", "9780000000000", "English", 836, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 506, 507, "North and South", "North and South", "Margaret Hale# Frederick Hale# Mr. Hale# Mrs. Hale# Mr. Bell# Dixon# Mrs. Hannah Thornton# Fanny Thornton# Bessy Higgins# Nicholas Higgins# John   Thornton", new DateTime(1994, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Romance# Historical Fiction# Historical# 19th Century# Victorian# Literature# British Literature# Historical Romance", "9780000000000", "English", 521, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 507, 508, "Brideshead Revisited", "Brideshead Revisited", "Charles Ryder# Lord Sebastian Flyte# Lady Julia Flyte# Rex Mottram# Anthony Blanche", new DateTime(1982, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# British Literature# Novels# 20th Century# LGBT# Literary Fiction# Historical", "9780000000000", "English", 351, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 508, 509, "The God Delusion", "The God Delusion", "Aaron# Achilles (Greek hero)# Mother Teresa# Richard Dawkins# Sam Harris# Christopher Hitchens# Stephen Jay Gould# Douglas Adams# Johann Hari# Ted Haggard# Cecil Frances Alexander# Peter Singer# Natalie Angier", new DateTime(2006, 10, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Religion# Science# Philosophy# Atheism# Audiobook# Theology# Psychology# Spirituality# Evolution", "9780000000000", "English", 374, 509 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 509, 112, "Pet Sematary", "Pet Sematary", "Louis Creed# Ellie Creed# Gage Creed# Jud Crandall# Victor Pascow# Rachel Creed", new DateTime(2014, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Fantasy# Paranormal# Audiobook# Adult# Supernatural# Suspense# Mystery", "10000000000000", "English", 580, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 510, 511, "Of Human Bondage", "Of Human Bondage", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.11", " Maeve Binchy (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 511, 512, "Snow Crash", "Snow Crash", "Hiro Protagonist# Y.T.# Da5id Meier# Juanita Marquez# Dr. Emanuel Lagos# Uncle Enzo# L. Bob Rife# Dmitri Raven Ravinoff", new DateTime(2003, 8, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Cyberpunk# Science Fiction Fantasy# Dystopia# Fantasy# Speculative Fiction# Novels# Audiobook# Classics", "B000FBJCJE", "English", 559, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 512, 513, "World War Z: An Oral History of the Zombie War", "World War Z: An Oral History of the Zombie War", "Zombies# Kwang Jing-shu# Nury Televaldi# Stanley MacDonald# Todd Wainio# Maria Zhuganova# Jesika Hendricks# Joe Muhammad", new DateTime(2006, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Zombies# Science Fiction# Fantasy# Post Apocalyptic# Dystopia# Audiobook# Apocalyptic# War", "9780000000000", "English", 342, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 513, 514, "A Great and Terrible Beauty", "A Great and Terrible Beauty", "Gemma Doyle# Kartik# Ann Bradshaw# Felicity Worthington# Pippa Cross", new DateTime(2003, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Historical Fiction# Fiction# Historical# Paranormal# Romance# Magic# Teen# Young Adult Fantasy", "9780000000000", "English", 403, 514 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 514, 515, "Bared to You", "Bared to You", "Gideon Cross# Eva Tramell", new DateTime(2014, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Erotica# Contemporary# Adult# Contemporary Romance# Erotic Romance# Fiction# BDSM# New Adult# Chick Lit", "9780000000000", "English", 334, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 515, 99, "The Witching Hour", "The Witching Hour", "Rowan Mayfair# Michael James Timothy Curry# Aaron Lightner# Lasher# Deirdre Mayfair# Stella Mayfair# Mary Beth Mayfair# Antha Mayfair# Carlotta Mayfair# Ellie Mayfair# Julien Mayfair# Marie Claudette Mayfair Landry# Angélique Mayfair# Katherine Mayfair# Remy Mayfair# Graham Franklin# Lionel Mayfair# Belle Mayfair# Darcy Monahan# Sean Lacy# Petyr van Abel# Deborah Mayfair de Montcleve# Suzanne Mayfair# Lestan Mayfair# Marguerite Mayfair# Tyrone Clifford McNamara# Augustin Mayfair# Jeannette Mayfair# Cortland Mayfair# Barclay Mayfair# Garland Mayfair# Corrington Mayfair# Daniel McIntyre# Nancy Mayfair# Millie Mayfair# Amanda Grady Mayfair# Sean McIntyre# Alice Mayfair", new DateTime(2004, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Fiction# Paranormal# Witches# Supernatural# Urban Fantasy# Gothic# Magic# Adult", "9780000000000", "English", 1207, 516 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 516, 301, "The War of the Worlds", "The War of the Worlds", "Classics# Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Horror# Literature# Novels# Aliens# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 517 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 517, 518, "The Summoning", "The Summoning", "Chloe Saunders# Derek Souza# Victoria Tori Enright# Rachelle Rae Rogers# Simon Bae", new DateTime(2008, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Paranormal# Urban Fantasy# Supernatural# Magic# Romance# Ghosts# Werewolves# Fiction", "9780000000000", "English", 390, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 518, 519, "\"Cry", "\"Cry", "Fiction# Classics# Africa# Historical Fiction# South Africa# Literature# School# Novels# Historical# Read For School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.89", 0, 519 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 519, 520, "Johnny Got His Gun", "Johnny Got His Gun", "Joe Bonham", new DateTime(2000, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# War# Historical Fiction# Horror# Literature# Novels# World War I# Politics# American", "9780000000000", "English", 309, 520 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 520, 521, "Chocolat", "Chocolat", "Caro Clairmont# Josephine Bonnet# Anouk Rocher# Vianne Rocher# Roux# Francis Reynaud# Armande Voizin# Paul-Marie Muscat# Luc Clairmont# Guillaume Duplessis", new DateTime(2000, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Romance# Magical Realism# France# Fantasy# Contemporary# Food# Chick Lit# Historical Fiction# Adult", "9780000000000", "English", 306, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 521, 522, "Halfway to the Grave", "Halfway to the Grave", "Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Tate Bradley# Don Williams", new DateTime(2007, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal# Vampires# Urban Fantasy# Romance# Fantasy# Paranormal Romance# Adult# Supernatural# Fiction# New Adult", "9780000000000", "English", 358, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 522, 523, "Three Cups of Tea: One Man's Mission to Promote Peace ... One School at a Time", "Three Cups of Tea: One Man's Mission to Promote Peace ... One School at a Time", "Nonfiction# Memoir# Biography# Travel# Education# Book Club# Biography Memoir# Pakistan# Inspirational# History", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.65", 0, 523 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 523, 524, "Perfect Chemistry", "Perfect Chemistry", "Alex Fuentes# Brittany Ellis", new DateTime(2008, 12, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Young Adult# Contemporary# Contemporary Romance# High School# Fiction# New Adult# Realistic Fiction# Chick Lit# Young Adult Romance", "9780000000000", "English", 368, 524 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 524, 525, "Red Queen", "Red Queen", "Kilorn Warren# Gisa Barrow# Tiberias Calore Cal VII# Mare Molly Barrow# Maven Calore# Evangeline Samos# Diana Farley# Tiberias Calore VI# Elara Merandus# Julian Jacos# Lucas Samos", new DateTime(2015, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Fiction# Young Adult Fantasy# Magic# Science Fiction# Audiobook# Paranormal", "9780000000000", "English", 383, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 525, 29, "City of Glass", "City of Glass", "Alexander Alec Lightwood# Jonathan Jace Wayland# Valentine Morgenstern# Isabelle Izzy Sophia Lightwood# Magnus Bane# Maia Roberts# Jocelyn Fray# Luke Garroway# Sebastian Morgenstern# Aline Penhallow# Clarissa Clary Fray# Simon Lewis", new DateTime(2009, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Vampires# Fiction# Angels# Supernatural# Magic", "9780000000000", "English", 541, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 526, 29, "The Mortal Instruments Boxed Set: City of Bones; City of Ashes; City of Glass", "The Mortal Instruments Boxed Set: City of Bones; City of Ashes; City of Glass", "", new DateTime(2009, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Vampires# Angels# Supernatural# Paranormal Romance# Fiction", "9780000000000", "English", 1520, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 527, 528, "The Woman in White", "The Woman in White", "Classics# Mystery# Fiction# Gothic# Horror# 19th Century# Victorian# Historical Fiction# Literature# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 528 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 528, 15, "Angels & Demons", "Angels & Demons", "Vittoria Vetra# Robert Langdon# Leonardo Vetra# Gunther Glick# Maximilian Kohler# Camerlengo Carlo Ventresca", new DateTime(2006, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Suspense# Mystery Thriller# Adventure# Crime# Historical Fiction# Novels# Adult", "9780000000000", "English", 736, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 529, 530, "Just Listen", "Just Listen", "Annabel Greene# Owen Armstrong# Whitney Greene", new DateTime(2006, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Chick Lit# Teen# Music# Young Adult Contemporary# High School", "9780000000000", "English", 371, 530 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 530, 531, "2001: A Space Odyssey", "2001: A Space Odyssey", "Heywood Floyd# HAL 9000# Dave Bowman# Frank Poole", new DateTime(2000, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Space# Novels# Fantasy# Audiobook# Literature# Speculative Fiction", "9780000000000", "English", 297, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 531, 530, "The Truth About Forever", "The Truth About Forever", "Macy Queen# Wes Baker# Monica Palmetto# Kristy Palmetto# Bert Baker# Caroline Queen# Jason Talbot# Deborah Queen", new DateTime(2004, 5, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Teen# Young Adult Contemporary# Young Adult Romance# High School", "9780000000000", "English", 374, 532 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 532, 533, "A Discovery of Witches", "A Discovery of Witches", "Sarah Bishop# Sean Ryder# Diana Bishop# Matthew Clairmont# Emily Mather# Miriam Shephard# Hamish Osborne# Marcus Whitmore# Ysabeau de Clermont# Baldwin de Clairmont# Elias Ashmole# Peter Knox# Stephen Proctor# Rebecca Bishop# Juliette Durand# Agatha Wilson# Nathaniel Wilson# Gillian Chamberlain# Marthe (Vampire)# Chris Roberts", new DateTime(2011, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Romance# Paranormal# Vampires# Witches# Magic# Urban Fantasy# Paranormal Romance# Supernatural", "9780000000000", "English", 579, 533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 533, 534, "Unwind", "Unwind", "Lev Calder# Connor Lassiter# Risa Ward", new DateTime(2007, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Horror# Teen# Thriller# Adventure# Survival", "9780000000000", "English", 337, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 534, 535, "Trainspotting", "Trainspotting", "Mark Renton# Simon Williamson", new DateTime(1994, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Classics# Novels# Thriller# Mystery# Scotland# Crime# Drama# Dark", "9780000000000", "English", 430, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 535, 536, "Are You My Mother?", "Are You My Mother?", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Animals# Classics# Family# Kids# Humor# Young Adult# Juvenile", "9780000000000", "English", 64, 536 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 536, 36, "Cannery Row", "Cannery Row", "Eddie# Doc Bradley Stanwick# Dora# Lee Chong# Mack# Hughie# Gay# Hazel# Eddie# Doc# Dora# Lee Chong# Mack", new DateTime(2002, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# Historical Fiction# American# Novels# Literary Fiction# Classic Literature# 20th Century# The United States Of America", "9780000000000", "English", 181, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 537, 24, "Much Ado About Nothing", "Much Ado About Nothing", "4.06", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Gail Kern Paster (Contributor)", " Robert Jackson (Editor)", " Paul Werstine (Editor)", 0, 538 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 538, 539, "Swann's Way", "Swann's Way", "Classics# Fiction# France# Literature# French Literature# Novels# 20th Century# Philosophy# Literary Fiction# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 283 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 539, 540, "Sarah's Key", "Sarah's Key", "Julia Jarmond# Sarah Starzynski# Zoë Tézac# Bertrand Tézac# Michel Starzynski# Wladyslaw Starzynski# Rywka Starzynski# William Rainsferd# Edouard Tézac# Jules Dufaure# Genevieve Dufaure", new DateTime(2007, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Holocaust# Historical# World War II# France# War# Book Club# Adult# Adult Fiction", "9780000000000", "English", 294, 540 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 540, 541, "The Polar Express", "The Polar Express", "Picture Books# Childrens# Christmas# Fiction# Fantasy# Classics# Holiday# Adventure# Kids# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 541, 542, "Acheron", "Acheron", "Styxx of Didymos# Apollymi# Strykerius# Artemis Agrotera# Soteria Tory Eleni Athena Kafieri# Ryssa of Didymos# Jaden (Acheron)# Apollo (Styxx)# Acheron Ash Parthenopaeus", new DateTime(2008, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Mythology# Adult# Fiction# Demons", "9780000000000", "English", 728, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 542, 543, "Lady Chatterley's Lover", "Lady Chatterley's Lover", "Constance Chatterley# Oliver Mellors# Clifford Chatterley# Mrs. Bolton", new DateTime(1983, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Romance# Literature# Novels# Erotica# Banned Books# British Literature# Historical Fiction# 20th Century", "9780000000000", "English", 376, 161 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 543, 220, "The Elite", "The Elite", "Celeste White# Elise Whisks# Aspen Leger# America Singer# Prince Maxon# Kriss Ambers", new DateTime(2013, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Dystopia# Fantasy# Fiction# Science Fiction# Audiobook# Teen# Chick Lit# Young Adult Romance", "9780000000000", "English", 336, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 544, 388, "Silence", "Silence", "Nora Grey# Jev Patch Cipriano# Vee Sky# Marcie Millar# Scott Parnell# Hank Millar# Blythe Gray", new DateTime(2011, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Angels# Paranormal# Romance# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 448, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 545, 546, "Ishmael", "Ishmael", "", new DateTime(2009, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Philosophy# Spirituality# Classics# Environment# Fantasy# Novels# Literature# Religion# School", "B000SEFH6A", "English", 338, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 546, 41, "Nine Stories", "Nine Stories", "Seymour Glass# Beatrice Glass Tannenbaum", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Classics# Literature# American# 20th Century# Literary Fiction# The United States Of America# Novels# Adult Fiction", "9780000000000", "English", 198, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 547, 548, "The Unbecoming of Mara Dyer", "The Unbecoming of Mara Dyer", "Mara Dyer# Noah Shaw", new DateTime(2011, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Mystery# Fiction# Supernatural# Horror# Contemporary# Paranormal Romance", "B004IK988I", "English", 456, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 548, 9, "The Return of the King", "The Return of the King", "Frodo Baggins# Meriadoc Brandybuck# Peregrin Took# Gandalf# Aragorn# Gimli# Bilbo Baggins# Saruman# Éowyn# Éomer# Elrond Half-elven# Arwen Undómiel# Galadriel# Faramir# Gollum# Legolas# Sam Gamgee", new DateTime(1974, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Adventure# Science Fiction Fantasy# High Fantasy# Epic Fantasy# Literature# Novels# Magic", "9780000000000", "English", 385, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 549, 550, "All the Bright Places", "All the Bright Places", "Theodore Finch# Violet Markey", new DateTime(2015, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Mental Health# Mental Illness# Realistic Fiction# Audiobook# Young Adult Contemporary# Teen", "9780000000000", "English", 378, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 550, 280, "Into Thin Air: A Personal Account of the Mount Everest Disaster", "Into Thin Air: A Personal Account of the Mount Everest Disaster", "Rob Hall# Jon Krakauer", new DateTime(1999, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Adventure# Memoir# Travel# Biography# History# Survival# Mountaineering# Biography Memoir# Sports", "9780000000000", "English", 368, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 551, 168, "Far From the Madding Crowd", "Far From the Madding Crowd", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.94", " Shannon Russell (Editor/Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 552, 493, "The Zombie Room", "The Zombie Room", "", new DateTime(2016, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Thriller# Fiction# Mystery# Crime# Drama# Suspense# Dark# Novels# Contemporary# Adult Fiction", "B01E4L4VEG", "English", 241, 553 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 553, 554, "I Am Number Four", "I Am Number Four", "Henri Smith# Sarah Hart# Mark James# Sam Goode# Bernie Kosar# Mogadorians# Number 6# John Smith (Pittacus Lore)", new DateTime(2010, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Aliens# Romance# Paranormal# Adventure# Teen# Action", "9780000000000", "English", 440, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 554, 555, "Angelfall", "Angelfall", "Penryn Young# Raffe# Obadiah West# Dee-Dum# Paige Young# Belial", new DateTime(2012, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Angels# Paranormal# Dystopia# Romance# Urban Fantasy# Post Apocalyptic# Fiction# Supernatural", "B008ELHBAO", "English", 288, 555 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 555, 317, "Dead to the World", "Dead to the World", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Alcide Herveaux", new DateTime(2005, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Romance# Fiction# Mystery# Paranormal Romance# Supernatural# Adult", "9780000000000", "English", 291, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 556, 4, "Persuasion", "Persuasion", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.14", " James Kinsley (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 557, 558, "The Bronze Horseman", "The Bronze Horseman", "Tatiana Metanova# Alexander Belov", new DateTime(2009, 3, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Historical# Historical Romance# Fiction# War# Russia# Adult# World War II# Adult Fiction", "B000FC10Y8", "English", 912, 558 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 558, 559, "You Are Special", "You Are Special", "", new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Picture Books# Childrens# Christian# Fiction# Religion# Inspirational# Christian Fiction# Fantasy# Christianity# Kids", "9780000000000", "English", 32, 559 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 559, 560, "Sabriel", "Sabriel", "Sabriel# Touchstone# Mogget# Abhorsen# Kerrigor# Rogir", new DateTime(1996, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# High Fantasy# Adventure# Science Fiction Fantasy# Audiobook# Teen", "9780000000000", "English", 491, 342 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 560, 561, "Cutting for Stone", "Cutting for Stone", "Thomas Stone# Sister Mary Joseph Praise# Marion Stone# Shiva Stone", new DateTime(2009, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Africa# Book Club# Medicine# Ethiopia# Medical# Novels# Literary Fiction# Historical", "9780000000000", "English", 541, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 561, 144, "Little House on the Prairie", "Little House on the Prairie", "Classics# Historical Fiction# Childrens# Fiction# Young Adult# Historical# Middle Grade# Juvenile# Family# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.19", 0, 562 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 562, 563, "Being and Time", "Being and Time", "", new DateTime(1962, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Philosophy# Nonfiction# Classics# German Literature# Theory# Psychology# Science# Academic# Germany# 20th Century", "9780000000000", "English", 589, 563 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 563, 564, "The Goose Girl", "The Goose Girl", "Razo# Geric# Enna# Princess Anidori-Kiladra# Finn# Selia", new DateTime(2005, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fairy Tales# Romance# Fiction# Retellings# Middle Grade# Adventure# Young Adult Fantasy# Magic", "9780000000000", "English", 383, 564 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 564, 565, "I Capture the Castle", "I Capture the Castle", "Cassandra Mortmain# Rose Mortmain# James Mortmain# Topaz Mortmain# Thomas Mortmain# Stephen Colly# Simon Cotton# Neil Cotton# Miss Marcy# Audrey Fox-Cotton# Leda Fox-Cotton", new DateTime(1998, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Romance# Coming Of Age# Historical# British Literature# Novels# Adult Fiction", "9780000000000", "English", 408, 565 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 565, 566, "The Last Lecture", "The Last Lecture", "Randy Pausch", new DateTime(2008, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Memoir# Biography# Inspirational# Self Help# Philosophy# Autobiography# Biography Memoir# Audiobook# Adult", "B00139VU7E", "English", 217, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 566, 397, "Ignite Me", "Ignite Me", "Adam Kent# Juliette Ferrars# Aaron Warner Anderson# Kenji Kishimoto", new DateTime(2014, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fantasy# Romance# Science Fiction# Paranormal# Fiction# New Adult# Post Apocalyptic# Young Adult Fantasy", "B00DB2YN0C", "English", 421, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 567, 568, "The Glass Menagerie", "The Glass Menagerie", "Plays# Classics# Drama# Fiction# School# Theatre# Literature# Read For School# High School# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.71", 0, 568 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 568, 270, "Twelfth Night", "Twelfth Night", "Viola# Count Orsino# Sebastian# Sir Toby Belch# Malvolio# Sir Andrew Aguecheek# Feste# Sebastion# Olivia", new DateTime(2004, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Plays# Drama# Fiction# School# Romance# Theatre# Literature# Poetry# Read For School", "9780000000000", "English", 272, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 569, 570, "The Darkest Minds", "The Darkest Minds", "Charles Chubs Carrington Meriwether IV (The Darkest Minds)# Ruby Elizabeth Daly (The Darkest Minds)# Liam Stewart (The Darkest Minds)# Suzume Kimura# Clancy Gray (The Darkest Minds)", new DateTime(2012, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fantasy# Science Fiction# Romance# Paranormal# Fiction# Adventure# Supernatural# Young Adult Fantasy", "9780000000000", "English", 488, 570 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 570, 131, "Invisible Monsters", "Invisible Monsters", "Shannon McFarland# Brandy Alexander# Evie Cottrell# Manus Kelley# The Rhea Sisters", new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Thriller# Mystery# Novels# Dark# Adult# Humor# Adult Fiction# Drama", "9780000000000", "", 304, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 571, 572, "The Hours", "The Hours", "Clarissa Vaughan# Laura Brown# Virginia Woolf", new DateTime(2002, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Contemporary# LGBT# Literary Fiction# Novels# Literature# Classics# Historical# American", "9780000000000", "English", 230, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 572, 75, "Drums of Autumn", "Drums of Autumn", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Fergus Fraser# Marsali Fraser# Ian Murray# Claire Randall Fraser# Geillis Duncan# Stephen Bonnet# Young Ian Murray# Duncan Innes", new DateTime(2018, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Fantasy# Fiction# Time Travel# Historical# Historical Romance# Audiobook# Adult# Adventure", "9780000000000", "English", 928, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 573, 574, "Wicked Lovely", "Wicked Lovely", "Aislinn# Keenan# Leslie# Irial# Evan Dennison# Jimmy# Sorcha# Rianne# Niall# Cerise Mar# Donia# Beira# Tavish# Mitchell Price# Seth (Wicked Lovely)# Moira (Wicked Lovely)", new DateTime(2007, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Urban Fantasy# Fairies# Fae# Fiction# Paranormal Romance# Magic", "9780000000000", "English", 328, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 574, 575, "P.S. I Love You", "P.S. I Love You", "Holly Kennedy# Frank Kennedy# Jack Kennedy# Gerry Clark# Sharon McCarthy# Denise Hennessey# Daniel Connolly# Elizabeth Kennedy# Ciara Kennedy# Declan Kennedy# Richard Kennedy# John McCarthy# Tom OConnor", new DateTime(2005, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Chick Lit# Fiction# Contemporary# Adult# Contemporary Romance# Love# Adult Fiction# Drama# Ireland", "9780000000000", "English", 501, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 575, 224, "Queen of Shadows", "Queen of Shadows", "Celaena Sardothien# Chaol Westfall# Rowan Whitethorn# Dorian Havilliard# Aedion Ashryver# Aelin Ashryver Galathynius", new DateTime(2015, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Magic# New Adult# Fiction# Young Adult Fantasy# Fae# High Fantasy# Paranormal", "9780000000000", "English", 648, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 576, 252, "Hunted", "Hunted", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Fiction# Supernatural# Paranormal Romance# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 577 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 577, 65, "World Without End", "World Without End", "Caris# Merthin# Gwenda# Godwyn# Ralph", new DateTime(2007, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Medieval# British Literature# Audiobook# Novels# Romance# Fantasy# Adult", "10000000000000", "English", 1014, 578 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 578, 55, "A Christmas Carol", "A Christmas Carol", "Classics# Fiction# Christmas# Fantasy# Literature# Historical Fiction# Audiobook# Holiday# 19th Century# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 568 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 579, 24, "The Merchant of Venice", "The Merchant of Venice", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.8", " Paul Werstine (Editor)\"", " Barbara A. Mowat (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 580, 581, "The Last Unicorn", "The Last Unicorn", "The Last Unicorn# Mommy Fortuna# Schmendrick# Molly Grue# King Haggard# Prince Lír", new DateTime(2008, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Classics# Fiction# Young Adult# Childrens# Science Fiction Fantasy# Adventure# Magic# Unicorns# Fairy Tales", "9780000000000", "English", 294, 581 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 581, 438, "Slammed", "Slammed", "Layken Cohen# Will Cooper", new DateTime(2016, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# Fiction# Chick Lit# High School# Realistic Fiction# Poetry", "10000000000000", "English", 354, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 582, 144, "Little House in the Big Woods", "Little House in the Big Woods", "Classics# Historical Fiction# Childrens# Fiction# Young Adult# Historical# Middle Grade# Juvenile# Family# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 583 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 583, 584, "Hyperion", "Hyperion", "Science Fiction# Fiction# Fantasy# Space Opera# Science Fiction Fantasy# Audiobook# Time Travel# Horror# Space# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 584 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 584, 85, "No Country for Old Men", "No Country for Old Men", "Ed Tom Bell# Llewelyn Moss# Anton Chigurh# Carla Jean Moss# Dead Dawg# Carson Wells# Deputy Wendell# Loretta Bell", new DateTime(2006, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Thriller# Crime# Westerns# Mystery# Literature# Novels# Classics# Contemporary# American", "9780000000000", "English", 309, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 585, 90, "The Bean Trees", "The Bean Trees", "Taylor Greer# Turtle Greer# Lou Ann Ruiz# Estevan# Esperanza# Mattie", new DateTime(1989, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# Adult Fiction# Adult# School# Classics# Literature# Realistic Fiction", "9780000000000", "English", 232, 586 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 586, 237, "The Raven Boys", "The Raven Boys", "Blue Sargent# Richard Dick Campbell Gansey III# Adam Parrish# Ronan Lynch# Noah (The Raven Cycle)", new DateTime(2012, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Fiction# Magic# Urban Fantasy# Audiobook# Supernatural# Young Adult Fantasy", "9780000000000", "English", 409, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 587, 588, "The Bad Beginning", "The Bad Beginning", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Audiobook# Humor# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 588, 589, "Cyrano de Bergerac", "Cyrano de Bergerac", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.07", " Lowell Bair (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 589, 590, "Speaker for the Dead", "Speaker for the Dead", "Andrew Wiggin", new DateTime(1994, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Young Adult# Audiobook# Space# Aliens# Novels# Space Opera", "9780000000000", "English", 382, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 590, 591, "The Westing Game", "The Westing Game", "Samuel W. Westing# Turtle Wexler# Flora Baumbach# Christos Theodorakis# Denton Deere# J.J. Ford# Alexander McSouthers# Grace Wexler# James Hoo# Berthe Erica Crowe# Otis Amber# Douglas Hoo# Theo Theodorakis# Sydelle Pulaski# Angela Wexler# Sandy Hoo# Jake Wexler", new DateTime(2004, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Young Adult# Fiction# Middle Grade# Childrens# Classics# School# Mystery Thriller# Juvenile# Realistic Fiction", "9780000000000", "English", 182, 591 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 591, 592, "Interpreter of Maladies", "Interpreter of Maladies", "Dev# Elliot# Miranda# Shobha# Lilia# Shukumar# Mr. Pirzada# Mr. Das# Mrs. Das# Mr. Kapasi# Boori Maa# Mrs. Dalal# Laxmi# Mrs. Sen# Sanjeev# Twinkle", new DateTime(2000, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Short Stories# Fiction# India# Contemporary# Literature# Literary Fiction# Indian Literature# Asia# Adult Fiction# Adult", "9780000000000", "English", 198, 81 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 592, 43, "The Red Pyramid", "The Red Pyramid", "Bast# Isis# Anubis# Osiris# Horus (God)# Carter Kane# Sadie Kane# Zia Rashid# Thoth# Khufu# Sekhmet# Julius Kane# Geb# Nut# Set# Nephthys# Serket# Sobek (Death Comes as the End)# Shu# Nekhbet# Apophis# Philip II of Macedon (The albino crocodile)", new DateTime(2010, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Mythology# Middle Grade# Adventure# Fiction# Childrens# Magic# Urban Fantasy# Science Fiction Fantasy", "9780000000000", "English", 516, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 593, 594, "We Were Liars", "We Were Liars", "Cadence Sinclair", new DateTime(2014, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Mystery# Fiction# Romance# Realistic Fiction# Mystery Thriller# Thriller# Audiobook# Teen", "10000000000000", "English", 242, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 594, 265, "The Goldfinch", "The Goldfinch", "Boris Pavlikovsky (The Goldfinch)# Theo Decker# Pippa# Hobie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Audiobook# Art# Adult# Novels# Adult Fiction# Mystery# Literature", "9780000000000", "English", 771, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 595, 596, "All the King's Men", "All the King's Men", "", new DateTime(1996, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Politics# Literature# Novels# American# Literary Fiction# Southern# Historical", "9780000000000", "English", 439, 596 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 596, 24, "Julius Caesar", "Julius Caesar", "Classics# Plays# Fiction# Drama# School# Historical Fiction# Literature# Read For School# Theatre# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.69", 0, 597 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 597, 598, "\"Finding Hope in the Darkness of Grief: Spiritual Insights Expressed Through Art", "\"Finding Hope in the Darkness of Grief: Spiritual Insights Expressed Through Art", "Contemporary# Fiction# Novels# Drama# Book Club# Epic# Adult# New Adult# Poetry# Young Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.33", 0, 598 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 598, 32, "Anne of Avonlea", "Anne of Avonlea", "Marilla Cuthbert# Diana Barry# Gilbert Blythe# Rachel Lynde# Anne Shirley# Davy Keith# Dora Keith# Paul Irving# Stephen Irving# Lavender Lewis# J. A. Harrison# Jane Andrews# Charlotta the Fourth# Anthony Pye", new DateTime(1997, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Historical# Romance# Canada# Audiobook# Middle Grade", "9780000000000", "English", 304, 599 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 599, 600, "A Dog's Purpose", "A Dog's Purpose", "Ethan# Bailey# Heather", new DateTime(2010, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Animals# Dogs# Contemporary# Adult# Fantasy# Audiobook# Adult Fiction# Humor# Young Adult", "9780000000000", "English", 319, 600 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 600, 601, "Peace Like a River", "Peace Like a River", "Rube Land# Swede Land# Davy Land# Jeremiah Land", new DateTime(2002, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Book Club# Adult Fiction# Adult# Literary Fiction# Novels# Contemporary# Coming Of Age# Family", "9780000000000", "English", 312, 601 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 601, 602, "We Need to Talk About Kevin", "We Need to Talk About Kevin", "Eva Khatchadourian# Kevin Khatchadourian# Franklin Plaskett# Celia Khatchadourian", new DateTime(2006, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Thriller# Horror# Crime# Drama# Adult# Literary Fiction# Psychology# Book Club", "9780000000000", "English", 400, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 602, 8, "The Silver Chair", "The Silver Chair", "Fantasy# Fiction# Classics# Young Adult# Childrens# Christian# Adventure# Middle Grade# Christian Fiction# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.96", 0, 603 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 603, 604, "A Monster Calls", "A Monster Calls", "Conor OMalley", new DateTime(2015, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Horror# Contemporary# Middle Grade# Magical Realism# Childrens# Death# Paranormal", "9780000000000", "English", 237, 604 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 604, 605, "The Wasp Factory", "The Wasp Factory", "Frank Cauldhame# Eric Cauldhame# Angus Cauldhame# Mrs Clamp# Diggs", new DateTime(1998, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Horror# Thriller# Mystery# Contemporary# Dark# Drama# Suspense# Novels# Classics", "9780000000000", "English", 192, 605 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 605, 606, "The Art of War", "The Art of War", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.97", " Giray Fidan (Translator)\"", " Pulat Otkan (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 606, 607, "Poison Study", "Poison Study", "Valek# Maren# Commander Ambrose# Janco# Yelena Zaltana# Ari# Rand# General Brazell", new DateTime(2007, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Magic# Fiction# Paranormal# High Fantasy# Young Adult Fantasy# Adventure# New Adult", "9780000000000", "English", 427, 607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 607, 608, "Mythology", "Mythology", "Mythology# Classics# Nonfiction# History# Reference# Religion# School# Literature# Greek Mythology# Short Stories", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 608 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 608, 214, "The Two Towers", "The Two Towers", "Fantasy# Fiction# Classics# Adventure# Science Fiction Fantasy# High Fantasy# Epic Fantasy# Novels# Literature# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.44", 0, 609 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 609, 610, "One Day in the Life of Ivan Denisovich", "One Day in the Life of Ivan Denisovich", "Fiction# Classics# Russia# Historical Fiction# Russian Literature# Literature# Novels# Historical# 20th Century# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 610 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 610, 611, "The Secret", "The Secret", "", new DateTime(2006, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Self Help# Nonfiction# Spirituality# Psychology# Philosophy# Personal Development# Inspirational# Audiobook# New Age# Business", "10000000000000", "English", 199, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 611, 99, "The Queen of the Damned", "The Queen of the Damned", "Lestat de Lioncourt# Gabrielle de Lioncourt# Maharet# Akasha# Enkil# Mael# Khayman# Jesse Miriam Reeves# Marius de Romanus# Daniel Molloy# Louis de Pointe du Lac# Armand", new DateTime(1997, 11, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Vampires# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Adult# Science Fiction Fantasy", "9780000000000", "English", 448, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 612, 613, "Left Behind", "Left Behind", "Fiction# Christian# Christian Fiction# Religion# Fantasy# Thriller# Christianity# Science Fiction# Apocalyptic# Spirituality", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 613 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 613, 614, "The Eyre Affair", "The Eyre Affair", "Thursday Next# Jane Eyre# Acheron Hades# Jack Schitt# Landen Parke-Laine# Pickwick# Emma# Lady Hamilton# Thursdays Dad (name unknown)# Braxton Hicks# Mrs. Nakajima# Joffy Next# Polly Next# Wednesday Next# Spike Stoker# Mycroft Next# Edward Rochester", new DateTime(2003, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Mystery# Humor# Science Fiction# Books About Books# Time Travel# Alternate History# Science Fiction Fantasy# Adult", "9780000000000", "English", 374, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 614, 114, "Inheritance", "Inheritance", "Eragon (The Inheritance Cycle)# Saphira (The Inheritance Cycle)# Glaedr (The Inheritance Cycle)# Roran Garrowsson# Sloan (The Inheritance Cycle)# Katrina (The Inheritance Cycle)# Elva (The Inheritance Cycle)# Arya (The Inheritance Cycle)# Orik (The Inheritance Cycle)# Murtagh (The Inheritance Cycle)# Solembum# Nasuada# Galbatorix# Blödhgarm# King Orrin# Angela the Herbalist", new DateTime(2011, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Dragons# Fiction# Magic# Adventure# High Fantasy# Epic Fantasy# Young Adult Fantasy# Science Fiction Fantasy", "9780000000000", "English", 849, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 615, 268, "Before I Fall", "Before I Fall", "Kent McFuller# Ally Harris# Samantha Kingston# Lindsay Edgecombe# Elody# Juliet Sykes# Izzy Kingston# Rob Cokran", new DateTime(2010, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Fiction# Romance# Fantasy# Realistic Fiction# Teen# Paranormal# Death# Audiobook", "9780000000000", "English", 470, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 616, 66, "The Talisman", "The Talisman", "Horror# Fantasy# Fiction# Thriller# Adventure# Mystery# Supernatural# Audiobook# Paranormal# Science Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 617 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 617, 344, "Where She Went", "Where She Went", "Teddy Hall# Kim Schein# Adam Wilde# Mia Hall", new DateTime(2011, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Music# New Adult# Teen# Audiobook# Young Adult Contemporary", "9780000000000", "English", 297, 429 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 618, 232, "Prince Caspian", "Prince Caspian", "Aslan# Lucy Pevensie# Edmund Pevensie# Prince Caspian# Trumpkin# Peter Pevensie# Susan Pevensie# Reepicheep# Bacchus (god)# Silenus# Nikabrik# King Miraz# Dr. Cornelius# Trufflehunter", new DateTime(2005, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Classics# Young Adult# Childrens# Adventure# Christian# Middle Grade# Christian Fiction# Science Fiction Fantasy", "9780000000000", "English", 240, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 619, 620, "The Memory Keeper's Daughter", "The Memory Keeper's Daughter", "Phoebe# Al# Dr. David Henry# Norah Henry# Bree# Paul Henry", new DateTime(2006, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Adult Fiction# Adult# Historical Fiction# Book Club# Drama# Chick Lit# Novels# Family", "9780000000000", "English", 401, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 620, 604, "The Knife of Never Letting Go", "The Knife of Never Letting Go", "Ben# Aaron# Hildy# Todd Hewitt# Viola Eade# Mayor Prentiss# Cillian# Manchee (Dog)# Davy Prentiss# Jr.", new DateTime(2014, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Adventure# Teen# Audiobook# Thriller# Post Apocalyptic", "9780000000000", "English", 512, 621 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 621, 622, "Shadowfever", "Shadowfever", "MacKayla Lane# Rowena# Dani OMalley# Jericho Barrons# Vlane# Christian MacKeltar# Inspector Jayne# Ryodan# Queen Aoibheal# Darroc# Cruce# Lor", new DateTime(2011, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Paranormal Romance# Fae# Adult# Fiction# Magic# Supernatural", "9780000000000", "English", 608, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 622, 623, "Gone", "Gone", "Sam Temple# Astrid Ellison# Caine Soren# Diana Ladris# Drake Merwin# Quinn Gaither# Lana Lazar# Little Pete", new DateTime(2008, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Paranormal# Romance# Adventure# Supernatural# Teen", "9780000000000", "English", 560, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 623, 624, "Native Son", "Native Son", "Bigger Thomas# Mary Dalton# Mrs. Dalton# Henry Dalton# Jan Erlone# Boris Max# Mrs. Thomas# Buddy Thomas# Vera Thomas", new DateTime(2005, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# African American# Literature# Race# Novels# School# American# Banned Books", "9780000000000", "English", 504, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 624, 625, "Seabiscuit: An American Legend", "Seabiscuit: An American Legend", "", new DateTime(2003, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# History# Biography# Sports# Animals# Horses# Historical# Biography Memoir# American History# Horse Racing", "9780000000000", "English", 457, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 625, 61, "The Blind Assassin", "The Blind Assassin", "Iris Chase# Laura Chase# Alex Thomas# Richard Griffen", new DateTime(2001, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Mystery# Canada# Literary Fiction# Contemporary# Classics# Literature# Science Fiction# Historical", "10000000000000", "English", 637, 626 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 626, 627, "The Killer Angels", "The Killer Angels", "Robert E. Lee# George Pickett# James Longstreet# Joshua Chamberlain", new DateTime(1987, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Civil War# War# Historical# Military Fiction# Classics# American History# American Civil War# School", "9780000000000", "English", 345, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 627, 125, "Foucault's Pendulum", "Foucault's Pendulum", "Fiction# Mystery# Historical Fiction# Literature# Classics# Italian Literature# Thriller# Novels# Italy# Philosophy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 628 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 628, 188, "The Scorch Trials", "The Scorch Trials", "Brenda (Maze Runner)# Teresa Agnes# Minho# Thomas# Newt# Aris Jones# Jorge", new DateTime(2010, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Adventure# Post Apocalyptic# Teen# Audiobook# Mystery", "9780000000000", "English", 362, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 629, 622, "Darkfever", "Darkfever", "MacKayla Lane# Rowena# Jericho Barrons# Vlane# Lord Master# Malluce", new DateTime(2006, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Urban Fantasy# Paranormal# Romance# Paranormal Romance# Fae# Adult# Fiction# Supernatural# Vampires", "9780000000000", "English", 309, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 630, 631, "The History of Love", "The History of Love", "Alma Singer# Leo Gursky# Zvi Litvinoff", new DateTime(2006, 5, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Contemporary# Novels# Literary Fiction# Book Club# Adult Fiction# Adult# Love", "9780000000000", "English", 255, 631 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 631, 632, "If on a Winter's Night a Traveler", "If on a Winter's Night a Traveler", "Fiction# Classics# Italian Literature# Literature# Magical Realism# Italy# Novels# Books About Books# Literary Fiction# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 632 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 632, 4, "Sense and Sensibility", "Sense and Sensibility", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.07", " Ros Ballaster (Introduction/Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 633, 238, "Pretties", "Pretties", "David Strorm# Tally Youngblood# Shay# Dr. Cable# Andrew Simpson Smith# Peris# Zane (Uglies)", new DateTime(2005, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Romance# Teen# Adventure# Post Apocalyptic# Science Fiction Fantasy", "9780000000000", "English", 370, 634 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 634, 635, "The Bourne Identity", "The Bourne Identity", "Jason Bourne# Marie St. Jacques", new DateTime(2005, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Thriller# Mystery# Suspense# Espionage# Adventure# Action# Mystery Thriller# Crime# Novels", "9780000000000", "English", 566, 635 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 635, 343, "Words of Radiance", "Words of Radiance", "Kaladin Stormblessed# Dalinar Kholin# Shallan Davar# Jasnah Kholin# Eshonai# Adolin Kholin# Hoid# Lift", new DateTime(2014, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Audiobook# Magic# Science Fiction Fantasy# Epic# Adult# Adventure", "9780000000000", "English", 1087, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 636, 637, "Possession", "Possession", "Maud Bailey# Roland Michell# Christabel LaMotte# Randolph Henry Ash# Leonora Stern# Mortimer Cropper# James Blackadder# Beatrice Nest# Val# Euan MacIntyre# Ellen Ash# Blanche Glover# Sabine de Kerkoz", new DateTime(1991, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Classics# Mystery# Historical# Literary Fiction# Literature# British Literature# Poetry", "9780000000000", "English", 555, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 637, 638, "Gravity's Rainbow", "Gravity's Rainbow", "Lieutenant Tyrone Slothrop# Pig Bodine", new DateTime(2006, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Science Fiction# Literature# Historical Fiction# Novels# American# War# Unfinished# 20th Century", "9780000000000", "English", 776, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 638, 639, "A People's History of the United States", "A People's History of the United States", "", new DateTime(2005, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "History# Nonfiction# Politics# American History# Historical# Social Justice# Classics# Audiobook# American# Unfinished", "9780000000000", "English", 729, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 639, 640, "I Am Legend and Other Stories", "I Am Legend and Other Stories", "Robert Neville", new DateTime(1997, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Science Fiction# Vampires# Short Stories# Fantasy# Post Apocalyptic# Classics# Dystopia# Zombies", "9780000000000", "English", 317, 640 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 640, 641, "A Brief History of Time", "A Brief History of Time", "", new DateTime(1998, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science# Nonfiction# Physics# History# Astronomy# Philosophy# Classics# Popular Science# Space# Audiobook", "9780000000000", "English", 212, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 641, 642, "Night", "Night", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.34", " François Mauriac (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 642, 643, "Oedipus Rex", "Oedipus Rex", "Classics# Plays# Fiction# Drama# School# Mythology# Read For School# Theatre# Literature# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.71", 0, 643 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 643, 246, "Scarlet", "Scarlet", "Linh Cinder# Queen Levana# Scarlet Benoit# Ze’ev Wolf Kesley# Emperor Kai# Ran Kesley# Carswell Thorne# Iko# Aimery Park# Linh Adri# Linh Pearl# Michelle Benoit", new DateTime(2013, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Science Fiction# Romance# Dystopia# Retellings# Fiction# Fairy Tales# Audiobook# Adventure", "9780000000000", "English", 454, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 644, 645, "Alanna: The First Adventure", "Alanna: The First Adventure", "Alanna of Trebond# Thom of Trebond# Coram Smythesson# George Cooper# Jonathan of Conte# Raoul of Goldenlake# Gareth of Naxen the Second (Gary)# Alex of Tirrigan# Duke Roger of Conte", new DateTime(2005, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Young Adult Fantasy# High Fantasy# Middle Grade# Childrens# Teen", "9780000000000", "English", 274, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 645, 646, "House of Sand and Fog", "House of Sand and Fog", "Colonel Behrani# Kathy Nicolo# Sheriff Lester Burdon", new DateTime(2018, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Literary Fiction# Adult Fiction# Novels# Literature# Book Club# Adult# Drama# Suspense", "9780000000000", "", 368, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 646, 647, "Watchers", "Watchers", "", new DateTime(2003, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Mystery# Suspense# Science Fiction# Drama# Fantasy# Novels# Mystery Thriller", "10000000000000", "English", 624, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 647, 648, "John Adams", "John Adams", "John Adams# Benjamin Franklin# John Dickinson# Abigail Adams# George Washington# Thomas Jefferson", new DateTime(2001, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "History# Biography# Nonfiction# American History# Presidents# Politics# Historical# Biography Memoir# American Revolution# Audiobook", "9780000000000", "English", 751, 648 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 648, 649, "One for the Money", "One for the Money", "Ranger (Rangeman CEO)# Lula# Grandma Mazur# Jimmy Alpha# Joe Morelli# Stephanie Plum", new DateTime(2006, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Humor# Chick Lit# Romance# Crime# Mystery Thriller# Contemporary# Adult# Comedy", "9780000000000", "English", 320, 649 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 649, 650, "A Wizard of Earthsea", "A Wizard of Earthsea", "Ged", new DateTime(2004, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Young Adult# Classics# Science Fiction Fantasy# Magic# Science Fiction# High Fantasy# Adventure# Dragons", "9780000000000", "English", 183, 650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 650, 651, "The Song of Achilles", "The Song of Achilles", "Achilles (Greek hero)# Peleus# Patroclus# Thetis (mythology)", new DateTime(2011, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fantasy# Fiction# Mythology# LGBT# Romance# Historical# Retellings# Audiobook# Adult", "9780000000000", "English", 352, 651 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 651, 368, "Lover Unbound", "Lover Unbound", "Mary Luce# Marissa# Butch Brian ONeal# Zsadist# Bella Soang# Vishous (Black Dagger)# Jane Whitcomb# Phury# Cormia# Beth (Elizabeth) Randall# John Matthew# Qhuinn# Blaylock# Tohrment# The Scribe Virgin# Rhage# Wrath (Blind King)", new DateTime(2007, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal# Romance# Paranormal Romance# Vampires# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 528, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 652, 346, "Champion", "Champion", "June Iparis# Daniel Altan Wing", new DateTime(2013, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Dystopia# Young Adult# Romance# Science Fiction# Fantasy# Fiction# Adventure# Action# Audiobook# Teen", "9780000000000", "English", 369, 346 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 653, 654, "The Haunting of Hill House", "The Haunting of Hill House", "Horror# Classics# Fiction# Gothic# Mystery# Paranormal# Audiobook# Ghosts# Thriller# Supernatural", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 610 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 654, 650, "The Left Hand of Darkness", "The Left Hand of Darkness", "Genly Ai# Therem Harth rem ir Estraven# Argaven XV", new DateTime(2000, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Fantasy# Classics# Science Fiction Fantasy# Feminism# Speculative Fiction# Novels# Gender# LGBT", "10000000000000", "English", 304, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 655, 656, "Assassin's Apprentice", "Assassin's Apprentice", "Verity Farseer# The Fool# Sean Galen# FitzChivalry Farseer# Burrich# Lady Patience# Shrewd# Chade Fallstar# Regal Farseer# Nighteyes# Kettricken", new DateTime(1996, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Magic# Adventure# Adult# Audiobook# Young Adult", "9780000000000", "English", 435, 656 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 656, 657, "I'll Give You the Sun", "I'll Give You the Sun", "Jude Sweetwine# Noah Sweetwine# Dianna Sweetwine# Benjamin Sweetwine# Grandma Sweetwine# Guillermo Garcia# Brian Connelly# Oscar Ralph", new DateTime(2014, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# LGBT# Romance# Fiction# Realistic Fiction# Queer# Coming Of Age# Young Adult Contemporary# Family", "9780000000000", "English", 371, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 657, 245, "1Q84", "1Q84", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.92", " Philip Gabriel (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 658, 659, "The Night Before Christmas", "The Night Before Christmas", "Christmas# Childrens# Picture Books# Classics# Poetry# Fiction# Holiday# Fantasy# Kids# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.37", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 659, 660, "The Yellow Wallpaper and Other Stories", "The Yellow Wallpaper and Other Stories", "", new DateTime(1997, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Short Stories# Fiction# Feminism# Horror# Literature# School# Gothic# Mental Health# 19th Century", "9780000000000", "English", 70, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 660, 661, "The Magus", "The Magus", "Nicholas Urfe# Alison Kelly# Maurice Conchis# Julie Holmes# June Holmes# Lily de Seitas# Joe Harrison# Sandy Mitford# Demetriades# Joan Kemp# John Leverrier# John Briggs", new DateTime(2001, 1, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Fantasy# Mystery# Literature# Novels# Literary Fiction# Greece# British Literature# Contemporary", "9780000000000", "English", 656, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 661, 61, "Oryx and Crake", "Oryx and Crake", "Snowman# Oryx# Crake", new DateTime(2004, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Science Fiction# Dystopia# Post Apocalyptic# Fantasy# Canada# Speculative Fiction# Science Fiction Fantasy# Audiobook# Novels", "9780000000000", "English", 389, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 662, 252, "Tempted", "Tempted", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Fiction# Paranormal Romance# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 663 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 663, 246, "Cress", "Cress", "Princess Winter# Linh Cinder# Queen Levana# Scarlet Benoit# Ze’ev Wolf Kesley# Emperor Kai# Carswell Thorne# Iko# Crescent Moon Cress Darnel# Jacin Clay# Dr. Dmitri Erland# Sybil Mira# Aimery Park# Linh Adri", new DateTime(2014, 2, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Science Fiction# Romance# Retellings# Dystopia# Fiction# Fairy Tales# Audiobook# Adventure", "9780000000000", "English", 552, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 664, 15, "Inferno", "Inferno", "Robert Langdon# Sienna Brooks# Laurence Knowlton# Christoph Brüder# Elizabeth Sinskey# Bertrand Zobrist# Jonathan Ferris", new DateTime(2013, 5, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Thriller# Mystery# Mystery Thriller# Suspense# Historical Fiction# Adventure# Novels# Crime# Adult", "9780000000000", "English", 463, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 665, 75, "A Breath of Snow and Ashes", "A Breath of Snow and Ashes", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Jeremiah MacKenzie# Fergus Fraser# Marsali Fraser# Germain Fraser# Malva Christie# Tom Christie# Lord John Grey# Jocasta Cameron# Duncan Innes# Claire Randall Fraser# Stephen Bonnet# Young Ian Murray# William Ransom# Lizzie Wemyss# Jo Beardsley# Kezzie Beardsley", new DateTime(2006, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Romance# Fiction# Fantasy# Time Travel# Historical# Historical Romance# Audiobook# Adult# Adventure", "9780000000000", "English", 993, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 666, 667, "Night Watch", "Night Watch", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Young Sam Vimes# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# Cheery Littlebottom# Reg Shoe# Detritus# Monks of History# Buggy Swires# Fred Colon# Lu-Tze# John Keel", new DateTime(2011, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Humor# Comedy# Time Travel# Science Fiction Fantasy# Science Fiction# Audiobook# Novels# High Fantasy", "9780000000000", "English", 480, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 667, 668, "A Heartbreaking Work of Staggering Genius", "A Heartbreaking Work of Staggering Genius", "", new DateTime(2001, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Literature# Novels# Humor# Biography Memoir# American# Unfinished# Adult# Literary Fiction", "9780000000000", "English", 485, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 668, 25, "Veronika Decides to Die", "Veronika Decides to Die", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.7", " Kâmuran Şipal (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 669, 670, "Brainwalker", "Brainwalker", "Young Adult# Adventure# Fantasy# Middle Grade# Childrens# Science Fiction Fantasy# Young Adult Fantasy# Fiction# Drama# New Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.35", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 670, 671, "The Lies of Locke Lamora", "The Lies of Locke Lamora", "Locke Lamora# Father Chains# Jean Tannen# Calo Sanza# Galdo Sanza# Bertilion Bug Gadek", new DateTime(2006, 6, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Adventure# Adult# High Fantasy# Epic Fantasy# Audiobook# Science Fiction Fantasy# Mystery# Crime", "B000JMKNJ2", "English", 752, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 671, 672, "Jitterbug Perfume", "Jitterbug Perfume", "", new DateTime(2001, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Fantasy# Humor# Magical Realism# Literature# Novels# Contemporary# American# Comedy# Classics", "9780000000000", "English", 342, 672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 672, 673, "Papillon", "Papillon", "", new DateTime(2006, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Biography# Classics# Adventure# Memoir# Autobiography# France# History# Crime# Biography Memoir", "9780000000000", "English", 544, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 673, 90, "Prodigal Summer", "Prodigal Summer", "Deanna Wolfe# Eddie Bondo# Lusa Maluf Landowski# Garnett Walker# Nannie Rawley", new DateTime(2001, 10, 16, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Nature# Novels# Literary Fiction# Adult# Adult Fiction# Literature# Environment# Audiobook", "9780000000000", "English", 444, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 674, 675, "Corelli's Mandolin", "Corelli's Mandolin", "Pelagia# Antonio Corelli# Mandras# Dr Iannis", new DateTime(1995, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Romance# Classics# War# Historical# Greece# World War II# Novels# Literature", "9780000000000", "English", 437, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 675, 676, "\"I'd Tell You I Love You", "\"I'd Tell You I Love You", "Young Adult# Romance# Mystery# Contemporary# Fiction# Espionage# Chick Lit# Adventure# Teen# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 676 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 676, 498, "Matching Configurations: QUANTUM ROOTS III", "Matching Configurations: QUANTUM ROOTS III", "", new DateTime(2019, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Contemporary# Epic# Drama# Fiction# Novels# Book Club# Suspense", "9780000000000", "English", 296, 677 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 677, 678, "The Fiery Cross", "The Fiery Cross", "Historical Fiction# Romance# Fiction# Fantasy# Time Travel# Historical# Historical Romance# Audiobook# Adult# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 678 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 678, 679, "The Magic Mountain", "The Magic Mountain", "Fiction# Classics# German Literature# Literature# Philosophy# Novels# Germany# 20th Century# Nobel Prize# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 679 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 679, 680, "The Sisterhood of the Traveling Pants", "The Sisterhood of the Traveling Pants", "Bridget Vreeland# Tibby Rollins# Carmen Lowell# Lena Kaligaris# Effie Kaligaris# Duncan Howe# Al Lowell# Eric Richman# Kostos Dounas", new DateTime(2001, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Chick Lit# Contemporary# Romance# Teen# Realistic Fiction# Childrens# Coming Of Age# Young Adult Contemporary", "9780000000000", "English", 294, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 680, 681, "Howl and Other Poems", "Howl and Other Poems", "Poetry# Classics# Fiction# American# Literature# LGBT# 20th Century# Queer# Banned Books# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 681 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 681, 682, "From the Mixed-Up Files of Mrs. Basil E. Frankweiler", "From the Mixed-Up Files of Mrs. Basil E. Frankweiler", "Mrs. Basil E. Frankweiler# Claudia Kincaid# James Kincaid", new DateTime(2003, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Childrens# Young Adult# Middle Grade# Mystery# Classics# Realistic Fiction# Adventure# Juvenile# School", "9780000000000", "English", 178, 173 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 682, 683, "The Elegance of the Hedgehog", "The Elegance of the Hedgehog", "Fiction# France# Contemporary# Philosophy# Book Club# Literary Fiction# Novels# Literature# Adult Fiction# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.77", 0, 683 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 683, 684, "The Book of Mormon: Another Testament of Jesus Christ", "The Book of Mormon: Another Testament of Jesus Christ", "", new DateTime(2013, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Religion# Nonfiction# Lds# Church# Spirituality# History# Inspirational# Classics# Reference# Christian", "9780000000000", "English", 531, 684 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 684, 58, "The Sirens of Titan", "The Sirens of Titan", "Winston Niles Rumfoord# Malachi Constant (Unk)# Salo# Boaz# Beatrice Rumfoord (Bee)# Chrono# Stony Stevenson# Noel Constant# Ransom K. Fern", new DateTime(1999, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Humor# Literature# Novels# Fantasy# Science Fiction Fantasy# American# 20th Century", "10000000000000", "English", 224, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 685, 686, "Cosmos", "Cosmos", "", new DateTime(2002, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science# Nonfiction# Astronomy# Physics# History# Space# Philosophy# Popular Science# Classics# Audiobook", "9780000000000", "English", 384, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 686, 687, "The Big Sleep", "The Big Sleep", "Philip Marlowe# Vivian Regan# Carmen Sternwood# General Guy Sternwood# Eddie Mars# Rusty Regan# Arthur Gwynn Geiger# Owen Taylor# Agnes Lozelle# Joe Brody# Harry Jones# Mona Mars# Carol Lundgren# Lash Camino# Bernie Ohls", new DateTime(1988, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Classics# Crime# Noir# Detective# Mystery Thriller# Thriller# Novels# American", "9780000000000", "English", 231, 687 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 687, 688, "Grimm's Fairy Tales", "Grimm's Fairy Tales", "B00912L5U2", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.13", " Edward Robert Hughes (illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 688, 498, "Quantum Roots", "Quantum Roots", "", new DateTime(2012, 8, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Drama# Contemporary# Fiction# Book Club# Epic# Novels# Thriller", "9780000000000", "English", 262, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 689, 96, "Message in a Bottle", "Message in a Bottle", "Theresa Osborne# Garrett Blake", new DateTime(1999, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Drama# Novels", "9780000000000", "English", 342, 10 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 690, 409, "Crooked Kingdom", "Crooked Kingdom", "Genya Safin# Inej Ghafa# Kaz Brekker# Jesper Fahey# Wylan Van Eck# Matthias Helvar# Nina Zenik# Zoya Nazyalensky# Nikolai Lantsov", new DateTime(2016, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# LGBT# Young Adult Fantasy# Romance# Magic# Adventure# High Fantasy# Audiobook", "B0117K9N3Q", "English", 536, 691 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 691, 692, "Bury My Heart at Wounded Knee: An Indian History of the American West", "Bury My Heart at Wounded Knee: An Indian History of the American West", "Sitting Bull# Red Cloud# Ely Parker# Cochise# Quanah Parker# Kicking Bird# Ten Bears# Crazy Horse# Chief Joseph# Geronimo# Manuelito# Little Crow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# American History# Classics# Historical# War# Politics# Race# Native Americans# Westerns", "9780000000000", "English", 509, 692 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 692, 346, "Prodigy", "Prodigy", "June Iparis# Daniel Altan Wing", new DateTime(2013, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Dystopia# Young Adult# Romance# Science Fiction# Fantasy# Fiction# Adventure# Teen# Action# Audiobook", "9780000000000", "English", 371, 346 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 693, 694, "The Power of Myth", "The Power of Myth", "Nonfiction# Mythology# Philosophy# Religion# History# Psychology# Spirituality# Classics# Anthropology# Writing", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.26", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 694, 29, "City of Ashes", "City of Ashes", "Alexander Alec Lightwood# Jonathan Jace Wayland# Valentine Morgenstern# Isabelle Izzy Sophia Lightwood# Magnus Bane# Maia Roberts# Luke Garroway# Imogen Herondale# Clarissa Clary Fray# Simon Lewis", new DateTime(2008, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Vampires# Fiction# Supernatural# Angels# Magic", "9780000000000", "English", 453, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 695, 696, "The No. 1 Ladies' Detective Agency", "The No. 1 Ladies' Detective Agency", "Precious Ramotswe# Silvia Potokwani# Charlie the older apprentice# Note Mokoti# Mr. J.L.B. Matekoni# Violet Sepotho# Grace Makutsi# Fanwell the younger apprentice# Obed Ramotswe", new DateTime(2003, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Africa# Crime# Mystery Thriller# Botswana# Detective# Adult Fiction# Adult# Audiobook", "9780000000000", "English", 235, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 696, 697, "Love Story", "Love Story", "Oliver Barrett IV# Jennifer Cavilleri", new DateTime(2002, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Classics# Contemporary# Chick Lit# Novels# Love# Love Story# Adult# Drama", "9780000000000", "English", 224, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 697, 698, "Glass Houses", "Glass Houses", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(2006, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Ghosts", "9780000000000", "English", 239, 698 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 698, 699, "Twenty Thousand Leagues Under the Sea", "Twenty Thousand Leagues Under the Sea", "Classics# Science Fiction# Fiction# Adventure# Fantasy# France# Literature# Steampunk# Novels# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.89", 0, 218 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 699, 700, "Confessions of a Shopaholic", "Confessions of a Shopaholic", "Becky Bloomwood# Luke Brandon# Susan Cleath-Stuart# Tarquin Cleath-Stuart# Alicia Billington", new DateTime(2003, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Chick Lit# Fiction# Romance# Contemporary# Humor# Adult# Adult Fiction# Contemporary Romance# Comedy# Young Adult", "9780000000000", "English", 368, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 700, 368, "Lover Revealed", "Lover Revealed", "Mary Luce# Marissa# Butch Brian ONeal# Zsadist# Vishous (Black Dagger)# Phury# Beth (Elizabeth) Randall# Xhexania# Tohrment# Rehvenge# Havers# Rhage# Wrath (Blind King)", new DateTime(2007, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Paranormal# Paranormal Romance# Vampires# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 480, 701 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 701, 647, "Odd Thomas", "Odd Thomas", "Odd Thomas# Stormy Llewellyn# Chief Wyatt Porter# Robert Thomas Fungus Man Robertson# Little Ozzie", new DateTime(2006, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Mystery# Fantasy# Thriller# Paranormal# Suspense# Supernatural# Urban Fantasy# Mystery Thriller", "9780000000000", "English", 446, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 702, 703, "The Edge of Never", "The Edge of Never", "Camryn Bennett# Andrew Parrish", new DateTime(2012, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Young Adult# Fiction# Chick Lit# Adult# Road Trip# Love", "9780000000000", "English", 426, 703 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 703, 704, "The Awakening: Fate in Motion", "The Awakening: Fate in Motion", "", new DateTime(2018, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Contemporary# Drama# Book Club# Fiction# Novels# Fantasy# Young Adult# Adventure# Middle Grade# Adult", "B07GNSZH8M", "", 331, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 704, 317, "Club Dead", "Club Dead", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Russell Edgington# Alcide Herveaux", new DateTime(2006, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Romance# Fiction# Mystery# Paranormal Romance# Supernatural# Adult", "10000000000000", "English", 274, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 705, 706, "Ivanhoe", "Ivanhoe", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.75", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 706, 312, "Carry On", "Carry On", "Simon Snow# Tyrannus Basilton Baz Grimm-Pitch# Penelope Bunce# Agatha Wellbelove", new DateTime(2017, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# LGBT# Romance# Fiction# Magic# Queer# Vampires# Audiobook# Young Adult Fantasy", "9780000000000", "English", 522, 707 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 707, 564, "Princess Academy", "Princess Academy", "Knut# Miri# Peder# Britta# Marda# Katar# Olana# Esa (Death Comes as the End)# Frid", new DateTime(2007, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Childrens# Romance# Fairy Tales# Adventure# Young Adult Fantasy# Juvenile", "9780000000000", "English", 314, 564 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 708, 709, "Freakonomics: A Rogue Economist Explores the Hidden Side of Everything", "Freakonomics: A Rogue Economist Explores the Hidden Side of Everything", "Nonfiction# Economics# Business# Science# Psychology# Sociology# Politics# Finance# Audiobook# Social Science", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 709, 710, "The Nightingale", "The Nightingale", "Vianne Mauriac# Isabelle Rossignol", new DateTime(2015, 2, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# World War II# War# Audiobook# Adult# France# Adult Fiction# Romance", "9780000000000", "English", 440, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 710, 590, "Ender's Shadow", "Ender's Shadow", "Andrew Wiggin# Bean# Nikolai Delphiki# Volescu# Sister Carlotta# Poke", new DateTime(2002, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Young Adult# Fantasy# Science Fiction Fantasy# Audiobook# Adventure# Space# War# Novels", "9780000000000", "English", 469, 711 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 711, 712, "The Aeneid", "The Aeneid", "Classics# Poetry# Fiction# Mythology# Literature# School# Epic# Fantasy# Ancient# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 712 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 712, 397, "Unravel Me", "Unravel Me", "Adam Kent# Juliette Ferrars# Aaron Warner Anderson# Kenji Kishimoto", new DateTime(2013, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Fantasy# Romance# Science Fiction# Paranormal# Fiction# New Adult# Post Apocalyptic# Supernatural", "9780000000000", "English", 461, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 713, 4, "Emma", "Emma", "Classics# Fiction# Romance# Historical Fiction# Literature# Historical# 19th Century# Classic Literature# Audiobook# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 714 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 714, 715, "Walk Two Moons", "Walk Two Moons", "", new DateTime(1996, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Realistic Fiction# Middle Grade# Childrens# School# Contemporary# Classics# Family# Juvenile", "9780000000000", "English", 280, 715 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 715, 716, "Angle of Repose", "Angle of Repose", "Lyman Ward# Susan Burling Ward# Oliver Ward# Rodman Ward# Frank Sargent# Ada Topham# Shelly Rasmussen# Ellen Ward", new DateTime(1992, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Classics# Literature# Westerns# Literary Fiction# Novels# Book Club# Historical# Audiobook", "9780000000000", "English", 569, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 716, 368, "Lover Avenged", "Lover Avenged", "Beth (Elizabeth) Randall# John Matthew# Xhexania# Qhuinn# Blaylock# Tohrment# Ehlena# Rehvenge# Wrath (Blind King)", new DateTime(2009, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal Romance# Paranormal# Vampires# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Erotica", "9780000000000", "English", 527, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 717, 718, "The Shell Seekers", "The Shell Seekers", "Penelope Keeling", new DateTime(2004, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Romance# Historical Fiction# Chick Lit# Adult Fiction# Historical# British Literature# Contemporary# Family# Novels", "9780000000000", "English", 530, 718 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 718, 719, "The Corrections", "The Corrections", "Alfred Lambert# Enid Lambert# Gary Lambert", new DateTime(2002, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# Literature# American# Family# The United States Of America# Unfinished# Adult Fiction", "9780000000000", "English", 653, 719 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 719, 216, "The Bluest Eye", "The Bluest Eye", "Pauline Breedlove# Cholly Breedlove# Pecola Breedlove", new DateTime(2005, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# African American# Race# Literature# Novels# Literary Fiction# School# American", "9780000000000", "English", 216, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 720, 721, "Anthem", "Anthem", "Liberty# Equality", new DateTime(1999, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Philosophy# Dystopia# Science Fiction# School# Literature# Read For School# Politics# Novels", "9780000000000", "English", 105, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 721, 722, "The Witch of Blackbird Pond", "The Witch of Blackbird Pond", "", new DateTime(1978, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Young Adult# Fiction# Classics# Childrens# Historical# Middle Grade# Witches# Romance# School", "10000000000000", "English", 256, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 722, 112, "Under the Dome", "Under the Dome", "Dale Barbara# Julia Shumway# James Rennie# Junior Rennie# Eric Rusty Everett# Joseph Scarecrow Joe McClatchey# Brenda Perkins# Frank DeLesseps# Carter Thibodeau# Melvin Searles# Georgia Roux# Andy Sanders# Phil The Chef Bushey# Peter Randolph# United States Military# American Law Enforcement# Dale Barbie Barbara# James Big Jim Rennie# Bill Allnut# Sarah Allnut# Mabel Alston# Private Clint Ames# Tommy Anderson# Willow Anderson# Elsa Andrews# Aidan Patrick Appleton# Alice Rachel Appleton# Marty Arsenault# Donnie Baribeau# Chaz Bender# Kayla Bevins# Harriet Bigelow# Fernald Fern Bowie# Stewart Bowie# Joe Boxer# Clayton Brassey# Freeman Brown# Gina Buffalino# Michela Burpee# Romeo Rommie Burpee# Little Walter Bushey# Phil Bushey# Sammy Bushey# Billy Cale# Jack Cale# Ernie Calvert# Joanie Calvert# Lucien Calvert# Norrie Calvert# Ed Carty# Carrie Carver# Deanna Carver# Johnny Carver# Eddie Chalmers# Pamela Chen# Henrietta Clavard# John Clavard# Reverend Lester Coggins# Cindy Collins# Hanna Compton# Mrs. Connaught# Lauren Conree# Rance Conroy# Arletta Coombs# Anderson Cooper# Mary Lou Costas# Colonel James O. Cox# Wanda Crumley# Wendell Crumley# Wanda Debec# Frederick Fred  Howard Denton# Alden Dinsmore# Oliver Ollie Dinsmore# Rory Dinsmore# Shelley Dinsmore# Russ Dorr# Alva Drake# Benny Drake# Norman Drake# Coralee Dumagen# Marta Edmunds# Brendan Ellerbee# Myra Evans# Erik Rusty Everett# Janelle Everett# Judy Everett# Linda Everett# Rusty Evers# George Frederick# Lois Freeman# Will Freeman# Jack Evans# Randall Killian# Ricky Killian# Roger Killian# Leo Lamoine# George Lathrop# Reverend Piper Libby# Rupert Rupe Libby# Corrie Macintosh# Suzanne Malveaux# Toby Manning# Thurston Marshall# Angie McCain# LaDonna McCain# Mr. McCain# Claire McClatchey# Joe McClatchey# Sam McClatchey# James McMurtry# Lennie Meechum# Stacey Moggin# Tabby Morrell# Frieda Morrison# Henry Morrison# Charles Stubby Norman# Howard Duke Perkins# Major Gene Ray# Doc Rayburn# Nora Robichaud# Bob Roux# Helen Roux# Andrew Andy DeLois Sanders# Claudette Sanders# Dorothy Dodee  Sanders# Sea Dogs# Melvin Mel Searles# Petra Searles# Jimmy Sirois# Carolyn Sturges# Chuck Thompson# Al Timmons# Ginny Tomlinson# Nell Toomey# Aubrey Towle# Johnny Trent# Douglas Twitchell# Miz Rose Twitchell# Jessie Vachon# Ellen Vanedestine", new DateTime(2009, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Science Fiction# Thriller# Fantasy# Mystery# Suspense# Audiobook# Adult# Drama", "9780000000000", "English", 1074, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 723, 317, "Living Dead in Dallas", "Living Dead in Dallas", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Barry Bellboy Horowitz", new DateTime(2004, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Romance# Fiction# Mystery# Paranormal Romance# Supernatural# Adult", "9780000000000", "English", 291, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 724, 725, "The Omnivore's Dilemma: A Natural History of Four Meals", "The Omnivore's Dilemma: A Natural History of Four Meals", "", new DateTime(2006, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Food# Science# Health# History# Nutrition# Environment# Cooking# Audiobook# Politics", "9780000000000", "English", 450, 725 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 725, 726, "A Canticle for Leibowitz", "A Canticle for Leibowitz", "Science Fiction# Fiction# Post Apocalyptic# Classics# Dystopia# Fantasy# Science Fiction Fantasy# Religion# Apocalyptic# Speculative Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 726 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 726, 727, "The Jungle Books", "The Jungle Books", "Classics# Fiction# Childrens# Fantasy# Adventure# Short Stories# Literature# Animals# Young Adult# India", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 727 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 727, 728, "Collected Fictions", "Collected Fictions", "Fiction# Short Stories# Classics# Literature# Fantasy# Magical Realism# Philosophy# Latin American# Spanish Literature# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.58", 0, 728 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 728, 729, "Rubinrot", "Rubinrot", "Grace Shepherd# Leslie Hay# Gideon de Villiers# Cynthia Dale# Gwendolyn Shepherd# Gordan Gelderman# James Augustus Peregrine Pympoole-Bothame", new DateTime(2009, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Time Travel# Romance# Historical Fiction# Science Fiction# Fiction# Paranormal# Historical# Mystery", "9780000000000", "German", 343, 729 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 729, 730, "One Day", "One Day", "Emma Morley# Dexter Mayhew", new DateTime(2009, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Romance# Contemporary# Chick Lit# Adult# Adult Fiction# Novels# British Literature# Love# Drama", "9780000000000", "English", 435, 730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 730, 731, "The Story of My Life", "The Story of My Life", "Anne Sullivan# Helen Keller", new DateTime(1990, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Biography# Classics# Memoir# History# Autobiography# Biography Memoir# Historical# Disability# Inspirational", "9780000000000", "English", 240, 285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 731, 15, "Digital Fortress", "Digital Fortress", "Susan Fletcher# David Becker# Ensei Tankado# Trevor Strathmore# Phil Chartrukian# Greg Hale", new DateTime(2004, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Thriller# Mystery# Suspense# Crime# Mystery Thriller# Novels# Adventure# Science Fiction# Drama", "10000000000000", "English", 510, 732 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 732, 21, "Something Wicked This Way Comes", "Something Wicked This Way Comes", "William Halloway# James Nightshade# Charles Halloway", new DateTime(1998, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fantasy# Fiction# Classics# Science Fiction# Young Adult# Science Fiction Fantasy# Halloween# Audiobook# Mystery", "9780000000000", "English", 293, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 733, 237, "Linger", "Linger", "Shelby# Grace Brisbane# Sam  Roth# Cole St. Clair# Isabel Culpeper# Jack Culpeper# Geoffrey Beck# Olivia Marx", new DateTime(2010, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Werewolves# Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Teen", "9780000000000", "English", 362, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 734, 735, "Geek Love", "Geek Love", "Olympia Oly Binewski# Arturo Arty Binewski# Al Binewski", new DateTime(2002, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Horror# Fantasy# Contemporary# Novels# Literary Fiction# Dark# Adult Fiction# Adult# Literature", "9780000000000", "English", 348, 735 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 735, 512, "Cryptonomicon", "Cryptonomicon", "Douglas MacArthur# Enoch Root# Lawrence Pritchard Waterhouse# Robert Shaftoe# Earl Comstock# Rudolf von Hacklheber# Alan Turing", new DateTime(2002, 11, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Science Fiction# Historical Fiction# Cyberpunk# Thriller# Historical# Science Fiction Fantasy# War# Fantasy# Novels", "10000000000000", "English", 1139, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 736, 737, "The Portrait of a Lady", "The Portrait of a Lady", "Classics# Fiction# Literature# 19th Century# Novels# American# Historical Fiction# Classic Literature# Romance# Victorian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.77", 0, 737 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 737, 738, "Because of Winn-Dixie", "Because of Winn-Dixie", "Winn-Dixie# India Opal Buloni# Otis# Miss Franny Block# Gloria Dump# The Preacher# Amanda Wilkinson", new DateTime(2001, 8, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Childrens# Realistic Fiction# Middle Grade# Young Adult# Animals# Classics# School# Dogs# Juvenile", "9780000000000", "English", 182, 621 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 738, 440, "My Name Is Asher Lev", "My Name Is Asher Lev", "", new DateTime(2003, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Jewish# Religion# Judaism# Literature# Art# Young Adult# Novels", "9780000000000", "English", 369, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 739, 740, "How to Win Friends and Influence People", "How to Win Friends and Influence People", "", new DateTime(1998, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Self Help# Business# Psychology# Personal Development# Leadership# Classics# Communication# Audiobook# Relationships", "10000000000000", "English", 288, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 740, 216, "Song of Solomon", "Song of Solomon", "", new DateTime(2004, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# African American# Literature# Novels# Magical Realism# School# Literary Fiction# American", "9780000000000", "English", 337, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 741, 245, "Hard-Boiled Wonderland and the End of the World", "Hard-Boiled Wonderland and the End of the World", "Fiction# Fantasy# Japan# Magical Realism# Japanese Literature# Science Fiction# Contemporary# Literature# Novels# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.15", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 742, 168, "Jude the Obscure", "Jude the Obscure", " James Oliver Smith Jr. (Editor)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Mark Oxford", " Jenny Sterlin (Narrator)", " Dennis Taylor (Goodreads Author) (With)", 0, 743 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 743, 744, "Red Rising", "Red Rising", "Darrow# Cassius au Bellona# Mustang# Sevro au Barca# Fitchner au Barca", new DateTime(2014, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fantasy# Young Adult# Dystopia# Fiction# Audiobook# Science Fiction Fantasy# Adult# Adventure# Space", "9780000000000", "English", 382, 744 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 744, 270, "Macbeth", "Macbeth", "Fleance# Seyward# Young Siward# Seyton# First Witch# Second Witch# Third Witch# Lady Macduff# Lady Macbeth", new DateTime(2013, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Plays# Fiction# Drama# School# Literature# Read For School# Theatre# High School# Poetry", "9780000000000", "English", 249, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 745, 592, "The Namesake", "The Namesake", "Ashoke Ganguli# Ashima Ganguli# Gogol/Nikhil Ganguli# Sonia/Sonali Ganguli# Maxine# Moushumi Mazoomdar", new DateTime(2004, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# India# Contemporary# Literary Fiction# Novels# Indian Literature# Literature# Book Club# Adult Fiction# Adult", "9780000000000", "English", 291, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 746, 224, "Empire of Storms", "Empire of Storms", "Celaena Sardothien# Aelin Ashryver Galathynius# Rowan Whitethorn# Aedion Ashryver# Manon Blackbeak# Lysandra# Dorian Havilliard# Elide Lochan# Lorcan Salvaterre# Erawan", new DateTime(2016, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# New Adult# Magic# Fiction# Fae# Young Adult Fantasy# High Fantasy# Paranormal", "10000000000000", "English", 689, 564 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 747, 748, "To All the Boys I've Loved Before", "To All the Boys I've Loved Before", "Josh# Kitty# Margot# Lara Jean# Peter Kavinsky", new DateTime(2014, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Audiobook# Chick Lit# Realistic Fiction# Young Adult Contemporary# High School# Young Adult Romance", "10000000000000", "English", 355, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 748, 188, "The Death Cure", "The Death Cure", "Brenda (Maze Runner)# Teresa Agnes# Minho# Gally# Thomas# Newt# Aris Jones# Jorge", new DateTime(2011, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Adventure# Post Apocalyptic# Teen# Audiobook# Action", "9780000000000", "English", 325, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 749, 488, "Howards End", "Howards End", "", new DateTime(2018, 1, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Historical Fiction# Literature# British Literature# Novels# 20th Century# Literary Fiction# Romance# Classic Literature", "9780000000000", "English", 318, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 750, 751, "The Girl on the Train", "The Girl on the Train", "Rachel Watson# Anna Watson# Tom Watson# Megan Hipwell# Scott Hipwell# Kamal Abdic", new DateTime(2015, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Mystery# Thriller# Crime# Mystery Thriller# Suspense# Contemporary# Adult# Audiobook# Adult Fiction", "9780000000000", "English", 325, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 751, 752, "\"One Fish", "\"One Fish", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.13", "Dr. Seuss (Reader)", " Blue Fish\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 752, 355, "Holy Bible: King James Version", "Holy Bible: King James Version", "Barabbas# Lucifer# Moses (Bible)# Job# Pontius Pilate# Hagar (Bible)# Caiaphas# Gad# Mary Magdalene# Eve (Bible)# Ruth (Bible)# Anna (Bible)# Bathsheba (Bible)# Judah (Bible)# Naomi (Bible)# Boaz (Bible)# Isaac (Bible)# Aaron (Bible)# Abigail (Bible)# Leah (Bible)# Dinah (Bible)# Miriam (Bible)# Samson (Bible)# Delilah (Bible)# Caleb (Bible)# Jonathan (Bible)# Rehoboam# Abihu# Nadab# Jesus# Saint Peter# Noah (Bible)# Shem (Bible)# Ham (Bible)# Japheth (Bible)# Abel (Bible)# Sarah (Bible)# Rebecca (Bible)# Saul (biblical king)# Balak# Balaam# Eleazar# Joseph (Son of Jacob)# Gideon (Bible)# Judas Iscariot# Samuel (Bible)# Hannah (Bible)# Solomon (Bible)# Jacob (Bible)# Rachel (Bible)# David (Bible)# Issachar# Melchizedek# Michal (Bible)# Satan# Jonah (Bible)# Ahinoam (Bible)# Reuben (Bible)# Levi (Bible)# Simeon# son of Jacob (Bible)# Zebulon (Bible)# Absalom (Bible)# Adonijah# Mephibosheth# Benjamin (Bible)# Asher (Bible)# Naphtali (Bible)# Dan (Bible)# Ishmael (Bible)# Nathan (Bible)# Joab (Bible)# Laban (Bible)# Uriah the Hittite# Amnon (Bible)# Bilhah (Bible)# Zilpah (Bible)# Jehoshaphat (Bible)# Hezekiah (Bible)# Manasseh (Bible)# Jeroboam (Bible)# Abraham (Bible)# Esau# Joshua (Bible)# Cain (Bible)# God# Judith (Bible)# Adam (Bible)# Tamar (Bible)# Mary (mother of Jesus)", new DateTime(2008, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Religion# Classics# Nonfiction# Christian# Christianity# History# Philosophy# Reference# Spirituality# Theology", "10000000000000", "English", 1590, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 753, 728, "Ficciones", "Ficciones", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.44", " Anthony Bonner (translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 754, 755, "It's Kind of a Funny Story", "It's Kind of a Funny Story", "Young Adult# Fiction# Contemporary# Mental Health# Mental Illness# Realistic Fiction# Romance# Psychology# Coming Of Age# Teen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 283 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 755, 294, "Fire", "Fire", "Brocker (Graceling Realm)# Roen (Graceling Realm)# Nash (Graceling Realm)# Brigan (Graceling Realm)# Leck (Graceling Realm)# Garan (Graceling Realm)# Archer (Graceling Realm)# Fire (Graceling Realm)", new DateTime(2009, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Young Adult Fantasy# Adventure# Magic# High Fantasy# Teen# Paranormal", "9780000000000", "English", 480, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 756, 107, "Death on the Nile", "Death on the Nile", "Colonel Race# Simon  Doyle# Parker Pyne# Hercule Poirot# Linnet Ridgeway# Jacqueline de Bellefort# Mrs. Allerton# Tim Allerton# Dr. Carl Bessner# Miss Bowers# Jim Fanthorp# Ferguson# Salomè Otterbourne# Rosalie Otterbourne# Andrew Pennington# Cornelia Robson# Marie Van Schuyler# Joanna Southwood", new DateTime(1978, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Crime# Classics# Mystery Thriller# Detective# Audiobook# Thriller# British Literature# Egypt", "9780000000000", "English", 214, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 757, 667, "The Color of Magic", "The Color of Magic", "Rincewind# Twoflower# The Luggage# DEATH", new DateTime(2005, 9, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Science Fiction# Magic# Adventure# High Fantasy# Novels", "9780000000000", "English", 228, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 758, 343, "The Hero of Ages", "The Hero of Ages", "Marsh# Vin# Elend Venture# Sazed# Hammond# Breeze# Spook", new DateTime(2008, 10, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Adult# Science Fiction Fantasy# Audiobook# Adventure# Epic", "9780000000000", "English", 572, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 759, 760, "Shot Down: The True Story of Pilot Howard Snyder and the Crew of the B-17 Susan Ruth", "Shot Down: The True Story of Pilot Howard Snyder and the Crew of the B-17 Susan Ruth", "", new DateTime(2014, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Military Fiction# History# Adult# Aviation# Nonfiction# Adventure# Biography# True Story# War# New Adult", "9780000000000", "English", 376, 760 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 760, 761, "The Sorrows of Young Werther", "The Sorrows of Young Werther", " R. Dillon Boylan (Translation)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Hugo Flintzer (Illustrator)", " Edla Valdna (Translator)", " Dr. Riaz-ul-Hassan (Translator)", 0, 761 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 761, 762, "Still Alice", "Still Alice", "Alice Howland# Lydia Howland# John Howland# Anna Howland# Tom Howland# Tamara Moyer# Dr. Davis", new DateTime(2007, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Psychology# Book Club# Adult Fiction# Adult# Audiobook# Medical# Realistic Fiction# Drama", "9780000000000", "English", 292, 762 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 762, 261, "The Moon Is a Harsh Mistress", "The Moon Is a Harsh Mistress", "Manuel Garcia Mannie O Kelly-Davis# Wyoming Wyoh Knott# Professor Bernardo de la Paz# Adam Selene# Stuart Rene Stu LaJoie# HOLMES IV", new DateTime(2005, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Fantasy# Audiobook# Politics# Space# Novels# Speculative Fiction", "9780000000000", "English", 288, 730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 763, 131, "Choke", "Choke", "Victor Mancini# Denny# Ida Mancini# Paige Marshall", new DateTime(2002, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Humor# Novels# Literature# Adult# American# Adult Fiction# Dark# Literary Fiction", "9780000000000", "English", 293, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 764, 765, "Battle Royale", "Battle Royale", "Fiction# Dystopia# Horror# Science Fiction# Young Adult# Thriller# Japan# Japanese Literature# Fantasy# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 765 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 765, 21, "Dandelion Wine", "Dandelion Wine", "Douglas Spaulding# Tom Spaulding", new DateTime(2000, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Science Fiction# Fantasy# Young Adult# Short Stories# Coming Of Age# Literature# Novels# American", "9780000000000", "English", 239, 766 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 766, 767, "Mary Poppins", "Mary Poppins", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.02", " Mary Shepard (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 767, 388, "Finale", "Finale", "Nora Grey# Jev Patch Cipriano# Vee Sky# Marcie Millar# Scott Parnell", new DateTime(2012, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Angels# Romance# Paranormal# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 464, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 768, 518, "The Awakening", "The Awakening", "Chloe Saunders# Derek Souza# Victoria Tori Enright# Rachelle Rae Rogers# Simon Bae", new DateTime(2009, 4, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Paranormal# Urban Fantasy# Supernatural# Romance# Magic# Werewolves# Ghosts# Fiction", "9780000000000", "English", 360, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 769, 770, "Gift from the Sea", "Gift from the Sea", "", new DateTime(1991, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Memoir# Classics# Inspirational# Spirituality# Self Help# Essays# Biography# Philosophy# Biography Memoir", "9780000000000", "English", 130, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 770, 131, "Survivor", "Survivor", "Tender Branson# Fertility Hollis# The Agent# The Caseworker# Primus", new DateTime(2018, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Thriller# Novels# Humor# Dark# Literature# American# Audiobook# Adult", "9780000000000", "", 304, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 771, 772, "Revolutionary Road", "Revolutionary Road", "Frank Wheeler# April Wheeler# Shep Campbell# Milly Campbell", new DateTime(2001, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Historical Fiction# Novels# American# Literature# Literary Fiction# Contemporary# 20th Century# Modern Classics", "9780000000000", "English", 355, 772 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 772, 11, "An Abundance of Katherines", "An Abundance of Katherines", "Colin Singleton# Lindsey Lee Wells# Katherine Carter# Hassan Harbish", new DateTime(2006, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Fiction# Romance# Realistic Fiction# Teen# Humor# Coming Of Age# Young Adult Contemporary# Audiobook", "9780000000000", "English", 229, 344 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 773, 643, "Antigone", "Antigone", "Classics# Plays# Drama# Fiction# School# Read For School# Mythology# Theatre# Literature# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.66", 0, 774 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 774, 775, "The Invention of Hugo Cabret", "The Invention of Hugo Cabret", "Hugo Cabret# George Méliès# Isabelle", new DateTime(2007, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Young Adult# Childrens# Graphic Novels# Middle Grade# Fantasy# Mystery# Historical# Picture Books", "9780000000000", "English", 533, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 775, 135, "The Ocean at the End of the Lane", "The Ocean at the End of the Lane", "Lettie Hempstock# Ursula Monkton# The Nameless Boy# Ginnie Hempstock# Old Mrs. Hempstock", new DateTime(2013, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Horror# Magical Realism# Audiobook# Young Adult# Adult# Science Fiction Fantasy# Adult Fiction# Paranormal", "9780000000000", "English", 181, 776 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 776, 667, "Small Gods", "Small Gods", "The Librarian# Great God Om# Brutha# Exquisitor Vorbis# Didactylos# Simony# Urn", new DateTime(2005, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Religion# Science Fiction# Audiobook# Novels# High Fantasy", "9780000000000", "English", 400, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 777, 28, "Tender Is the Night", "Tender Is the Night", "Classics# Fiction# Literature# American# Novels# Romance# 20th Century# France# Literary Fiction# Modern Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 778 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 778, 779, "Cold Sassy Tree", "Cold Sassy Tree", "Will Tweedy", new DateTime(2007, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Classics# Southern# Historical# Adult Fiction# Coming Of Age# Adult# Young Adult# Audiobook", "B003K15II0", "English", 405, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 779, 780, "Nausea", "Nausea", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.92", " Hayden Carruth (Introduction)\"", " H.P. van den Aardweg (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 780, 781, "The Passage", "The Passage", "Horror# Fiction# Science Fiction# Fantasy# Post Apocalyptic# Vampires# Dystopia# Thriller# Apocalyptic# Paranormal", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 781 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 781, 518, "The Reckoning", "The Reckoning", "Chloe Saunders# Derek Souza# Victoria Tori Enright# Simon Bae", new DateTime(2010, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fantasy# Paranormal# Urban Fantasy# Romance# Supernatural# Werewolves# Magic# Ghosts# Fiction", "9780000000000", "English", 391, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 782, 310, "گم شده ای در مه", "گم شده ای در مه", "", new DateTime(2016, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Philosophy# Spirituality", "9790000000000", "Persian", 82, 310 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 783, 261, "Starship Troopers", "Starship Troopers", "Juan Rico", new DateTime(1987, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Classics# Military Fiction# War# Science Fiction Fantasy# Space Opera# Fantasy# Space# Audiobook", "9780000000000", "English", 335, 784 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 784, 785, "The Poetry of Robert Frost", "The Poetry of Robert Frost", "Poetry# Classics# Fiction# Literature# American# 20th Century# School# Anthologies# Nature# Collections", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 245 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 785, 786, "Ethan Frome", "Ethan Frome", "Ethan Frome# Mrs. Hale# Zeena Frome# Mattie Silver# Mrs. Ned Hale# Denis Eady# Jotham Powell# Harmon Gow# Michael Eady# Lawyer Varnum# Ned Hale# Orin Silver# Andrew Hale# Aunt Martha Pierce# Mrs. Frome# Mrs. Homan# Dr. Buck# Eliza Spears# Aunt Philura Maple# Daniel Byrne# Dr. Kidder# Mrs. Varnum", new DateTime(2005, 10, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Classics# Fiction# Literature# School# Romance# Historical Fiction# American# Novels# High School# Classic Literature", "9780000000000", "English", 99, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 786, 787, "Exodus", "Exodus", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Classics# Historical# Israel# Jewish# War# Novels# Holocaust# Literature", "9780000000000", "English", 608, 787 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 787, 12, "The Restaurant at the End of the Universe", "The Restaurant at the End of the Universe", "Zaphod Beeblebrox# Arthur Dent# Ford Prefect# Trillian# Marvin# the paranoid android", new DateTime(2005, 4, 26, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Humor# Fantasy# Comedy# Science Fiction Fantasy# Classics# Audiobook# Adventure# Novels", "10000000000000", "English", 250, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 788, 290, "The Trigger: Hunting the Assassin Who Brought the World to War", "The Trigger: Hunting the Assassin Who Brought the World to War", "Gavrilo Princip", new DateTime(2014, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "History# Nonfiction# World War I# War# Travel# Biography# Politics# European History# 20th Century# Biography Memoir", "9780000000000", "English", 352, 789 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 789, 790, "The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change", "The 7 Habits of Highly Effective People: Powerful Lessons in Personal Change", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.12", " Contributor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 790, 791, "The Gargoyle", "The Gargoyle", "Marianne Engel", new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Fantasy# Historical Fiction# Romance# Historical# Contemporary# Adult# Gothic# Paranormal# Adult Fiction", "9780000000000", "English", 468, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 791, 792, "Forrest Gump", "Forrest Gump", "Forrest Gump# Lieutenant Dan Taylor# Forrest Gump Jnr# Jenny Curran", new DateTime(2002, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Humor# Historical Fiction# Classics# Media Tie In# Novels# Drama# Adventure# Contemporary# Historical", "9780000000000", "English", 248, 76 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 792, 793, "The Sparrow", "The Sparrow", "Emilio Sandoz# Jimmy Quinn# Vincenzo Giuliani# John Candotti# Johannes Voelker# Edward Behr# Sofia Mendez# Anne Edwards# George Edwards# Alan Pace# Felipe Reyes# D.W. Yarbrough# Marc Robichaux# Supaari# Askama# Hlavin Kitheri", new DateTime(1997, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Fiction# Fantasy# Religion# Science Fiction Fantasy# Speculative Fiction# Aliens# Adult# Book Club# Novels", "9780000000000", "English", 516, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 793, 794, "I Am the Messenger", "I Am the Messenger", "Young Adult# Fiction# Mystery# Contemporary# Realistic Fiction# Teen# Audiobook# Australia# Adult# Coming Of Age", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 794 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 794, 795, "The Hate U Give", "The Hate U Give", "Khalil# Starr# Seven", new DateTime(2017, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Fiction# Contemporary# Audiobook# Realistic Fiction# Race# Social Justice# Teen# Young Adult Contemporary# African American", "9780000000000", "English", 444, 795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 795, 269, "Walking Disaster", "Walking Disaster", "Abby Abernathy# Travis Maddox", new DateTime(2013, 4, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# College# Fiction# Chick Lit# Fighters# Love", "9780000000000", "English", 448, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 796, 797, "Gabriel's Inferno", "Gabriel's Inferno", "Gabriel Emerson# Julianne Mitchell", new DateTime(2011, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Contemporary Romance# Contemporary# Erotica# Adult# New Adult# College# Fiction# Erotic Romance# Chick Lit", "9780000000000", "English", 506, 797 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 797, 622, "Dreamfever", "Dreamfever", "MacKayla Lane# Rowena# Dani OMalley# Jericho Barrons# Vlane# Lord Master# Derek OBannion# Christian MacKeltar# Ryodan# Darroc", new DateTime(2009, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Paranormal# Urban Fantasy# Romance# Paranormal Romance# Fae# Adult# Fiction# Magic# Supernatural", "9780000000000", "English", 386, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 798, 699, "Around the World in Eighty Days", "Around the World in Eighty Days", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.93", " Brian W. Aldiss (Introduction)\"", " Annotations)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 799, 100, "The Hotel New Hampshire", "The Hotel New Hampshire", "John Berry# Franny Berry# Frank Berry# Win Berry# Lilly Berry", new DateTime(1982, 10, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Literature# Novels# Literary Fiction# Classics# American# Humor# The United States Of America# Adult Fiction", "9780000000000", "English", 520, 100 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 800, 801, "Pale Fire", "Pale Fire", "John Shade# Sybil (Nabokov)# Charles Kinbote# Botkin# Gradus# Jack Grey# Judge Goldsworth", new DateTime(2000, 8, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Poetry# Russia# Literature# Novels# Russian Literature# Literary Fiction# 20th Century# American", "10000000000000", "English", 246, 801 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 801, 112, "On Writing: A Memoir of the Craft", "On Writing: A Memoir of the Craft", "Stephen King", new DateTime(2002, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# Writing# Memoir# Biography# Reference# Autobiography# Audiobook# Biography Memoir# Books About Books# Horror", "9780000000000", "English", 320, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 802, 803, "Daughter of the Forest", "Daughter of the Forest", "Simon Holt# Lord Colum# Hugh of Harrowfield# Liam the God# Lady Anne# Sorcha# Finbar# Diarmid# Padriac# Margery# Fat Janis# Cormack# Father Brian# Seamus Redbeard# Lady Oonagh# Eilis# Richard of Northwoods# Benedict of Greystones# John   --", new DateTime(2002, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Romance# Fiction# Historical Fiction# Fairy Tales# Young Adult# Historical# Magic# Retellings# Adult", "10000000000000", "English", 554, 803 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 803, 804, "The Forgotten Garden", "The Forgotten Garden", "Cassandra Ryan# Nell OConnor# Eliza Makepeace# Rose Mountrachet", new DateTime(2008, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Mystery# Historical# Australia# Romance# Adult Fiction# Adult# British Literature# Book Club", "9780000000000", "English", 648, 219 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 804, 805, "Illusions: The Adventures of a Reluctant Messiah", "Illusions: The Adventures of a Reluctant Messiah", "", new DateTime(2001, 3, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Philosophy# Spirituality# Fantasy# Classics# Religion# Inspirational# Literature# Self Help# Novels", "10000000000000", "English", 144, 805 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 805, 806, "Wild Swans: Three Daughters of China", "Wild Swans: Three Daughters of China", "", new DateTime(2003, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Nonfiction# History# China# Biography# Memoir# Asia# Historical# Autobiography# Biography Memoir# Asian Literature", "10000000000000", "English", 562, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 806, 807, "The Bridges of Madison County", "The Bridges of Madison County", "Robert Kincaid# Francesca Johnson", new DateTime(1995, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Romance# Classics# Chick Lit# Contemporary# Novels# Adult Fiction# Adult# Love# Drama", "9780000000000", "English", 224, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 807, 808, "Kane and Abel", "Kane and Abel", "William Kane# Abel Rosnovski", new DateTime(2004, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Historical Fiction# Thriller# Drama# Classics# Novels# Historical# Mystery# Contemporary# Mystery Thriller", "9780000000000", "English", 592, 293 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 808, 515, "Reflected in You", "Reflected in You", "Gideon Cross# Eva Tramell", new DateTime(2012, 10, 23, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Erotica# Contemporary# Contemporary Romance# Adult# Erotic Romance# BDSM# Fiction# New Adult# Chick Lit", "9780000000000", "English", 338, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 809, 238, "Specials", "Specials", "David Strorm# Tally Youngblood# Shay# Dr. Cable# Andrew Simpson Smith# Peris# Zane (Uglies)", new DateTime(2006, 5, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Romance# Teen# Adventure# Post Apocalyptic# Futuristic", "9780000000000", "English", 384, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 810, 811, "\"Absalom", "\"Absalom", "Classics# Fiction# Literature# American# Novels# Historical Fiction# Southern# Southern Gothic# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 519 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 811, 812, "Shutter Island", "Shutter Island", "Teddy Daniels# Chuck Aule# Dr. John Cawley# Dr. Jeremiah Naehring", new DateTime(2004, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Thriller# Horror# Suspense# Crime# Mystery Thriller# Novels# Psychological Thriller# Adult Fiction", "9780000000000", "English", 369, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 812, 667, "Mort", "Mort", "Albert# DEATH# Mort# Ysabel# Keli", new DateTime(2001, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Magic# Novels# Death# Science Fiction", "9780000000000", "English", 243, 813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 813, 88, "The Golden Lily", "The Golden Lily", "Sydney Sage# Dimitri Belikov# Adrian Ivashkov# Jillian Mastrano# Edison Eddie Castile# Angeline Dawes# Sonya Karp# Keith Darnell# Tom Darnell", new DateTime(2012, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Magic# Supernatural# Paranormal Romance# Fiction", "9780000000000", "English", 418, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 814, 522, "One Foot in the Grave", "One Foot in the Grave", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Mencheres# Tate Bradley# Don Williams# Ian Flannery# Annette De Witt# Maximus (Night Huntress series)", new DateTime(2008, 4, 29, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Vampires# Paranormal# Urban Fantasy# Paranormal Romance# Romance# Fantasy# Adult# Supernatural# Fiction# Audiobook", "9780000000000", "English", 357, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 815, 816, "A Million Little Pieces", "A Million Little Pieces", "James Frey", new DateTime(2005, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Contemporary# Psychology# Biography Memoir# Adult# Book Club# Novels# Mental Health# Adult Fiction# Drama", "9780000000000", "English", 515, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 816, 812, "Mystic River", "Mystic River", "Dave Boyle# Sean Devine# Jimmy Marcus", new DateTime(2001, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Drama# Novels# Adult# Contemporary", "9780000000000", "English", 416, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 817, 66, "The Dark Tower", "The Dark Tower", "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Science Fiction Fantasy# Audiobook# Epic# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.26", 0, 818 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 818, 43, "The Blood of Olympus", "The Blood of Olympus", "Leo Valdez# Nico di Angelo# Thalia Grace# Annabeth Chase# Demeter (Goddess)# Grover Underwood# Hera# Hades# Reyna# Juno# Rachel Elizabeth Dare# Jason Grace# Piper McLean# Hazel Levesque# Frank Zhang# Will Solace# Percy Jackson", new DateTime(2014, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Adventure# Greek Mythology# Urban Fantasy# Romance# Childrens", "9780000000000", "English", 516, 341 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 819, 368, "Lover Mine", "Lover Mine", "John Matthew# Xhexania# Qhuinn# Blaylock# Lash# Rhage# Wrath (Blind King)", new DateTime(2010, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal# Paranormal Romance# Romance# Vampires# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 528, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 820, 252, "Burned", "Burned", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 577 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 821, 822, "Guilty Pleasures", "Guilty Pleasures", "Anita Blake# Dolph Storr# Zerbrowski (Anita Blake series)# Jean-Claude (Anita Blake series)# Edward Ted Forrester# Malcolm (Anita Blake series)# Bert Vaughn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Fantasy# Paranormal# Romance# Horror# Fiction# Paranormal Romance# Supernatural# Mystery", "9780000000000", "English", 355, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 822, 823, "The City of Ember", "The City of Ember", "Lina Mayfleet# Doon Harrow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Science Fiction# Fiction# Middle Grade# Childrens# Adventure# Post Apocalyptic# Teen", "9780000000000", "English", 288, 599 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 823, 317, "Dead as a Doornail", "Dead as a Doornail", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Russell Edgington# Alcide Herveaux", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Fiction# Romance# Mystery# Paranormal Romance# Supernatural# Adult", "9780000000000", "English", 295, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 824, 825, "The Glass Castle", "The Glass Castle", "Jeannette Walls# Rex Walls# Rose Mary Walls# Maureen Walls# Brian Walls# Lori Walls", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Autobiography# Biography Memoir# Book Club# Adult# Audiobook# Contemporary# School", "9780000000000", "English", 288, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 825, 355, "Holy Bible: New International Version", "Holy Bible: New International Version", "Barabbas# Lucifer# Moses (Bible)# Solomon (Bible)# Pontius Pilate# Caiaphas# Mary Magdalene# Isaac (Bible)# Aaron (Bible)# Miriam (Bible)# Caleb (Bible)# Jesus# Noah (Bible)# Sarah (Bible)# Rebecca (Bible)# Joseph (Son of Jacob)# Judas Iscariot# Jacob (Bible)# Rachel (Bible)# David (Bible)# Melchizedek# Abraham (Bible)# God# Mary (mother of Jesus)# Simon Peter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Religion# Christian# Nonfiction# Classics# Christianity# Reference# Spirituality# Faith# History# Philosophy", "9780000000000", "English", 1248, 826 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 826, 827, "Simon vs. the Homo Sapiens Agenda", "Simon vs. the Homo Sapiens Agenda", "Young Adult# Contemporary# LGBT# Romance# Fiction# Audiobook# Queer# Realistic Fiction# Coming Of Age# Young Adult Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 827 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 827, 828, "Christy", "Christy", "Christy Rudd Huddleston# Alice Henderson# David Grantland# Ida Grantland# Dr. Neil Macneill# Fairlight Spencer# Birds Eye Taylor# Lundy Tylor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Christian Fiction# Classics# Christian# Romance# Historical# Young Adult# Adult# Inspirational", "B0745KTJSY", "English", 512, 828 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 828, 96, "The Lucky One", "The Lucky One", "Logan Thibault# Elizabeth Clayton# Ben Clayton# Keith Clayton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Contemporary Romance# Adult Fiction# Love# Drama# Love Story", "9780000000000", "English", 326, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 829, 830, "The Amulet of Samarkand", "The Amulet of Samarkand", "Bartimaeus# Arthur Underwood# Martha Underwood# Simon Lovelace# Rupert Devereaux# Jessica Whitwell# Sholto Pinn# Kathleen Kitty Jones# Simkin# Stanley Hake# Faquarl# Nathaniel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Middle Grade# Adventure# Childrens# Urban Fantasy# Young Adult Fantasy# Audiobook", "9780000000000", "English", 462, 171 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 830, 831, "Crank", "Crank", "Kristina Snow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Realistic Fiction# Teen# Mental Health# Romance# High School# Abuse", "9780000000000", "English", 537, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 831, 832, "House of Leaves", "House of Leaves", "Zampanò# Will Navidson# Karen Green# Johnny Truant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Mystery# Thriller# Novels# Contemporary# Adult# Literature# Paranormal", "9780000000000", "English", 705, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 832, 833, "The Hunt for Red October", "The Hunt for Red October", "Marko Aleksandrovich Ramius# Dr. John Jack Patrick Ryan# Dr. Cathy Ryan# Ivan Yurievich Putin# Viktor Alexievich Tupolev# Bartolomeo Vito Mancuso# Oliver Wendell Tyler# Alexei Arbatov# Ronald Jones# Charles Davenport# Valintin Bugayev", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Military Fiction# Espionage# Adventure# Action# War# Mystery Thriller", "9780000000000", "English", 432, 833 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 833, 290, "Chasing the Devil: The Search for Africa's Fighting Spirit", "Chasing the Devil: The Search for Africa's Fighting Spirit", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Africa# Travel# Nonfiction# History# Liberia# Adventure# Sierra Leone# Journalism# War# Travelogue", "9780000000000", "English", 336, 789 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 834, 385, "Opal", "Opal", "Daemon Black# Blake Saunders# Dawson Black# Bethany Williams# Adam Thompson# Luc (Lux Series)# Katy Swartz# Dee Black# Andrew Thompson# Ash Thompson# Matthew Garrison", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Romance# Fantasy# Aliens# Science Fiction# Paranormal Romance# Supernatural# Urban Fantasy# New Adult", "9780000000000", "", 394, 385 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 835, 409, "Shadow and Bone", "Shadow and Bone", "Alina Starkov# Malyen Oretsev# Darkling# Genya Safin# Zoya Nazyalensky", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Magic# Fiction# Young Adult Fantasy# High Fantasy# Paranormal# Adventure# Audiobook", "10000000000000", "English", 358, 409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 836, 474, "Orlando", "Orlando", "Nicholas Greene# Marmaduke Bonthrop Shelmerdine# Sasha# Orlando# Legolas# Legolas", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# Fantasy# LGBT# Feminism# Queer# Novels# Literature# British Literature", "9780000000000", "English", 272, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 837, 838, "Requiem for a Dream", "Requiem for a Dream", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.09", " Richard Price (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 838, 839, "A Connecticut Yankee in King Arthur's Court", "A Connecticut Yankee in King Arthur's Court", "Merlin# Hank Morgan# King Arthur", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Fantasy# Historical Fiction# Humor# Time Travel# Literature# Adventure# Science Fiction# Arthurian", "10000000000000", "English", 480, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 839, 840, "The Agony and the Ecstasy", "The Agony and the Ecstasy", "Lorenzo de Medici# Michelangelo# Pope Clement VII# Francesco Granacci# Pietro Torrigiani# Pope Julius II# Leonardo da Vinci", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Art# Classics# Italy# Historical# Art History# Literature# Biography Memoir# Novels", "9780000000000", "English", 776, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 840, 268, "Pandemonium", "Pandemonium", "Magdalena Lena Ella Haloway-Tiddle# Julian Fineman# Tack# Raven (Delirium)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Fantasy# Teen# Adventure# Audiobook# Love", "9780000000000", "English", 375, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 841, 842, "\"84", "\"84", "Nonfiction# Books About Books# Memoir# Classics# Biography# British Literature# Biography Memoir# History# Adult# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.17", 0, 842 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 842, 843, "\"The Millennium Trilogy (Millennium Trilogy", "\"The Millennium Trilogy (Millennium Trilogy", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.48", " Reg Keeland (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 843, 844, "The Story of Edgar Sawtelle", "The Story of Edgar Sawtelle", "Edgar Sawtelle# Gar Sawtelle# Trudy Sawtelle# Claude Sawtelle# John Sawtelle# Mary Sawtelle# Almondine# Essay", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Animals# Dogs# Adult Fiction# Contemporary# Coming Of Age# Book Club# Literary Fiction# Adult# Novels", "9780000000000", "English", 566, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 844, 845, "Factotum", "Factotum", "Henry Chinaski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Classics# Mystery# Novels# Literature# Dark# Drama# American# Contemporary", "9780000000000", "English", 208, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 845, 846, "How Green Was My Valley", "How Green Was My Valley", "Huw Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# Historical# British Literature# Literature# Coming Of Age# Novels# Modern Classics# 20th Century", "10000000000000", "English", 448, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 846, 847, "The Bonfire of the Vanities", "The Bonfire of the Vanities", "Sherman McCoy# Peter Fallow# Jimmy Caughey# Huck Thigg# Alex Britt-Withers# Asher Herzfeld# Gil Archer# Baron Hochswald# Linwood Talley# Brian Highridge# Nick Stopping# Mike Bellavita# Lewis Sanderson# Ferdinand Arguello# Warren Bottomley# Bernard Levy# Annie Lamb# Greg Rosenwald# Guliaggi# Red Pitt# Gloria Dawson# Eugene Lopwitz# Caroline Heftshank# John Campbell McCoy# St. John Thomas# Kate di Ducci# Miss Lyons# Arthur Ruskin# Irv Stone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# Contemporary# Literary Fiction# New York# American# 20th Century# Humor", "9780000000000", "English", 690, 314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 847, 848, "Beauty: A Retelling of the Story of Beauty and the Beast", "Beauty: A Retelling of the Story of Beauty and the Beast", "Beauty / Honour Huston (Robin McKinley)# Grace Huston# Molly Honeybourne# Hope Huston-Woodhouse# Lydia (Robin McKinley)# Bessie (Beauty)# Mercy Woodhouse# Richard Woodhouse# Ruth (Robin McKinley)# Lady Marguerite# Robert Tucker# Gervain Woodhouse# Roderick Huston# Tom Black# Greatheart# Tom Bradley# Melinda Honeybourne# Ferdy (Robin McKinley)# Pat Lawrey# Nick Callaway# John Honeybourne# Cider (Robin McKinley)# Frewen (Robin McKinley)# Orpheus/Phooey# Odysseus (Robin McKinley)# Beast (Robin McKinley)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Fairy Tales# Young Adult# Retellings# Fiction# Beauty and The Beast# Fairy Tale Retellings# Magic# Young Adult Fantasy", "9780000000000", "English", 256, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 848, 849, "Where the Heart Is", "Where the Heart Is", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Chick Lit# Romance# Contemporary# Adult Fiction# Adult# Drama# Realistic Fiction# Young Adult# Novels", "9780000000000", "English", 376, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 849, 338, "A Walk in the Woods: Rediscovering America on the Appalachian Trail", "A Walk in the Woods: Rediscovering America on the Appalachian Trail", "Bill Bryson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Travel# Humor# Memoir# Nature# Adventure# Audiobook# Biography# Outdoors# History", "9780000000000", "English", 397, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 850, 851, "Naked Lunch", "Naked Lunch", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.46", " Barry Miles (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 851, 109, "The Fall", "The Fall", "Fiction# Philosophy# Classics# France# Literature# French Literature# Novels# 20th Century# Literary Fiction# Nobel Prize", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 852 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 852, 672, "Still Life with Woodpecker", "Still Life with Woodpecker", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Literature# Novels# Contemporary# Magical Realism# Classics# American# Literary Fiction# Comedy", "9780000000000", "English", 288, 672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 853, 854, "\"Night World", "\"Night World", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Witches# Paranormal Romance# Fiction# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 854 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 854, 455, "The House of Mirth", "The House of Mirth", "Classics# Fiction# Historical Fiction# Literature# American# Novels# New York# 20th Century# Classic Literature# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 442 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 855, 856, "\"Will Grayson", "\"Will Grayson", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.77", " David Levithan (Goodreads Author)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 856, 857, "Journey to the End of the Night", "Journey to the End of the Night", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.22", " William T. Vollmann (Afterword)\"", " Angela Cismaş (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 857, 858, "On the Beach", "On the Beach", "Dwight Towers# Moira Davidson# Peter Holmes# Mary Holmes# John Osborne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Post Apocalyptic# Classics# Dystopia# Apocalyptic# Australia# War# Literature# Novels", "9780000000000", "English", 296, 858 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 858, 859, "Thoughtless", "Thoughtless", "Kellan Kyle# Denny Harris# Kiera Allen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Young Adult# College# Music# Adult# Chick Lit# Fiction", "9780000000000", "English", 530, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 859, 860, "The Long Walk", "The Long Walk", "Horror# Fiction# Dystopia# Thriller# Science Fiction# Fantasy# Audiobook# Suspense# Adult# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 860 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 860, 96, "The Wedding", "The Wedding", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Love Story# Drama", "9780000000000", "English", 276, 861 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 861, 95, "A Moveable Feast", "A Moveable Feast", "F. Scott Fitzgerald# Ezra Pound# Aleister Crowley# Gertrude Stein# Wyndham Lewis# Hadley Richardson Hemingway# Blaise Cendrars# Zelda Fitzgerald", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Nonfiction# Memoir# Biography# France# Travel# Literature# American# Autobiography# Biography Memoir", "10000000000000", "English", 192, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 862, 863, "Fablehaven", "Fablehaven", "Seth Sorenson# Stan Sorenson Grandpa# Kate Sorenson# Kendra Sorenson# Lena# Dale# Muriel Taggert# Maddox# Ruth Sorenson# Nero", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Middle Grade# Fiction# Childrens# Adventure# Magic# Juvenile# Young Adult Fantasy# Science Fiction Fantasy", "9780000000000", "English", 351, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 863, 351, "Lunar Park", "Lunar Park", "Patrick Bateman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Horror# Mystery# Suspense# Contemporary# Drama# Novels# Dark# Crime", "9780000000000", "English", 404, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 864, 73, "Sometimes a Great Notion", "Sometimes a Great Notion", "Henry Stamper# Hank Stamper# Jonathan Bailey Draeger# Boney Stokes# Viv Stamper# Leeland Stamper", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# Thriller# Literary Fiction# American# Mystery# Drama# Suspense", "9780000000000", "English", 640, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 865, 107, "The Murder of Roger Ackroyd", "The Murder of Roger Ackroyd", "Hercule Poirot# Dr James Sheppard# Caroline Sheppard# Roger Ackroyd# Flora Ackroyd# Mrs. Ackroyd# Hector Blunt# Ralph Paton# Geoffrey Raymond (The Murder of Roger Ackroyd)# Parker (The Murder of Roger Ackroyd)# Elizabeth Russell (The Murder of Roger Ackroyd)# Mrs. Ferrars# Charles Kent# Inspector Raglan# Mr. Hammond", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Classics# Crime# Mystery Thriller# Detective# Thriller# British Literature# Audiobook# Murder Mystery", "9780000000000", "English", 288, 866 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 866, 24, "Shakespeare's Sonnets", "Shakespeare's Sonnets", "Poetry# Classics# Fiction# Literature# Romance# Plays# School# British Literature# English Literature# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 376 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 867, 868, "Easy", "Easy", "Jacqueline Wallace# Landon Maxfield", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# College# Chick Lit# Fiction# Realistic Fiction# Abuse", "9780000000000", "English", 336, 868 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 868, 314, "Beach Music", "Beach Music", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Southern# Contemporary# Drama# Historical Fiction# Literary Fiction# Novels# Literature# Audiobook# Adult Fiction", "9780000000000", "English", 800, 58 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 869, 870, "We", "We", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.92", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 870, 76, "The Pact", "The Pact", "Chris Harte# Emily Gold# Melanie Gold# Jordan McAfee", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Contemporary# Chick Lit# Drama# Adult Fiction# Mystery# Adult# Young Adult# Realistic Fiction", "9780000000000", "English", 512, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 871, 872, "The Awakening / The Struggle", "The Awakening / The Struggle", "Elena Gilbert# Stefan Salvatore# Damon Salvatore# Matt Honeycutt# Bonnie McCullough# Caroline Forbes# Alaric Saltzman# Katherine von Swartschild# Meredith Sulez# Judith Gilbert# Margaret Gilbert", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Fiction# Paranormal Romance# Urban Fantasy# Teen", "9780000000000", "English", 492, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 872, 873, "\"Roll of Thunder", "\"Roll of Thunder", "Historical Fiction# Young Adult# Fiction# Classics# Childrens# Middle Grade# School# Historical# African American# Read For School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 873, 15, "Deception Point", "Deception Point", "Rachel Sexton# Michael Tolland# Thomas Sedgewick Sexton# Corky Marlinson# Zachary Herney# William Pickering# Gabrielle Ashe# Marjorie Tench# Lawrence Ekstrom", new DateTime(2022, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Thriller# Mystery# Suspense# Mystery Thriller# Adventure# Crime# Novels# Science Fiction# Action", "9780000000000", "English", 556, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 874, 622, "Faefever", "Faefever", "MacKayla Lane# Rowena# Dani OMalley# Jericho Barrons# Vlane# Lord Master# Derek OBannion# Christian MacKeltar# Inspector Jayne# Darroc", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Fae# Paranormal Romance# Adult# Romance# Magic# Fairies# Supernatural", "9780000000000", "English", 327, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 875, 385, "Onyx", "Onyx", "Daemon Black# Blake Saunders# Adam Thompson# Katy Swartz# Dee Black# Andrew Thompson# Ash Thompson# Matthew Garrison", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Romance# Fantasy# Aliens# Science Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Fiction", "10000000000000", "English", 421, 385 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 876, 542, "Fantasy Lover", "Fantasy Lover", "Grace Alexander# Eros (Hunter Legends series)# Aphrodite (Hunter Legends series)# Psyche (Hunter Legends series)# Julian of Macedonia (Hunter Legends series)# Selena Devereaux Laurens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Paranormal Romance# Paranormal# Fantasy# Urban Fantasy# Adult# Mythology# Vampires# Fiction# Supernatural", "9780000000000", "English", 337, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 877, 530, "This Lullaby", "This Lullaby", "Remy Starr# Dexter Jones", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Teen# Music# Young Adult Contemporary# High School", "9780000000000", "English", 345, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 878, 438, "Ugly Love", "Ugly Love", "Tate Collins# Miles Archer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Fiction# Adult# Chick Lit# Young Adult# Audiobook# Drama", "B00HB62MC0", "English", 337, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 879, 289, "Sharp Objects", "Sharp Objects", "Camille Preaker# Frank Curry# Amma Crellin# Adora Crellin# Chief Bill Vickery# Alan Crellin# Marian Crellin# Richard Willis# Ann Nash# Natalie Keene", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Adult# Audiobook# Contemporary# Adult Fiction", "10000000000000", "English", 254, 880 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 880, 213, "Passion", "Passion", "Lucinda Price# Daniel Grigori# Sophia Bliss# Bill", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Angels# Romance# Paranormal# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Teen", "9780000000000", "English", 420, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 881, 224, "A Court of Wings and Ruin", "A Court of Wings and Ruin", "Rhysand# Feyre# Lucien# Tamlin# Nesta Archeron# Elain Archeron# Cassian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Young Adult# New Adult# Fae# Magic# Fiction# Young Adult Fantasy# High Fantasy# Paranormal", "9780000000000", "English", 699, 882 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 882, 518, "Bitten", "Bitten", "Elena Michaels# Jeremy Danvers# Clayton Danvers# Antonio Sorrentino# Karl Marsten# Nicholas Sorrentino# Logan Jonsen# Daniel Santos", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Werewolves# Paranormal Romance# Fiction# Supernatural# Adult# Shapeshifters", "9780000000000", "English", 436, 883 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 883, 884, "The 5 Love Languages: The Secret to Love that Lasts", "The 5 Love Languages: The Secret to Love that Lasts", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Self Help# Relationships# Psychology# Marriage# Christian# Personal Development# Audiobook# Love# Christianity", "B00OICLVBI", "English", 209, 884 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 884, 885, "Sapiens: A Brief History of Humankind", "Sapiens: A Brief History of Humankind", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Science# Philosophy# Anthropology# Audiobook# Sociology# Historical# Psychology# Evolution", "10000000000000", "English", 498, 885 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 885, 886, "Meditations", "Meditations", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.22", " Diskin Clay (Introduction)\"", " Albert Wittstock (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 886, 317, "From Dead to Worse", "From Dead to Worse", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Sophie-Anne LeClerq# Alcide Herveaux# Claudine Crane# Amelia Broadway# Octavia Fant# Francine Quinn# Claude Crane# Niall Brigant# Bob Jessup# John Quinn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Fiction# Romance# Mystery# Paranormal Romance# Supernatural# Adult", "9780000000000", "English", 359, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 887, 66, "Wizard and Glass", "Wizard and Glass", "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Science Fiction Fantasy# Audiobook# Post Apocalyptic# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 888 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 888, 889, "Disgrace", "Disgrace", "David Lurie# Lucy Lurie# Petrus# Bev Shaw# Melanie Isaacs", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Africa# South Africa# Literature# Novels# Contemporary# Classics# Literary Fiction# Nobel Prize# 20th Century", "9780000000000", "English", 220, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 889, 93, "The Fountainhead", "The Fountainhead", "Fiction# Classics# Philosophy# Literature# Novels# Politics# Architecture# Literary Fiction# American# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.87", 0, 890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 890, 891, "Wings", "Wings", "Laurel Sewell# David Lawson# Tamani", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fairies# Fae# Fiction# Magic# Urban Fantasy# Paranormal Romance", "9780000000000", "English", 290, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 891, 317, "All Together Dead", "All Together Dead", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Quinn# Pam Ravenscroft# Sophie-Anne LeClerq# Barry Bellboy Horowitz# Russell Edgington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Fiction# Romance# Mystery# Paranormal Romance# Supernatural# Adult", "9780000000000", "English", 323, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 892, 893, "The Brief Wondrous Life of Oscar Wao", "The Brief Wondrous Life of Oscar Wao", "Oscar de León# Lola de León# Hypatía Belicia Beli Cabral de León# La Inca# Yunior de Las Casas# Ybón Pimentel# Dr Abelard Luis Cabral", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Magical Realism# Novels# Literary Fiction# Literature# Historical Fiction# Audiobook# Book Club# Adult", "9780000000000", "English", 335, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 893, 289, "Dark Places", "Dark Places", "Libby Day# Ben Day# Patty Day# Ronald Runner Day# Diondra Wertzner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Adult# Audiobook# Contemporary# Adult Fiction", "9780000000000", "English", 349, 894 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 894, 895, "Silas Marner", "Silas Marner", "Silas Marner# Eppie# Godfrey Cass# Dunstan Cass# Dolly Winthrop# Squire Cass# Nancy Lammeter# William Dane# Priscilla Lammeter# Aaron Winthrop", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Historical Fiction# 19th Century# British Literature# Victorian# Classic Literature# Novels# School", "10000000000000", "English", 262, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 895, 896, "The Rime of the Ancient Mariner", "The Rime of the Ancient Mariner", "Poetry# Classics# Fiction# Literature# Fantasy# School# 18th Century# British Literature# Gothic# Romanticism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 896 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 896, 112, "The Drawing of the Three", "The Drawing of the Three", "Eddie Dean# Odetta Holmes# Jack Mort# Roland Deschain# Detta Walker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Audiobook# Science Fiction Fantasy# Thriller# Novels", "9780000000000", "English", 463, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 897, 898, "The Bhagavad Gita", "The Bhagavad Gita", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.13", " Juan Mascaró (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 898, 899, "\"These Is My Words: The Diary of Sarah Agnes Prine", "\"These Is My Words: The Diary of Sarah Agnes Prine", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.34", "Nancy E. Turner", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 899, 317, "Dead and Gone", "Dead and Gone", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Fiction# Romance# Mystery# Paranormal Romance# Supernatural# Werewolves", "9780000000000", "English", 312, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 900, 901, "Every Day", "Every Day", "A# Nathan Daldry# Justin (Every Day)# Anderson Poole# Rhiannon (Every Day)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Fantasy# Contemporary# Fiction# LGBT# Paranormal# Magical Realism# Teen# Science Fiction", "9780000000000", "English", 322, 367 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 901, 902, "The Horse Whisperer", "The Horse Whisperer", "Annie Graves# Tom Booker# Pilgrim# Grace MacLean# Wayne P. Tanner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Animals# Horses# Contemporary# Drama# Adult# Adult Fiction# Chick Lit# Novels", "9780000000000", "English", 451, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 902, 903, "The Maltese Falcon", "The Maltese Falcon", "Casper Gutman# Effie Perine# Brigid OShaughnessy# Joel Cairo# Sam Spade", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Classics# Crime# Noir# Thriller# Detective# Mystery Thriller# Novels# Audiobook", "9780000000000", "English", 213, 635 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 903, 904, "The Man Without Qualities", "The Man Without Qualities", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.23", " Sophie Wilkins (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 904, 535, "Skagboys", "Skagboys", "Spud# Mark Renton# Sickboy# Francis Begbie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Drama# Contemporary# Dark# Novels# Crime# Epic", "9780000000000", "English", 548, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 905, 531, "Childhood's End", "Childhood's End", "Rikki Stormgren# Karellen# Jan Rodricks", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Aliens# Dystopia# Fantasy# Audiobook# Novels# Speculative Fiction", "10000000000000", "English", 224, 156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 906, 907, "Tiger's Curse", "Tiger's Curse", "Kishan# Kelsey Hayes# Dhiren", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Mythology# Magic# Adventure# Fiction# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 403, 907 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 907, 908, "Redwall", "Redwall", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Childrens# Animals# Adventure# Middle Grade# Classics# Science Fiction Fantasy# Audiobook", "9780000000000", "English", 352, 51 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 908, 909, "Thus Spoke Zarathustra", "Thus Spoke Zarathustra", "Philosophy# Classics# Nonfiction# German Literature# Literature# Religion# 19th Century# Unfinished# Psychology# Poetry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.05", 0, 909 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 909, 96, "Safe Haven", "Safe Haven", "Katie# Alex Wheatley# Jo# Kevin Tierney", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Drama# Love# Audiobook", "B003JTHXOK", "English", 353, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 910, 53, "The Iliad", "The Iliad", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.87", " Bernard Knox (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 911, 85, "All the Pretty Horses", "All the Pretty Horses", "John Grady Cole# Rawlins# Blevins# Alejandra", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Westerns# Historical Fiction# Classics# Literature# Novels# Literary Fiction# American# Contemporary# Adventure", "9780000000000", "English", 302, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 912, 913, "The Razor's Edge", "The Razor's Edge", "Elliott Templeton# Larry Darrell# Louisa Bradley# Sophie Macdonald# Gray Maturin# Isabel Bradley# Dr. Bob Nelson# Somerset Maugham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Philosophy# British Literature# Literary Fiction# Historical Fiction# 20th Century# France", "9780000000000", "English", 314, 250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 913, 914, "Into the Wild", "Into the Wild", "Lionheart# Graystripe# Fireheart# Bluestar# Tigerclaw# Whitestorm# Crookedstar# Ravenpaw# Spottedleaf# Darkstripe# Longtail# Runningwind# Willowpelt# Mousefur# Frostfur# Brindleface# Goldenflower# Speckletail# Halftail# Patchpelt# One-eye# Dappletail# Brokenstar# Runningnose# Stumpytail# Clawface# Nightpelt# Dawncloud# Brightflower# Ashfur# Tallstar# Oakheart# Blackfoot# Boulder# Smallear# Yellowfang# Smudge# Barley# Rosetail# Dustpaw# Sandpaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Animals# Fiction# Young Adult# Middle Grade# Childrens# Adventure# Cats# Juvenile# Animal Fiction", "9780000000000", "English", 288, 715 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 914, 915, "The Ruins of Gorlan", "The Ruins of Gorlan", "Will Treaty# Halt OCarrick# Alyss Mainwaring# Jennifer Dalby# Horace Altman# George Carter# Baron Arald# Sir Rodney# Morgarath# Tug# Abelard# Blaze# Gilan# Pauline DuLacy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Childrens# Young Adult Fantasy# Teen# High Fantasy# Action", "9780000000000", "English", 249, 122 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 915, 332, "The Runaway Jury", "The Runaway Jury", "Wendall Rohr# Celeste Wood# Nicholas Easter# Rankin Fitch", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Crime# Suspense# Legal Thriller# Drama# Mystery Thriller# Novels# Adult Fiction", "9780000000000", "English", 358, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 916, 917, "Call Me By Your Name", "Call Me By Your Name", "Elio# Oliver", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# LGBT# Contemporary# Queer# Audiobook# Adult# Gay# Coming Of Age# M M Romance", "9780000000000", "English", 248, 917 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 917, 918, "Hex Hall", "Hex Hall", "Jenna# Sophia Mercer# Archer Cross# Elodie# Mrs. Casnoff", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Magic# Romance# Vampires# Witches# Supernatural# Urban Fantasy# Demons", "9780000000000", "English", 323, 918 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 918, 919, "Unearthly", "Unearthly", "Clara Gardner# Jeffrey Gardner# Christian Prescott# Wendy Avery# Tucker Avery# Kay Patterson# Angela Zerbino# Samjeeza (Sam)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Angels# Paranormal# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Fiction# Young Adult Fantasy", "9780000000000", "English", 435, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 919, 343, "The Well of Ascension", "The Well of Ascension", "Marsh# Vin# Elend Venture# Sazed# Dockson# Hammond# Breeze# Clubs# Spook# Tindwyl# OreSeur# Straff Venture# Lord Cett# Penrod", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Adult# Audiobook# Science Fiction Fantasy# Adventure# Young Adult", "9780000000000", "English", 590, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 920, 250, "Light in August", "Light in August", "Lena Grove# Lucas Burch# Byron Bunch# Joe Christmas# Joanna Burden# Reverend Gail Hightower# Eupheus Doc Hines", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# American# Southern# Southern Gothic# Literary Fiction# 20th Century# Classic Literature", "9780000000000", "English", 507, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 921, 96, "The Guardian", "The Guardian", "Julie Barenson# Richard Franklin# Mike Harris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Mystery# Drama# Love", "9780000000000", "English", 400, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 922, 923, "White Noise", "White Noise", "Jack Gladney# Babette Gladney# Dana Breedlove# Tweedy Browner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# American# Literary Fiction# Contemporary# Science Fiction# 20th Century# School", "9780000000000", "English", 320, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 923, 530, "Along for the Ride", "Along for the Ride", "Maggie Neely# Auden West# Eli Stock# Heidi West# Robert West# Victoria West# Hollis West", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Teen# Young Adult Contemporary# Coming Of Age# Young Adult Romance", "9780000000000", "English", 383, 924 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 924, 925, "The Story of Ferdinand", "The Story of Ferdinand", "Picture Books# Childrens# Classics# Fiction# Animals# Spain# Kids# Juvenile# Young Adult# Humor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 925 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 925, 926, "A Passage to India", "A Passage to India", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.68", " Pankaj Mishra (Introduction )\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 926, 927, "Dead Witch Walking", "Dead Witch Walking", "Rachel Morgan# Ivy Tamwood# Jenks# Trent Kalamack# Algaliarept# Kisten Felps# Nick Sparagmos# Detective Glenn# Jonathan# Captain Edden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Fiction# Supernatural# Paranormal Romance# Romance", "9780000000000", "English", 416, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 927, 928, "Beastly", "Beastly", "Magda# Kyle Kingsbury# Will Fratalli# Linda Lindy Owens# Kendra Hilferty# Rob Kingsbury# Mr. Anderson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Fairy Tales# Retellings# Fiction# Paranormal# Magic# Teen# Beauty and The Beast", "9780000000000", "English", 304, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 928, 929, "The Far Pavilions", "The Far Pavilions", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# India# Romance# Historical# Classics# Adventure# Historical Romance# Asia# 19th Century", "9780000000000", "English", 958, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 929, 522, "At Grave's End", "At Grave's End", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Mencheres# Tate Bradley# Don Williams# Vlad Tepesh# Ian Flannery# Annette De Witt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal# Urban Fantasy# Paranormal Romance# Romance# Fantasy# Adult# Supernatural# Fiction# Magic", "9780000000000", "English", 342, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 930, 335, "The Man in the High Castle", "The Man in the High Castle", "Nobusuke Tagomi# Rudolf Wegener# Frank Frink# Juliana Frink# Robert Childan# Paul Kasoura# Betty Kasoura# Ed McCarthy# Hawthorne Abendsen# Joe Cinnadella# Wyndam-Matson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Alternate History# Dystopia# Classics# Historical Fiction# Fantasy# Science Fiction Fantasy# Novels# Speculative Fiction", "9780000000000", "English", 259, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 931, 96, "A Bend in the Road", "A Bend in the Road", "Miles Ryan# Sarah Andrews# Jonah Ryan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Mystery# Drama# Love", "9780000000000", "English", 341, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 932, 933, "\"Love is the Answer", "\"Love is the Answer", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.32", "Aimee Cabo Nikolov (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 933, 88, "The Indigo Spell", "The Indigo Spell", "Sydney Sage# Adrian Ivashkov# Jillian Mastrano# Edison Eddie Castile# Angeline Dawes# Marcus Finch# Zoe Sage", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Magic# Urban Fantasy# Supernatural# Paranormal Romance# Witches", "9780000000000", "English", 401, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 934, 215, "Walks Away Woman", "Walks Away Woman", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Survival# Adventure# Fiction# Literature# Humor# Novels# Womens# Nature# Thriller# Action", "9780000000000", "English", 254, 271 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 935, 936, "Blue Bloods", "Blue Bloods", "Schuyler Van Alen# Mimi Force# Bliss Llewellyn# Jack Force# Cordelia Van Alen# Oliver Hazard-Perry# Dylan Ward# Charles Force# Aggie Carondolet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Supernatural# Fiction# Paranormal Romance# Angels", "9780000000000", "English", 302, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 936, 224, "The Assassin's Blade", "The Assassin's Blade", "Celaena Sardothien# Sam Cortland# Ansel of Briarcliff# Arobynn Hamel# Yrene Towers# Lysandra", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Young Adult Fantasy# Fiction# Short Stories# High Fantasy# Novella# New Adult# Magic", "9780000000000", "English", 448, 937 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 937, 431, "Suzanne's Diary for Nicholas", "Suzanne's Diary for Nicholas", "Katie Wilkinson# Matt Harrison# Suzanne Harrison", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Mystery# Drama# Love# Contemporary Romance", "9780000000000", "English", 289, 861 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 938, 939, "A Doll's House", "A Doll's House", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.73", " Michael Meyer (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 939, 270, "The Taming of the Shrew", "The Taming of the Shrew", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Plays# Fiction# Drama# School# Literature# Romance# Theatre# Poetry# Comedy", "9780000000000", "English", 291, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 940, 25, "Eleven Minutes", "Eleven Minutes", "Fiction# Romance# Novels# Contemporary# Philosophy# Literature# Adult# Spirituality# Drama# Brazil", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.7", 0, 941 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 941, 942, "Smilla's Sense of Snow", "Smilla's Sense of Snow", "Fiction# Mystery# Crime# Thriller# Denmark# Scandinavian Literature# Mystery Thriller# Contemporary# Danish# Suspense", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.74", 0, 942 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 942, 943, "The Devil Wears Prada", "The Devil Wears Prada", "Andrea Sachs# Miranda Priestly# Alexander Fineman# Emily# Lily Goodwin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Fiction# Contemporary# Romance# Adult# Humor# Adult Fiction# Fashion# Novels# Realistic Fiction", "9780000000000", "English", 432, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 943, 67, "A Study in Scarlet", "A Study in Scarlet", "Jefferson Hope# Inspector Lestrade# Enoch Drebber# Lucy Ferrier# John Ferrier# Mrs Hudson (Conan Doyle series)# Joseph Stangerson# Tobias Gregson# Sherlock Holmes# Dr. John Watson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Mystery# Fiction# Crime# Detective# Mystery Thriller# Historical Fiction# Audiobook# 19th Century# British Literature", "9780000000000", "English", 123, 488 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 944, 945, "An Ember in the Ashes", "An Ember in the Ashes", "Laia# Elias Veturius# Helene Aquilla# Marcus Farrar# Keris Veturia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Dystopia# Young Adult Fantasy# High Fantasy# Audiobook# Magic# Adventure", "10000000000000", "English", 446, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 945, 135, "Anansi Boys", "Anansi Boys", "Fat Charlie# Rosie Noah# Spider# Mrs. Callyanne Higgler# Mrs. Eutheria Noah# Mrs. Louella Dunwiddy# Graham Coates# Maeve Livingston# Daisy Day# Mr. Nancy# Mrs. Zora Bustamonte", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Urban Fantasy# Mythology# Audiobook# Science Fiction Fantasy# Humor# Adult# Magical Realism# Contemporary", "9780000000000", "English", 387, 946 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 946, 947, "A Little Life", "A Little Life", "Jude St. Francis# Willem Ragnarsson# Malcom Irvine# Jean-Baptiste (JB) Marion# Harold Stein# Julia Altman# Andy Contractor# Richard Goldfarb# Ana", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# LGBT# Literary Fiction# Adult# Novels# Adult Fiction# Queer# Audiobook# Literature", "9780000000000", "English", 720, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 947, 948, "Songs of Innocence and of Experience", "Songs of Innocence and of Experience", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Classics# Fiction# 18th Century# Literature# Art# School# British Literature# Romanticism# English Literature", "9780000000000", "English", 56, 488 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 948, 24, "The Tempest", "The Tempest", "3.81", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Barbara A. Mowat (Editor)", " Israel Gollancz (Preface & Glossary)", " David Lindley (Editor)", 0, 949 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 949, 650, "The Dispossessed", "The Dispossessed", "Shevek# Takver# Bedap", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Dystopia# Science Fiction Fantasy# Classics# Speculative Fiction# Politics# Philosophy# Novels", "10000000000000", "English", 387, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 950, 368, "Lover Enshrined", "Lover Enshrined", "Zsadist# Bella Soang# Phury# Cormia# John Matthew# Xhexania# Qhuinn# Blaylock# Tohrment# Rehvenge# Lash# The Scribe Virgin# Mr. D# Nalla# Wrath (Blind King)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Romance# Paranormal Romance# Vampires# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Erotica", "9780000000000", "English", 560, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 951, 952, "The Pilgrim's Progress", "The Pilgrim's Progress", "Hopeful# Christian# Faithful", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Christian# Religion# Christian Fiction# Christianity# Theology# Literature# Fantasy# Faith", "10000000000000", "English", 324, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 952, 953, "Running with Scissors", "Running with Scissors", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Memoir# Nonfiction# Biography# Humor# Biography Memoir# Autobiography# LGBT# Psychology# Mental Illness# Adult", "9780000000000", "English", 304, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 953, 954, "Forbidden", "Forbidden", "Lochan Whitely# Maya Whitely# Kit Whitely# Willa Whitely# Tiffin Whitely", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# New Adult# Dark# Drama# Family# Young Adult Contemporary", "9780000000000", "English", 418, 954 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 954, 955, "Crossroads and the Himalayan Crystals", "Crossroads and the Himalayan Crystals", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Drama# Epic", "9780000000000", "", 266, 955 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 955, 232, "The Great Divorce", "The Great Divorce", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Fiction# Religion# Classics# Christianity# Theology# Fantasy# Faith# Philosophy# Christian Fiction", "10000000000000", "English", 146, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 956, 332, "The Client", "The Client", "Mark Sway# Reggie Love# Barry Muldanno# Denton Voyles", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Crime# Suspense# Legal Thriller# Mystery Thriller# Drama# Novels# Law", "9780000000000", "English", 483, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 957, 497, "The Iron Queen", "The Iron Queen", "Meghan Chase# Puck# Grimalkin# Ash - Ashallayn Darkmyr Tallyn# Queen Mab# King Oberon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fae# Fairies# Magic# Urban Fantasy# Young Adult Fantasy# Fiction", "9780000000000", "English", 384, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 958, 959, "The Last of the Mohicans", "The Last of the Mohicans", "Nathaniel Bumppo# Chingachgook# Magua# Uncas# Cora Munro# Alice Munro# Colonel George Munro# Duncan Heyward# David Gamut# Tamenund# General Marquis de Montcalm# General Daniel Webb", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# Adventure# Literature# Historical# American# Novels# Classic Literature# War", "9780000000000", "English", 410, 285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 959, 960, "Across the Universe", "Across the Universe", "Harley# Doc Bradley Stanwick# Orion# Amy Martin# Elder# Eldest", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Romance# Fantasy# Fiction# Mystery# Space# Teen# Adventure", "9780000000000", "English", 399, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 960, 961, "Hatchet", "Hatchet", "Brian Robeson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Adventure# Classics# Survival# Childrens# Realistic Fiction# Middle Grade# School# Read For School", "9780000000000", "English", 208, 961 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 961, 438, "Point of Retreat", "Point of Retreat", "Layken Cohen# Will Cooper", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# Fiction# Chick Lit# College# Love# Drama", "10000000000000", "English", 230, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 962, 963, "Birdsong: A Novel of Love and War", "Birdsong: A Novel of Love and War", "Stephen Wraysford# Isabelle Azaire# Elizabeth Benson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# War# Classics# Historical# Romance# World War I# France# Novels# Literature", "9780000000000", "English", 483, 250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 963, 667, "Hogfather", "Hogfather", "Nobby Nobbs# DEATH# Susan Sto Helit# The Librarian# Death of Rats# Hogfather", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Christmas# Audiobook# Magic# High Fantasy# Novels", "9780000000000", "English", 432, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 964, 965, "Unblinded: One Man’s Courageous Journey through Darkness to Sight", "Unblinded: One Man’s Courageous Journey through Darkness to Sight", "Drama# Contemporary# Book Club# Epic# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "", "4.33", 0, 965 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 965, 966, "\"Gödel", "\"Gödel", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.28", "Douglas R. Hofstadter", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 966, 967, "Let the Right One In", "Let the Right One In", "Eli# Oskar Eriksson# Håkan Bengtsson# Jonny Forsberg", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Vampires# Fantasy# Paranormal# Thriller# Supernatural# Mystery# Swedish Literature# Sweden", "9780000000000", "English", 513, 967 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 967, 968, "Nightshade", "Nightshade", "Calla Tor# Ren Laroche# Ansel Tor# Bryn# Seamus Doran# Fey# Ariadne (Nightshade)# Corrine Laroche# Neville# Mason# Logan Bane", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Werewolves# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Magic# Fiction", "9780000000000", "English", 452, 968 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 968, 969, "Storm Front", "Storm Front", "Donald Morgan# Ron Carmichael# Susan Rodriguez# Bob (Dresden Files)# Gentleman John Marcone# Karrin Murphy# Harry Dresden# Bianca St. Claire", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Mystery# Fiction# Paranormal# Magic# Audiobook# Supernatural# Science Fiction Fantasy# Crime", "9780000000000", "English", 384, 969 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 969, 530, "Lock and Key", "Lock and Key", "Peyton# Ruby Cooper# Cora Cooper-Hunter# Nate Cross# Jamie Hunter# Reggie# Olivia Davis# Gervais Miller# Blake Cross# Marshall# Heather Wainwright", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Chick Lit# Teen# Young Adult Contemporary# High School# Coming Of Age", "9780000000000", "English", 432, 970 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 970, 971, "Valley of the Dolls", "Valley of the Dolls", "Anne Welles# Neely OHara# Jennifer North", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Chick Lit# Romance# Contemporary# Novels# Adult# Adult Fiction# Drama# New York", "9780000000000", "English", 442, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 971, 5, "The Short Second Life of Bree Tanner", "The Short Second Life of Bree Tanner", "Edward Cullen# Diego# Bella Swan# Bree Tanner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Vampires# Paranormal# Fiction# Romance# Supernatural# Urban Fantasy# Teen# Paranormal Romance", "9780000000000", "English", 178, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 972, 178, "The Kitchen God's Wife", "The Kitchen God's Wife", "Winnie# Auntie Helen# Pearl Bright# Mary# Frank Russell# Roger Bao Bao# Doug Cheu# Phil Brandt# Tessa Russo# Cleo# Mimi Wong# Loy Fong# Edna Fong# New Aunt# Old Aunt# Wen Fu# Huazheng Peanut# Uncle Henry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# China# Asia# Contemporary# Asian Literature# Novels# Historical# Adult Fiction# Literature", "9780000000000", "English", 416, 178 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 973, 974, "To Live and Die in Fantasyland", "To Live and Die in Fantasyland", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Inspirational", "9780000000000", "", 320, 974 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 974, 975, "Eugene Onegin", "Eugene Onegin", "Classics# Poetry# Russia# Fiction# Russian Literature# Literature# 19th Century# Romance# Novels# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 975, 976, "Evernight", "Evernight", "Bianca Olivier# Balthazar More# Raquel Vargas# Lucas Ross# Vic Woodson# Adrian Olivier# Celia Olivier", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Fiction# Teen", "9780000000000", "English", 327, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 976, 977, "Between Shades of Gray", "Between Shades of Gray", "Lina Vilkas# Jonas Vilkas# Elena Vilkas# Andrius Aras", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Historical# Fiction# War# World War II# Russia# Audiobook# Teen# Romance", "9780000000000", "English", 344, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 977, 654, "We Have Always Lived in the Castle", "We Have Always Lived in the Castle", "Horror# Fiction# Classics# Gothic# Mystery# Audiobook# Thriller# Adult# Novels# Adult Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 287 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 978, 979, "Magician", "Magician", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Science Fiction Fantasy# Adventure# Epic# Science Fiction# Adult", "9780000000000", "English", 681, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 979, 12, "Dirk Gently's Holistic Detective Agency", "Dirk Gently's Holistic Detective Agency", "Dirk Gently# Richard MacDuff# Professor Chronotis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Humor# Mystery# Comedy# Science Fiction Fantasy# Time Travel# Detective# Novels", "10000000000000", "English", 306, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 980, 7, "Animal Farm / 1984", "Animal Farm / 1984", "Classics# Fiction# Dystopia# Literature# Science Fiction# Politics# Fantasy# Novels# Philosophy# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 981, 982, "Fingersmith", "Fingersmith", "Sue Trinder# Maud Lilly# Gentleman# Mrs. Sucksby", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# LGBT# Historical# Romance# Mystery# Queer# Lesbian# Adult# Victorian", "9780000000000", "English", 592, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 982, 983, "The Past", "The Past", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Time Travel# Dystopia# Fiction# Historical Fiction# Cyberpunk# Action# British Literature# Young Adult# Fantasy", "9780000000000", "English", 195, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 983, 984, "On Dublin Street", "On Dublin Street", "Jocelyn Butler# Braden Carmichael# Ellie Carmichael# Adam Sutherland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Adult# Erotica# Fiction# Chick Lit# Erotic Romance# Adult Fiction", "B0094J01VG", "English", 372, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 984, 661, "The Collector", "The Collector", "Frederick Clegg# Miranda Grey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Classics# Thriller# Crime# Mystery# British Literature# Novels# Literature# Literary Fiction", "10000000000000", "English", 283, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 985, 986, "Cry Wolf", "Cry Wolf", "Samuel Cornick# Charles Cornick# Anna Latham# Asil The Moor (Hussan)# Mariposa# Blue Jay Woman# Walter Rice# Colin Taggart# Bran The Marrok Cornick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Paranormal Romance# Werewolves# Shapeshifters# Fiction# Supernatural# Adult", "9780000000000", "English", 294, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 986, 987, "Swan Song", "Swan Song", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Post Apocalyptic# Fantasy# Science Fiction# Dystopia# Apocalyptic# Thriller# Audiobook# Science Fiction Fantasy", "9780000000000", "English", 956, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 987, 99, "Memnoch the Devil", "Memnoch the Devil", "Lestat de Lioncourt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Vampires# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Adult# Science Fiction Fantasy", "9780000000000", "English", 354, 988 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 988, 989, "Helter Skelter: The True Story of the Manson Murders", "Helter Skelter: The True Story of the Manson Murders", "True Crime# Nonfiction# Crime# History# Horror# Biography# Audiobook# Mystery# Cults# Psychology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.04", 0, 989 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 989, 990, "The Winds of War", "The Winds of War", "Joseph Stalin# Hermann Göring# Benito Mussolini# Victor Henry# Byron Henry# Eleanor Roosevelt# Aaron Jastrow# Natalie Jastrow# Rhoda Henry# Warren Henry# Franklin D. Roosevelt# Adolf Hitler# Winston Churchill# Pamela Tudsbury", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# War# World War II# Historical# Classics# Military Fiction# Audiobook# Novels# Literature", "9780000000000", "English", 896, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 990, 497, "The Iron Daughter", "The Iron Daughter", "Meghan Chase# Puck# Grimalkin# Ash - Ashallayn Darkmyr Tallyn# Queen Mab# King Oberon# Ironhorse", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fae# Fairies# Magic# Urban Fantasy# Fiction# Young Adult Fantasy", "9780000000000", "English", 359, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 991, 992, "A River Runs Through it and Other Stories", "A River Runs Through it and Other Stories", "Fiction# Short Stories# Classics# Literature# Nature# Historical Fiction# Literary Fiction# Westerns# Novels# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 992 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 992, 993, "The Stinky Cheese Man and Other Fairly Stupid Tales", "The Stinky Cheese Man and Other Fairly Stupid Tales", "Picture Books# Childrens# Humor# Fiction# Fairy Tales# Fantasy# Short Stories# Classics# Kids# Folklore", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 993 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 993, 994, "The Mysterious Benedict Society", "The Mysterious Benedict Society", "Reynie Muldoon# Sticky Washington# Kate Wetherall# Constance Contraire# Mr. Benedict# Rhonda Kazembe# Number Two# Miss Perumal", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Young Adult# Middle Grade# Fantasy# Childrens# Adventure# Juvenile# Science Fiction# Audiobook", "B000SEHIB2", "English", 497, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 994, 194, "The Valley of Horses", "The Valley of Horses", "Ayla# Jondalar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Romance# Prehistoric# Adventure# Adult# Novels# Adult Fiction", "9780000000000", "English", 544, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 995, 996, "Twenty Love Poems and a Song of Despair", "Twenty Love Poems and a Song of Despair", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.28", " Cristina García (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 996, 431, "School's Out—Forever", "School's Out—Forever", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Fang# Ari", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Paranormal# Action# Teen# Romance# Thriller", "9780000000000", "English", 409, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 997, 431, "Saving the World and Other Extreme Sports", "Saving the World and Other Extreme Sports", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Fang# Ari", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Paranormal# Romance# Teen# Action# Urban Fantasy", "9780000000000", "English", 405, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 998, 524, "Rules of Attraction", "Rules of Attraction", "Carlos Fuentes# Kiara Westford# Richard Westford# Brandon Westford# Alex Fuentes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# Contemporary Romance# High School# Realistic Fiction# Chick Lit# New Adult# Fiction# Young Adult Romance", "9780000000000", "English", 336, 604 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 999, 43, "Percy Jackson and the Olympians", "Percy Jackson and the Olympians", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mythology# Adventure# Fiction# Greek Mythology# Magic# Urban Fantasy# Childrens# Middle Grade", "9780000000000", "English", 1032, 171 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1000, 1001, "Tales of H.P. Lovecraft", "Tales of H.P. Lovecraft", "Horror# Fiction# Short Stories# Classics# Fantasy# Science Fiction# Gothic# Literature# Weird Fiction# Lovecraftian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 1001 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1001, 632, "Invisible Cities", "Invisible Cities", "Fiction# Classics# Fantasy# Short Stories# Magical Realism# Italian Literature# Literature# Italy# Architecture# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 1002 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1002, 1003, "A Darker Shade of Magic", "A Darker Shade of Magic", "King George III (UK)# Kell Maresh# Rhy Maresh# Holland Vosijk# Maxim Maresh# Emira Maresh# Astrid Dane# Athos Dane# Tieren Serense# Delilah Lila Bard", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adult# Audiobook# Adventure# Historical Fiction# Science Fiction Fantasy# Urban Fantasy", "9780000000000", "English", 400, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1003, 1004, "\"Everything", "\"Everything", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.05", " David Yoon (Goodreads Author) (Illustrations)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1004, 210, "Timeline", "Timeline", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Thriller# Time Travel# Historical Fiction# Fantasy# Adventure# Historical# Science Fiction Fantasy# Suspense", "9780000000000", "English", 489, 198 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1005, 1006, "This Present Darkness", "This Present Darkness", "Marshall Hogan# Bernie# Tal# Hank Busche", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Christian Fiction# Christian# Fantasy# Thriller# Religion# Spirituality# Christianity# Faith# Supernatural", "9780000000000", "English", 376, 1006 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1006, 1007, "\"Go", "\"Go", "Childrens# Picture Books# Fiction# Classics# Animals# Dogs# Kids# Juvenile# Poetry# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 1007 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1007, 1008, "Practical Magic", "Practical Magic", "Sally Owens# Gillian Owens# Antonia Owens# Kylie Owens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Magical Realism# Romance# Witches# Magic# Paranormal# Chick Lit# Adult# Adult Fiction", "9780000000000", "English", 286, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1008, 416, "Blue Moon", "Blue Moon", "Ever Bloom# Damen Auguste# Roman# Miles# Haven Turner# Misa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Magic# Urban Fantasy# Teen", "9780000000000", "English", 284, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1009, 1010, "\"Life", "\"Life", "Science Fiction# Fiction# Humor# Fantasy# Comedy# Science Fiction Fantasy# Classics# Audiobook# Adventure# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1010, 123, "For One More Day", "For One More Day", "Charley Chick Benetto# Pauline Posey Benetto# Maria Benetto (nee Lang)# Catherine Benetto# Leonard Len Benetto", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Inspirational# Contemporary# Adult# Adult Fiction# Novels# Family# Fantasy# Drama# Self Help", "9780000000000", "English", 197, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1011, 1012, "Tropic of Cancer", "Tropic of Cancer", "Fiction# Classics# Literature# Novels# American# Banned Books# Erotica# 20th Century# Literary Fiction# France", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.68", 0, 1012 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1012, 232, "Till We Have Faces", "Till We Have Faces", "Psyche (mythology)# Orual", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Classics# Mythology# Christian# Religion# Christianity# Literature# Christian Fiction# Philosophy", "10000000000000", "English", 313, 1013 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1013, 1014, "The Absolutely True Diary of a Part-Time Indian", "The Absolutely True Diary of a Part-Time Indian", "Young Adult# Fiction# Contemporary# Realistic Fiction# Humor# Coming Of Age# Teen# School# Audiobook# Cultural", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 1014 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1014, 622, "Bloodfever", "Bloodfever", "MacKayla Lane# Rowena# Dani OMalley# Jericho Barrons# Vlane# Lord Master# Malluce# Derek OBannion# Christian MacKeltar# Inspector Jayne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Fae# Paranormal Romance# Adult# Fiction# Magic# Supernatural", "9780000000000", "English", 303, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1015, 1016, "\"Maus: Un survivant raconte", "\"Maus: Un survivant raconte", "Graphic Novels# Comics# History# Nonfiction# Memoir# Holocaust# Biography# Historical# War# Graphic Novels Comics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "French", "4.35", 0, 1016 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1016, 252, "Awakened", "Awakened", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 1017 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1017, 335, "A Scanner Darkly", "A Scanner Darkly", "Bob Arctor# Donna Hawthorne# Ernie Luckman# Jim Barris# Charles Freck", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Dystopia# Science Fiction Fantasy# Novels# Classics# Cyberpunk# Thriller# Mystery# Crime", "9780000000000", "English", 219, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1018, 1019, "The Way of Shadows", "The Way of Shadows", "Azoth# Durzo Blint# Elene Cromwyll# Jarl# Logan Gyre# Rimbold Drake# Viridiana Sovari# Gwinvere Kirena# Feir Cousat# Dorian Ursuul# Solonariwan Tofusin# Jenine Gyre# Neph Dada", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Magic# High Fantasy# Adventure# Science Fiction Fantasy# Adult# Dark Fantasy# Audiobook", "9780000000000", "English", 645, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1019, 1020, "The Tin Drum", "The Tin Drum", "Fiction# Classics# German Literature# Historical Fiction# Literature# Germany# Magical Realism# Novels# Nobel Prize# War", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.96", 0, 1020 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1020, 385, "Half-Blood", "Half-Blood", "Leon (Covenant Series)# Caleb (Covenant Series)# Aiden St. Delphi# Deacon St. Delphi# Alexandria Alex Andros# Seth (Covenant Series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Mythology# Paranormal Romance# Urban Fantasy# Supernatural# Greek Mythology# Magic", "9780000000000", "English", 281, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1021, 1022, "Fall on Your Knees", "Fall on Your Knees", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Canada# Literary Fiction# Historical# Novels# Canadian Literature# LGBT# Adult Fiction# Book Club", "9780000000000", "English", 672, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1022, 246, "Winter", "Winter", "Princess Winter# Linh Cinder# Queen Levana# Scarlet Benoit# Ze’ev Wolf Kesley# Emperor Kai# Carswell Thorne# Iko# Crescent Moon Cress Darnel# Jacin Clay# Linh Adri# Linh Pearl", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction# Romance# Retellings# Dystopia# Fiction# Fairy Tales# Audiobook# Adventure", "9780000000000", "English", 827, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1023, 1024, "The Immortal Life of Henrietta Lacks", "The Immortal Life of Henrietta Lacks", "Henrietta Lacks", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Science# History# Biography# Medicine# Audiobook# Book Club# Medical# Biography Memoir# Historical", "9780000000000", "English", 370, 1024 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1024, 1025, "Archer's Voice", "Archer's Voice", "Archer Hale# Bree Prescott", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Adult# Disability# Fiction# Abuse# Drama# Erotica", "9780000000000", "English", 345, 1025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1025, 1026, "Momo", "Momo", "Momo# Beppo Roadsweeper# Master Hora# Cassiopeia# Guido Guide# Men in Grey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Classics# Childrens# German Literature# Young Adult# Novels# Middle Grade# Literature# Adventure", "9780000000000", "German", 304, 1026 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1026, 1027, "A Dirty Job", "A Dirty Job", "Charlie Asher# Minty Fresh# Ray Macy# Jane Asher", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Humor# Fiction# Fantasy# Comedy# Paranormal# Urban Fantasy# Audiobook# Horror# Supernatural# Adult", "9780000000000", "English", 387, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1027, 385, "Origin", "Origin", "Daemon Black# Blake Saunders# Dawson Black# Bethany Williams# Archer (Lux Series)# Luc (Lux Series)# Katy Swartz# Dee Black# Andrew Thompson# Ash Thompson# Matthew Garrison", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Romance# Fantasy# Aliens# Science Fiction# Paranormal Romance# Supernatural# Urban Fantasy# New Adult", "9780000000000", "English", 374, 1028 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1028, 1029, "The Forty Rules of Love", "The Forty Rules of Love", "Rumi# Shams-i Tabrizi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Historical Fiction# Romance# Philosophy# Turkish Literature# Spirituality# Turkish# Literature# Religion", "10000000000000", "English", 354, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1029, 1030, "Switched", "Switched", "Rhys# Willa# Wendy Everly (Trylle)# Finn Holmes (Trylle)# Matt Everly# Elora# Rhiannon (Manks)# Aurora (Trylle)# Oliver (Trylle & Vittra)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Fiction# Urban Fantasy# Paranormal Romance# Magic# Supernatural# Young Adult Fantasy", "9780000000000", "English", 216, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1030, 858, "A Town Like Alice", "A Town Like Alice", "Jean Paget# Joe Harman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# Australia# Romance# War# Historical# World War II# Literature# Novels", "9780000000000", "English", 359, 858 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1031, 1032, "Kushiel's Dart", "Kushiel's Dart", "Phèdre nó Delaunay# Joscelin Verreuil# Melisande Shahrizai# Anafiel Delaunay# Hyacinthe (Jacqueline Carey)# Ysandre de la Courcel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Fiction# Epic Fantasy# Erotica# Adult# Science Fiction Fantasy# High Fantasy# BDSM# LGBT", "9780000000000", "English", 1015, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1032, 1033, "Stones from the River", "Stones from the River", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# World War II# Germany# Holocaust# Historical# War# Literary Fiction# Adult Fiction# Book Club", "9780000000000", "English", 525, 1033 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1033, 1034, "Una Historia de Ayer", "Una Historia de Ayer", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Suspense# Mystery# Drama# Noir# Magical Realism# Spanish Literature# Fiction# Crime", "B00IUPH39I", "English", 75, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1034, 1035, "\"More Than Love", "\"More Than Love", "Drama# Contemporary# Fiction# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B082ZXXN48", "English", "4.31", 0, 942 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1035, 1036, "Journey to the Center of the Earth", "Journey to the Center of the Earth", "Axel# Otto Liedenbrock# Hans Bjelke# Gräuben", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Science Fiction# Fiction# Adventure# Fantasy# France# Literature# Novels# Audiobook# 19th Century", "9780000000000", "English", 240, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1036, 281, "Inkspell", "Inkspell", "Fantasy# Young Adult# Fiction# Childrens# Middle Grade# Adventure# Magic# Books About Books# Young Adult Fantasy# German Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.91", 0, 1037 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1037, 1038, "The Complete Persepolis", "The Complete Persepolis", " Anjali Singh (Translator", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Part 2)", " Blake Ferris (Translator", " Part 1)", 0, 230 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1038, 1039, "Zorba the Greek", "Zorba the Greek", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.07", " Nikos Kazancakis\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1039, 1040, "The Turn of the Screw", "The Turn of the Screw", "Flora (Turn of the Screw)# Miles (Turn of the Screw)# Mrs. Grose# Peter Quint# Miss Jessel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Horror# Fiction# Gothic# Mystery# Literature# 19th Century# Ghosts# Audiobook# Paranormal", "9780000000000", "English", 121, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1040, 29, "Lady Midnight", "Lady Midnight", "Livia Blackthorn# Arthur Blackthorn# Helen Blackthorn# Tiberius Blackthorn# Aline Penhallow# Emma Cordelia Carstairs# Julian Atticus Blackthorn# Mark Blackthorn# Cristina Rosales# Drusilla Blackthorn# Octavius Blackthorn# Ariadne Blackthorn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Urban Fantasy# Young Adult Fantasy# Fiction# Magic# Angels# Vampires", "9780000000000", "English", 698, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1041, 638, "The Crying of Lot 49", "The Crying of Lot 49", "Oedipa Maas# Pierce Inverarity# Wendell Mucho Maas# Stanley Koteks", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# American# Mystery# Literary Fiction# 20th Century# Contemporary# The United States Of America", "9780000000000", "English", 152, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1042, 237, "Forever", "Forever", "Grace Brisbane# Sam  Roth# Cole St. Clair# Isabel Culpeper# Geoffrey Beck# Olivia Marx", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Werewolves# Fiction# Paranormal Romance# Supernatural# Urban Fantasy# Wolves", "10000000000000", "English", 390, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1043, 1044, "Jaws", "Jaws", "Chief Martin Brody# Sam Quint# Matt Hooper# Ellen Brody# Mayor Larry Vaughn# Christine Chrissie Watkins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Classics# Suspense# Adventure# Mystery# Drama# Novels# Animals", "9780000000000", "English", 320, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1044, 1045, "\"Dodging Satan: My Irish/Italian", "\"Dodging Satan: My Irish/Italian", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.31", "Kathleen Zamboni McCormick (Goodreads Author)", " Childhood\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1045, 1046, "Starcrossed", "Starcrossed", "Helen Hamilton# Lucas Delos# Jerry Hamilton# Claire Aoki# Kate Rogers# Hector Delos# Jason Delos# Ariadne Delos# Cassandra Delos# Gretchen Clifford# Zach Brant# Matt Millis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mythology# Romance# Paranormal# Greek Mythology# Paranormal Romance# Supernatural# Urban Fantasy# Fiction", "9780000000000", "English", 487, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1046, 1047, "Outliers: The Story of Success", "Outliers: The Story of Success", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Business# Self Help# Sociology# Science# Audiobook# Personal Development# Economics# Leadership", "9780000000000", "English", 309, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1047, 474, "The Waves", "The Waves", "Susan# Bernard# Louis# Neville# Rhoda# Jinny# Percival", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Novels# British Literature# 20th Century# Literary Fiction# Poetry# Modern Classics# English Literature", "9780000000000", "English", 297, 474 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1048, 45, "And the Mountains Echoed", "And the Mountains Echoed", "Julien# Abdullah# Pari# Suleiman Wahdati# Nila Wahdati# Nabi# Parwana# Saboor# Timur Bashiri# Idris Bashiri# Masooma# Eric Lacombe# Markos Varvaris# Thalia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Contemporary# Adult# Adult Fiction# Novels# Book Club# Literary Fiction# Historical# Drama", "9780000000000", "English", 404, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1049, 1050, "Ubik", "Ubik", "9790000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Spanish", "4.08", " Manuel Espín (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1050, 1051, "The Decameron", "The Decameron", "Classics# Fiction# Short Stories# Literature# Italian Literature# Italy# Medieval# Historical Fiction# 14th Century# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.88", 0, 1051 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1051, 1052, "The Color of Water: A Black Man's Tribute to His White Mother", "The Color of Water: A Black Man's Tribute to His White Mother", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# African American# Race# Biography Memoir# School# Autobiography# Book Club# Classics", "9780000000000", "English", 291, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1052, 1053, "Brave New World / Brave New World Revisited", "Brave New World / Brave New World Revisited", "Classics# Fiction# Science Fiction# Dystopia# Literature# Novels# Fantasy# Philosophy# Science Fiction Fantasy# Politics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 1053 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1053, 1054, "Before I Go to Sleep", "Before I Go to Sleep", "Ben# Christine Lucas# Dr. Nash# Clare", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Mystery Thriller# Crime# Psychological Thriller# Adult# Contemporary# Adult Fiction", "9780000000000", "English", 359, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1054, 1055, "Germinal", "Germinal", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.15", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1055, 58, "Mother Night", "Mother Night", "Howard W. Campbell Jr.", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Literature# War# Novels# Humor# Science Fiction# American# 20th Century", "9780000000000", "English", 282, 58 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1056, 522, "Destined for an Early Grave", "Destined for an Early Grave", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Mencheres# Tate Bradley# Vlad Tepesh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal# Urban Fantasy# Paranormal Romance# Romance# Fantasy# Adult# Fiction# Supernatural# Ghosts", "9780000000000", "English", 355, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1057, 474, "A Room of One's Own", "A Room of One's Own", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Nonfiction# Feminism# Essays# Writing# Philosophy# Literature# Womens# 20th Century# British Literature", "9780000000000", "English", 112, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1058, 1059, "The Tale of Despereaux", "The Tale of Despereaux", "Fantasy# Childrens# Fiction# Middle Grade# Young Adult# Animals# Adventure# Classics# Juvenile# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.04", 0, 1059 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1059, 96, "The Rescue", "The Rescue", "Denise Holton# Taylor McAden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Drama# Love Story", "9780000000000", "English", 352, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1060, 1061, "The Tale of Genji", "The Tale of Genji", "Classics# Fiction# Japan# Japanese Literature# Historical Fiction# Literature# Historical# Asia# Romance# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.72", 0, 1061 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1061, 40, "Chronicle of a Death Foretold", "Chronicle of a Death Foretold", "Fiction# Classics# Magical Realism# Literature# School# Spanish Literature# Novels# Latin American# Latin American Literature# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 1062 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1062, 1063, "Pleasant Day", "Pleasant Day", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Drama# Book Club# Fiction# Novels# Epic", "B07PM8Z18S", "English", 0, 1063 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1063, 1064, "Empire Falls", "Empire Falls", "Miles Roby# Zack Minty# John Voss# Janine Roby# Max Roby# Charlie Mayne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Novels# Literature# Adult Fiction# Book Club# Adult# American# Audiobook", "9780000000000", "English", 483, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1064, 96, "Nights in Rodanthe", "Nights in Rodanthe", "Adrienne Willis# Paul Flanner", new DateTime(2022, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Drama# Novels", "9780000000000", "English", 222, 10 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1065, 112, "Hearts in Atlantis", "Hearts in Atlantis", "The Crimson King# American Law Enforcement# Ted Brautigan# Bobby Garfield# Liz Garfield# Carol Gerber# John Sullivan# Peter Riley# Willie Shearman# Ronnie Malenfant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Short Stories# Thriller# Suspense# Supernatural# Mystery# War# Historical Fiction", "9780000000000", "English", 640, 142 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1066, 1067, "Fallen Too Far", "Fallen Too Far", "Rush Finlay# Blaire Wynn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Young Adult# Chick Lit# Adult# Erotica# Love# Fiction", "B00AOTGI08", "English", 300, 1067 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1067, 1068, "The Beekeeper's Apprentice", "The Beekeeper's Apprentice", "Mary Russell# Inspector Lestrade# Patricia Donleavy# Mrs Hudson (Conan Doyle series)# Mycroft Holmes# Sherlock Holmes (Russell & Holmes series)# Dr. John Watson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Historical Fiction# Historical# Crime# Mystery Thriller# Historical Mystery# Audiobook# Adult# British Literature", "9780000000000", "English", 341, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1068, 1069, "The Quiet American", "The Quiet American", "Fiction# Classics# Historical Fiction# War# Literature# Novels# Asia# British Literature# Literary Fiction# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 1069 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1069, 236, "Red Dragon", "Red Dragon", "Jack Crawford# Will Graham# Francis Dolarhyde# Hannibal Lecter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Crime# Mystery# Suspense# Mystery Thriller# Novels# Drama# Psychological Thriller", "10000000000000", "English", 454, 578 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1070, 1071, "Year of Wonders", "Year of Wonders", "Anna Frith# Michael Mompellion# Elinor Mompellion", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# British Literature# Adult# Book Club# Adult Fiction# Audiobook# Novels# Literature", "9780000000000", "English", 318, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1071, 1072, "Harriet the Spy", "Harriet the Spy", "Harriet M. Welsch# Ole Golly# Simon Sport Rocque# Janie Gibbs", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Fiction# Young Adult# Middle Grade# Classics# Mystery# Realistic Fiction# Juvenile# Kids# Chapter Books", "9780000000000", "English", 300, 126 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1072, 1073, "The Accidental Tourist", "The Accidental Tourist", "Macon Leary# Muriel Pritchett# Sarah Leary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Romance# Novels# Adult Fiction# Literature# American# Classics# Adult", "9780000000000", "English", 352, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1073, 1074, "The Time Quartet Box Set", "The Time Quartet Box Set", "Fantasy# Young Adult# Science Fiction# Fiction# Childrens# Classics# Science Fiction Fantasy# Adventure# Juvenile# Middle Grade", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.35", 0, 1074 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1074, 1075, "The Red Badge of Courage", "The Red Badge of Courage", "Henry Fleming", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# War# Civil War# Literature# Historical# School# Young Adult# American", "9780000000000", "English", 149, 1075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1075, 1076, "Exotic Neurotic", "Exotic Neurotic", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Contemporary# Fiction", "9780000000000", "English", 108, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1076, 1077, "The Day of the Triffids", "The Day of the Triffids", "Bill Masen# Josella Playton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Horror# Post Apocalyptic# Dystopia# Fantasy# Apocalyptic# Science Fiction Fantasy# Novels", "9780000000000", "English", 228, 161 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1077, 371, "The Dragon Reborn", "The Dragon Reborn", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Min Farshaw# Elayne Trakand", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adventure# Epic# Audiobook# Magic# Adult", "9780000000000", "English", 624, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1078, 1079, "The Raven and Other Poems", "The Raven and Other Poems", "Poetry# Classics# Horror# Fiction# Gothic# Short Stories# Fantasy# Literature# American# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 1079 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1079, 548, "The Evolution of Mara Dyer", "The Evolution of Mara Dyer", "Mara Dyer# Noah Shaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Mystery# Supernatural# Fiction# Thriller# Horror# Paranormal Romance", "B007EDOSKY", "English", 545, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1080, 1081, "The Blade Itself", "The Blade Itself", "Logen Ninefingers# Jezal dan Luthar# Ferro Maljinn# The Dogman# Shylo Vitari# Bayaz# Malacus Quai# Ardee West# Collem West# Black Dow# Brother Longfoot# Marshal Burr# Arch Lector Sult# Rudd Threetrees# Harding Grim# Tul Duru# Practical Frost# Practical Severard# Bremer dan Gorst# Calder# son of Bethod# Sand dan Glokta# Bethod", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Dark Fantasy# Audiobook# Adventure# Science Fiction Fantasy# Adult# Magic", "9780000000000", "English", 515, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1081, 112, "Needful Things", "Needful Things", "Leland Gaunt# Brian Rusk# Cora Rusk# Polly Chalmers# Alan Pangborn# Norris Ridgewick# Danforth Keeton# Netitia Cobb# Wilma Jerzyck# Sally Ratcliffe# Lester Pratt# Frank Jewett# Ace Merrill# Sean Rusk# Myrtle Keeton# George T. Nelson# Hugh Priest# Seaton Thomas# Henry Payton# Slopey Dodd# Henry Beaufort", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Fantasy# Supernatural# Mystery# Paranormal# Suspense# Adult# Novels", "9780000000000", "English", 790, 1082 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1082, 43, "The Throne of Fire", "The Throne of Fire", "Bast# Bes# Isis# Anubis# Osiris# Horus (God)# Carter Kane# Sadie Kane# Zia Rashid# Thoth# Khufu# Babi# Ra# Set# Nephthys# Sobek (Death Comes as the End)# Taweret# Nekhbet# Apophis# Vladimir Menshikov# Walt Stone# Khepri# Khnum# Khonsu# Ptah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Young Adult# Fiction# Middle Grade# Adventure# Magic# Childrens# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 452, 171 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1083, 1084, "Batman: The Dark Knight Returns", "Batman: The Dark Knight Returns", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.26", " Lynn Varley (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1084, 61, "Alias Grace", "Alias Grace", "Grace Marks", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Mystery# Historical# Canada# Classics# Literary Fiction# Crime# Literature# Novels", "9780000000000", "English", 468, 1085 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1085, 1086, "On the Jellicoe Road", "On the Jellicoe Road", "Taylor Markham# Jonah Griggs# Chaz Santangelo# Raffy# Ben# Hannah# Tate# Fitz# Jude# Webb# Hannah (Narnie)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Mystery# Romance# Realistic Fiction# Australia# Coming Of Age# Teen# Young Adult Contemporary", "9780000000000", "English", 290, 1086 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1086, 667, "Going Postal", "Going Postal", "Moist von Lipwig# Havelock Vetinari# Adora Belle Dearheart# Mr. Pump# Stanley Howler# Tolliver Groat# Reacher Gilt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Science Fiction# Novels# Adult# High Fantasy", "9780000000000", "English", 394, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1087, 1088, "Hopscotch", "Hopscotch", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.23", " Zofia Chądzyńska (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1088, 96, "The Choice", "The Choice", "Gabby Holland# Travis Parker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Love# Drama# Audiobook", "10000000000000", "English", 325, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1089, 1090, "The Red and the Black", "The Red and the Black", "Classics# Fiction# France# French Literature# Literature# 19th Century# Novels# Historical Fiction# Romance# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.88", 0, 1090 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1090, 1091, "Pretty Little Liars", "Pretty Little Liars", "Aria Montgomery# Emily Fields# Hanna Marin# Alison DiLaurentis# Maya St. Germain# Spencer Hastings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Contemporary# Fiction# Chick Lit# Romance# Teen# Realistic Fiction# Thriller# Drama", "9780000000000", "English", 286, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1091, 1092, "Under the Never Sky", "Under the Never Sky", "Aria# Peregrine Perry# Roar# Cinder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Fantasy# Science Fiction# Fiction# Post Apocalyptic# Adventure# Paranormal# Teen", "9780000000000", "English", 374, 477 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1092, 1093, "The Book of Disquiet: The Complete Edition", "The Book of Disquiet: The Complete Edition", "Bernardo Soares", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Poetry# Classics# Philosophy# Literature# Portugal# Portuguese Literature# Novels# 20th Century# Unfinished", "B06Y3NWTJ9", "English", 433, 1093 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1093, 112, "The Dead Zone", "The Dead Zone", "Johnny Smith# Greg Stillson# Frank Dodd# American Law Enforcement", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Fantasy# Mystery# Suspense# Paranormal# Science Fiction# Supernatural# Novels", "9780000000000", "English", 402, 1094 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1094, 1095, "Stoner", "Stoner", "Fiction# Classics# Literature# Novels# American# Historical Fiction# Literary Fiction# The United States Of America# 20th Century# Americana", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 1095 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1095, 32, "The Complete Anne of Green Gables Boxed Set", "The Complete Anne of Green Gables Boxed Set", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Childrens# Historical Fiction# Romance# Canada# Middle Grade# Historical# Literature", "76783609419", "English", 2088, 1096 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1096, 1097, "\"Love", "\"Love", "Romance# Chick Lit# Contemporary# Fiction# Adult# Young Adult# Contemporary Romance# Adult Fiction# Love# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 1097 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1097, 89, "The Glass Bead Game", "The Glass Bead Game", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.12", " Theodore Ziolkowski (Foreword)\"", " Clara Winston (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1098, 1099, "\"Night World", "\"Night World", "Young Adult# Vampires# Paranormal# Romance# Fantasy# Supernatural# Witches# Paranormal Romance# Magic# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 1099 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1099, 1100, "The Celestine Prophecy", "The Celestine Prophecy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Spirituality# Philosophy# Self Help# New Age# Religion# Fantasy# Inspirational# Adventure# Novels", "10000000000000", "English", 247, 10 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1100, 1101, "Hawaii", "Hawaii", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Classics# Travel# Novels# Epic# American History# Literature# Adult Fiction", "9780000000000", "English", 1136, 314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1101, 1102, "The Gormenghast Novels", "The Gormenghast Novels", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Quentin Crisp (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1102, 281, "Inkdeath", "Inkdeath", "Fantasy# Young Adult# Fiction# Childrens# Adventure# Middle Grade# Magic# Books About Books# German Literature# Young Adult Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 1103 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1103, 332, "The Pelican Brief", "The Pelican Brief", "Darby Shaw# Thomas Callahan# Gavin  Verheek# Gray Grantham# Victor Mattiece", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Suspense# Crime# Legal Thriller# Mystery Thriller# Drama# Novels# Law", "9780000000000", "English", 400, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1104, 202, "Tai-Pan", "Tai-Pan", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# China# Adventure# Asia# Classics# Novels# Literature# Asian Literature", "10000000000000", "English", 734, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1105, 1106, "Bastard Out of Carolina", "Bastard Out of Carolina", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Southern# Coming Of Age# Novels# Literary Fiction# Queer# LGBT# Literature# Contemporary", "9780000000000", "English", 320, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1106, 1107, "The Alchemyst", "The Alchemyst", "Nicholas Flamel# Perenelle Flamel# Josh Newman# Sophie Newman# Sgàthach# the Warrior Maid# Dr. John Dee", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Mythology# Adventure# Urban Fantasy# Middle Grade# Teen# Young Adult Fantasy", "9780000000000", "English", 390, 1107 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1107, 1108, "Halo", "Halo", "Bethany Church# Xavier Woods# Gabriel Church# Ivy Church# Jake Thorn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Angels# Fantasy# Romance# Paranormal# Paranormal Romance# Supernatural# Fiction# Demons# Urban Fantasy", "9780000000000", "English", 485, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1108, 1109, "The Silver Linings Playbook", "The Silver Linings Playbook", "Pat Peoples", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Romance# Adult# Mental Health# Adult Fiction# Audiobook# Mental Illness# Realistic Fiction# Drama", "9780000000000", "English", 289, 1109 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1109, 1110, "Sweet Evil", "Sweet Evil", "Anna (Wendy Higgins)# Kaidan Rowe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Angels# Demons# Paranormal Romance# Supernatural# Urban Fantasy# Fiction", "9780000000000", "English", 447, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1110, 193, "Fifty Shades Trilogy", "Fifty Shades Trilogy", "Anastasia Steele", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# Fiction# BDSM# Adult# Contemporary# Erotic Romance# Contemporary Romance# Chick Lit# Love", "9780000000000", "English", 1859, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1111, 1112, "The Spy Who Came In from the Cold", "The Spy Who Came In from the Cold", "Alec Leamas# Elizabeth Gold# Karl Riemeck# Fiedler# Peter Guillam# George Smiley# Hans-Dieter Mundt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Espionage# Classics# Suspense# Crime# Novels# Mystery Thriller# Drama", "9780000000000", "English", 224, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1112, 5, "Eclipse", "Eclipse", "Edward Cullen# Jacob Black# Bella Swan# Billy Black# Esme Cullen# Alice Cullen# Jasper Hale# Carlisle Cullen# Emmett Cullen# Rosalie Hale# Charlie Swan# Embry Call# Sam Uley# Quil Ateara# Bree Tanner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Vampires# Fiction# Paranormal# Paranormal Romance# Supernatural# Werewolves# Teen", "9780000000000", "English", 629, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1113, 1114, "Les Fleurs du Mal", "Les Fleurs du Mal", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.25", " Richard Howard (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1114, 1115, "Memoirs of Hadrian", "Memoirs of Hadrian", "Historical Fiction# Fiction# Classics# France# Historical# French Literature# Literature# Philosophy# Novels# LGBT", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 1115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1115, 1116, "White Teeth", "White Teeth", "Alfred Archibald Jones# Samad Miah Iqbal# Clara Bowden# Alsana Begum# Irie Ambrosia Jones# Millat Zulfikar Iqbal# Hortense Bowden# Mr Topps# Joyce Chalfen# Marcus Chalfen# Magid Iqbal# Joshua Chalfen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# British Literature# Literature# Adult Fiction# Historical Fiction# Classics# Adult", "9780000000000", "English", 448, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1116, 5, "Breaking Dawn", "Breaking Dawn", "Edward Cullen# Jacob Black# Bella Swan# Esme Cullen# Alice Cullen# Jasper Hale# Emmett Cullen# Rosalie Hale# Charlie Swan# Renesmee Cullen# Seth Clearwater# Leah Clearwater", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Vampires# Fiction# Paranormal# Paranormal Romance# Supernatural# Werewolves# Urban Fantasy", "9780000000000", "English", 756, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1117, 112, "Cujo", "Cujo", "Tad Trenton# Donna Trenton# Vic Trenton# Steve Kemp# Joe Camber# Charity Camber# Brett Camber# Cujo# Roger Breakstone# Gary Pervier# Frank Dodd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Suspense# Animals# Adult# Audiobook# Novels# Fantasy# Dogs", "9780000000000", "Spanish", 432, 1118 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1118, 120, "The Angel's Game", "The Angel's Game", "Fiction# Historical Fiction# Mystery# Fantasy# Spain# Books About Books# Gothic# Magical Realism# Historical# Spanish Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 1119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1119, 859, "Effortless", "Effortless", "Kellan Kyle# Denny Harris# Kiera Allen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Music# College# Young Adult# Adult# Chick Lit# Erotica", "9780000000000", "English", 487, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1120, 1121, "Garden Spells", "Garden Spells", "Emma Clark# Claire Waverley# Sydney Waverley# Tyler Hughes# Evanelle Franklin# Fred Walker# Henry Hopkins# Bay Waverley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Fantasy# Romance# Chick Lit# Magic# Contemporary# Adult# Adult Fiction# Paranormal", "9780000000000", "English", 304, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1121, 497, "The Immortal Rules", "The Immortal Rules", "Allison Sekemoto# Stick# Kanin# Jackal# Zeke Crosse", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Dystopia# Romance# Urban Fantasy# Post Apocalyptic# Supernatural# Fiction", "9780000000000", "English", 485, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1122, 1123, "The Heart of Aleppo: A Story of the Syrian Civil War", "The Heart of Aleppo: A Story of the Syrian Civil War", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Historical Fiction# Historical# Contemporary# Fiction# Inspirational# War# New Adult# Drama# Coming Of Age", "B07D7HQ53C", "English", 252, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1123, 1124, "Chasing the Red Queen", "Chasing the Red Queen", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Contemporary# New Adult# Young Adult# Adult# Romance# Fantasy# Love Story# Book Club", "B079KJFJW8", "", 277, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1124, 32, "Anne of the Island", "Anne of the Island", "Diana Barry# Gilbert Blythe# Anne Shirley# Marilla Cuthbert# Charlie Sloane# Roy Gardner# Priscilla Grant# Stella Maynard# Philippa Gordon# Davy Keith# Dora Keith# Rachel Lynde# Billy Andrews# Jane Andrews# Ruby Gillis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Romance# Historical# Canada# Audiobook# Middle Grade", "9780000000000", "English", 243, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1125, 438, "Losing Hope", "Losing Hope", "Dean Holder# Lindon Sky Davis# Hope# Sky Davis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# Fiction# Abuse# High School# Drama# Chick Lit", "B00BOVFKOK", "English", 321, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1126, 19, "Villette", "Villette", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.77", " A.S. Byatt (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1127, 1128, "Magic Bites", "Magic Bites", "Kate Daniels# Curran Lennart# Beatrice Aunt B# Derek Gaunt# Jim Shrapshire# Saiman# Dr. George Doolittle# Mahon Delany# Ghastek# Rowena (People)# Ted Moynohan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Magic# Romance# Paranormal Romance# Fiction# Adult# Shapeshifters", "10000000000000", "English", 261, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1128, 509, "The Selfish Gene", "The Selfish Gene", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science# Nonfiction# Biology# Evolution# Philosophy# Psychology# Popular Science# Genetics# Audiobook# Atheism", "9780000000000", "English", 360, 1129 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1129, 1130, "\"Missing Wings: Chronicles of the Aranysargas (Aranysargas", "\"Missing Wings: Chronicles of the Aranysargas (Aranysargas", "Epic# Contemporary# Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.33", 0, 1130 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1130, 385, "Wait for You", "Wait for You", "Avery Morgansten# Cameron Hamilton# Teresa Hamilton# Jase Winstead# Jacob Massey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Romance# Contemporary# College# Contemporary Romance# Young Adult# Abuse# Chick Lit# Fiction# Adult", "10000000000000", "English", 332, 1131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1131, 131, "Rant", "Rant", "Buster Casey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Horror# Contemporary# Novels# Time Travel# Humor# Adult Fiction# American# Thriller", "9780000000000", "English", 320, 1132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1132, 1133, "The Princess Diaries", "The Princess Diaries", "Mia Thermopolis# Lilly Moscovitz# Helen Thermopolis# Frank Gianini# Michael Moscovitz# Grandmère Clarisse Renaldo# Tina Hakim Baba", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Fiction# Chick Lit# Contemporary# Teen# Childrens# Humor# Realistic Fiction# High School", "9780000000000", "English", 283, 1133 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1133, 1134, "الحرافيش", "الحرافيش", "Fiction# Novels# Literature# Egypt# Classics# Africa# Historical Fiction# Egyptian Literature# 20th Century# Media Tie In", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "Arabic", "4.37", 0, 1134 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1134, 1135, "The Octunnumi Fosbit Files Prologue", "The Octunnumi Fosbit Files Prologue", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Fantasy# Adventure# Young Adult# New Adult# Adult# Contemporary# Science Fiction Fantasy# Middle Grade", "9780000000000", "English", 520, 1135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1135, 32, "The Blue Castle", "The Blue Castle", "Valancy Stirling# Barney Snaith", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Romance# Historical Fiction# Young Adult# Historical# Canada# Historical Romance# Adult# Adult Fiction", "9780000000000", "English", 218, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1136, 661, "The French Lieutenant's Woman", "The French Lieutenant's Woman", "Sarah Woodruff# Charles Smithson# Ernestina Freeman# Sam Farrow# Dr Grogan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Romance# Historical# Literature# British Literature# Novels# Literary Fiction# 20th Century", "9780000000000", "English", 470, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1137, 1138, "El Diablo", "El Diablo", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Romance# Contemporary# Contemporary Romance# Erotica# Suspense# Abuse# Adult# New Adult# Crime", "10000000000000", "English", 469, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1138, 1139, "\"America's Daughter (Dancing Soul Trilogy", "\"America's Daughter (Dancing Soul Trilogy", "Fiction# Contemporary# Drama# Epic# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B074SW7R4K", "English", "4.3", 0, 1139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1139, 1140, "Arrangement in Black and White", "Arrangement in Black and White", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Adult# Novels# Book Club# New Adult# Drama# Love Story# Romance# Thriller", "9780000000000", "", 368, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1140, 1141, "Cross My Heart and Hope to Spy", "Cross My Heart and Hope to Spy", "Liz Sutton# Macey McHenry# Rebecca Bex Baxter# Zachary Goode# Cammie Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Mystery# Contemporary# Fiction# Espionage# Adventure# Chick Lit# Teen# Action", "9780000000000", "English", 236, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1141, 1142, "The Tenant of Wildfell Hall", "The Tenant of Wildfell Hall", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.96", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1142, 1143, "Naked in Death", "Naked in Death", "Eve Dallas# Roarke# Ryan Feeney# Charlotte Mira# Commander Jack Whitney# Mavis Freestone# Nadine Furst# Lawrence Charles Summerset# Charles Monroe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Romance# Crime# Fiction# Romantic Suspense# Suspense# Science Fiction# Thriller# Futuristic# Mystery Thriller", "10000000000000", "English", 306, 1143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1143, 431, "Max", "Max", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Fang# Ari", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Romance# Paranormal# Action# Teen# Dystopia", "9780000000000", "English", 309, 1144 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1144, 365, "Beautiful Darkness", "Beautiful Darkness", "Young Adult# Fantasy# Paranormal# Romance# Magic# Fiction# Supernatural# Witches# Paranormal Romance# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 187 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1145, 384, "The Satanic Verses", "The Satanic Verses", "Gibreel Farishta# Saladin Chamcha", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Classics# India# Fantasy# Literature# Religion# Novels# Contemporary# Literary Fiction", "9780000000000", "English", 561, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1146, 1147, "Metamorphoses", "Metamorphoses", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.06", " Denis Feeney (Contributor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1147, 1148, "\"Alexander and the Terrible", "\"Alexander and the Terrible", "4.23", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Ray Cruz (Illustrator)", "\"Judith Viorst", " Very Bad Day\"", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1148, 1149, "A New Earth: Awakening to Your Life's Purpose", "A New Earth: Awakening to Your Life's Purpose", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Spirituality# Self Help# Philosophy# Psychology# Personal Development# Inspirational# Religion# Audiobook# New Age", "9780000000000", "English", 316, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1149, 1150, "City of Thieves", "City of Thieves", "Lev Beniov# (Kolya)  Nikolai Alexandrovich Vlasov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# War# Russia# Historical# World War II# Audiobook# Adventure# Adult# Adult Fiction", "9780000000000", "English", 258, 530 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1150, 1151, "Stolen: A Letter to My Captor", "Stolen: A Letter to My Captor", "Gemma Toombs# Ty MacFarlane", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Romance# Realistic Fiction# Thriller# Mystery# Australia# Teen# Dark", "9780000000000", "English", 304, 1151 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1151, 65, "Fall of Giants", "Fall of Giants", "Billy Williams# Ethel Williams# Earl Fitzherbert# Grigori Peshkov# Gus Dewar# Lady Maud Fitzherbert# Lev Peshkov# Walter von Ulrich# Grigori Sergeivich Peshkov# Maud Fitzherbert# Johnny Ponti# Teddy Williams# Michail Pinsky# Bea Fitzherbert# Natty Rothschild# Suzanne von Ulrich# Spirya# Khabalov# Madame Caillaux# Nikolai Sokolov# Owen Bevin# William Tyrrell# Boldyrev# Father Gapon# Duke Mikhail# David Crampton# Brusilov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# War# Audiobook# Adult# Novels# World War I# Epic# Russia", "9780000000000", "English", 985, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1152, 1153, "Just So Stories", "Just So Stories", "Stute fish# Mariner# Rhinoceros# Ethiopian# Elephants Child# Aunt Ostrich# Uncle Giraffe# Aunt Hippopotamus# Uncle Baboon# Kolokolo Bird# Bi-Colored-Python-Rock-Snake# Kangaroo# Old Man Kangaroo# Tired Old Kangaroo# Dingo—Yellow-Dog# Tired-Dog# Poor-Dog# Nqong# Stickly-Prickly Hedgehog# Slow-Solid Tortoise# Painted Jaguar# All-the-Turtle-there-was# Man# aka Son of Adam# Pau Amma# Little girl-daughter# Wild Man# Wild Dog# Wild Horse# Wild Cow# Wild Cat# Solomon the Son of David# aka The Most Wise Sovreign Suleiman-bin-Daoud# The Most Beautiful Queen Balkis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Short Stories# Childrens# Fantasy# Animals# Young Adult# Literature# British Literature# Juvenile", "9780000000000", "English", 210, 718 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1153, 1154, "Old Yeller", "Old Yeller", "Old Yeller (Dog)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Childrens# Animals# Historical Fiction# Dogs# Middle Grade# School# Realistic Fiction", "9780000000000", "English", 132, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1154, 1155, "Quo Vadis", "Quo Vadis", "Classics# Historical Fiction# Fiction# Polish Literature# Historical# Literature# Religion# Romance# Christian# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 1155 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1155, 1156, "Broken Promises (Past Imperfect Mystery Book 1)", "Broken Promises (Past Imperfect Mystery Book 1)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Young Adult# Novels# New Adult# Adult# Drama# Romance# Mystery# Love Story", "B07D25X94W", "English", 229, 1156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1156, 667, "Guards! Guards!", "Guards! Guards!", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Cut Me Own Throat Dibbler# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# The Librarian# Lupine Wonse# Fred Colon", new DateTime(2022, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Humor# Comedy# Dragons# Science Fiction Fantasy# Audiobook# Magic# Novels# High Fantasy", "9780000000000", "English", 376, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1157, 983, "The Present", "The Present", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Dystopia# Fiction# Cyberpunk# Action# British Literature# Young Adult# Fantasy# Post Apocalyptic# Thriller", "9780000000000", "English", 200, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1158, 1134, "أولاد حارتنا", "أولاد حارتنا", "Fiction# Novels# Classics# Literature# Egypt# Africa# Historical Fiction# Nobel Prize# Religion# Philosophy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Arabic", "4.11", 0, 1159 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1159, 1160, "Something Borrowed", "Something Borrowed", "Hillary# Rachel White# Darcy Rhone# Dex Thaler# Ethan Ainsley# Marcus Church", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Contemporary# Adult# Contemporary Romance# Adult Fiction# Audiobook# Womens Fiction# Novels", "9780000000000", "English", 322, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1160, 1161, "Born at Midnight", "Born at Midnight", "Della# Derek# Lucas Ross# Miranda# Kylie Galen# Burnet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Vampires# Romance# Werewolves# Supernatural# Paranormal Romance# Magic# Witches", "9780000000000", "English", 398, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1161, 1162, "A Man Called Ove", "A Man Called Ove", "Fiction# Contemporary# Audiobook# Humor# Book Club# Adult# Adult Fiction# Sweden# Novels# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 1162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1162, 343, "Elantris", "Elantris", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Adult# Science Fiction Fantasy# Audiobook# Magic# Romance# Science Fiction", "9780000000000", "English", 638, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1163, 1164, "Gilead", "Gilead", "John Ames# Reverend Robert Boughton# Jack Boughton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Religion# Novels# Literary Fiction# Literature# Contemporary# Audiobook# American# Classics", "9780000000000", "English", 247, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1164, 238, "Extras", "Extras", "David Strorm# Tally Youngblood# Shay# Andrew Simpson Smith# Aya Fuse# Eden Maru# Hiro Fuse# Ren Machino# Frizz Mizuno# Fausto# Udzir", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Romance# Teen# Adventure# Post Apocalyptic# Futuristic", "9780000000000", "English", 417, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1165, 1166, "Ragtime", "Ragtime", "Emma Goldman# Evelyn Nesbit# Coalhouse Walker# J.P. Morgan# Henry Ford# Harry Houdini", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# Novels# Literature# Historical# American# Literary Fiction# New York# 20th Century", "9780000000000", "English", 320, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1166, 1167, "Perdido Street Station", "Perdido Street Station", "Lin# Isaac Dan der Grimnebulin# Yagharek# Mr. Motley# Derkhan Blueday# Lemuel Pigeon# Bentham Rudgutter# Construct Council", new DateTime(2022, 8, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Science Fiction# Steampunk# Urban Fantasy# Horror# Science Fiction Fantasy# New Weird# Weird Fiction# Speculative Fiction", "9780000000000", "English", 623, 1167 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1167, 848, "The Blue Sword", "The Blue Sword", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Adventure# Magic# Young Adult Fantasy# High Fantasy# Science Fiction Fantasy# Childrens", "9780000000000", "English", 256, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1168, 657, "The Sky Is Everywhere", "The Sky Is Everywhere", "Lennie Walker# Joe Fontaine# Gram# Toby Shaw# Bailey Walker# DougFred Fontaine# Marcus Fontaine", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Realistic Fiction# Young Adult Contemporary# Music# Death# Teen# Chick Lit", "9780000000000", "English", 275, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1169, 1170, "\"The Diamond Age: Or", "\"The Diamond Age: Or", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.17", " Pedro Jorge Romero (Goodreads Author) (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1170, 1171, "The Complete Fairy Tales", "The Complete Fairy Tales", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.28", " Hans Richter (Illustrator)\"", " Arthur Rackham (Illustrator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1171, 1172, "\"The Life and Opinions of Tristram Shandy", "\"The Life and Opinions of Tristram Shandy", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.74", " Christopher Ricks (Introduction)\"", " Melvyn New (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1172, 213, "Rapture", "Rapture", "Lucinda Price# Daniel Grigori# Cameron Cam Briel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Angels# Romance# Paranormal# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Teen", "B005OCYQDQ", "English", 466, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1173, 668, "What Is the What", "What Is the What", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Africa# Historical Fiction# War# Contemporary# Sudan# Novels# Literature# Book Club# Historical", "9780000000000", "English", 475, 1174 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1174, 131, "Haunted", "Haunted", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Short Stories# Contemporary# Thriller# Novels# Adult# Dark# Mystery# American", "9780000000000", "English", 419, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1175, 986, "Iron Kissed", "Iron Kissed", "Adam Hauptman# Samuel Cornick# Zee (Siebold Adelbertsmiter)# Mercy Thompson# Jesse Hauptman# Darryl Zao# Warren Smith# Honey Jorgenson# Kyle Brooks# Uncle Mike# Gabriel Sandoval# Gray Lords# Ben Shaw# Tim", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Werewolves# Vampires# Paranormal Romance# Shapeshifters# Fiction# Fae", "9780000000000", "English", 287, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1176, 1047, "The Tipping Point: How Little Things Can Make a Big Difference", "The Tipping Point: How Little Things Can Make a Big Difference", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Business# Psychology# Sociology# Science# Self Help# Economics# Audiobook# Leadership# Philosophy", "9780000000000", "English", 301, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1177, 1178, "Illuminae", "Illuminae", "Science Fiction# Young Adult# Romance# Fiction# Fantasy# Audiobook# Dystopia# Space# Adventure# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.28", 0, 1090 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1178, 1179, "Three Men in a Boat", "Three Men in a Boat", "Jerome K. Jerome# William Samuel Harris# Montmorency# George (Three men)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Humor# Comedy# Travel# British Literature# 19th Century# Literature# Adventure# Audiobook", "10000000000000", "English", 185, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1179, 75, "An Echo in the Bone", "An Echo in the Bone", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Jeremiah MacKenzie# Fergus Fraser# Marsali Fraser# Germain Fraser# Ian Murray# Tom Christie# Lord John Grey# Benedict Arnold# Claire Randall Fraser# Jenny Murray# Young Ian Murray# William Ransom# Rachel Hunter# Denzell Hunter# William Buccleigh MacKenzie# Amanda MacKenzie# Lizzie Wemyss# Jo Beardsley# Kezzie Beardsley# Laoghaire MacKenzie# Joan MacKimmie# Michael Murray", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Fiction# Fantasy# Time Travel# Historical# Historical Romance# Audiobook# Adult# Scotland", "9780000000000", "English", 1149, 635 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1180, 1181, "An American Tragedy", "An American Tragedy", "Classics# Fiction# Literature# American# Historical Fiction# Novels# Banned Books# Crime# 20th Century# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 1181 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1181, 907, "Tiger's Voyage", "Tiger's Voyage", "Kishan# Kelsey Hayes# Dhiren# Mr. Kadam# Wes# Nilima Mehta", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Mythology# Paranormal# Magic# Adventure# Fiction# Dragons# Urban Fantasy", "9780000000000", "English", 560, 730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1182, 438, "It Ends with Us", "It Ends with Us", "Ryle Kincaid# Atlas Corrigan# Lily Bloom", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# New Adult# Fiction# Contemporary Romance# Adult# Abuse# Chick Lit# Audiobook# Young Adult", "B0176M3U10", "English", 385, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1183, 574, "Ink Exchange", "Ink Exchange", "Aislinn# Leslie# Irial# Niall", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Urban Fantasy# Fairies# Fae# Fiction# Paranormal Romance# Supernatural", "9780000000000", "English", 325, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1184, 1185, "Fantastic Beasts and Where to Find Them", "Fantastic Beasts and Where to Find Them", "Fantasy# Fiction# Young Adult# Magic# Childrens# Audiobook# Middle Grade# Short Stories# Science Fiction Fantasy# Dragons", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 597 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1185, 1186, "The House of the Scorpion", "The House of the Scorpion", "El Patron# Tam Lin# Maria Mendoza# Chacho# Fidelito# Ton-Ton", new DateTime(2022, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Science Fiction# Dystopia# Fiction# Fantasy# Teen# Adventure# School# Middle Grade# Childrens", "9780000000000", "English", 380, 1186 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1186, 66, "The Waste Lands", "The Waste Lands", "Fantasy# Fiction# Horror# Science Fiction# Adventure# Westerns# Audiobook# Science Fiction Fantasy# Post Apocalyptic# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 1187 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1187, 498, "The Pandarus File", "The Pandarus File", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Drama# Novels# Contemporary# Thriller# Mystery# Suspense# Epic# Adult# Adventure", "9780000000000", "English", 348, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1188, 1189, "Darkness at Noon", "Darkness at Noon", "Fiction# Classics# Historical Fiction# Politics# Russia# Literature# Novels# Dystopia# 20th Century# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.04", 0, 449 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1189, 1190, "Black Like Me", "Black Like Me", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Memoir# Classics# Biography# Race# African American# Sociology# Autobiography# Biography Memoir", "9780000000000", "English", 208, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1190, 1191, "Cheaper by the Dozen", "Cheaper by the Dozen", "Nonfiction# Classics# Biography# Humor# Memoir# Childrens# Biography Memoir# Autobiography# Family# History", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B00FTOANM2", "English", "4.01", 0, 1191 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1191, 1069, "The End of the Affair", "The End of the Affair", "Fiction# Classics# Romance# Audiobook# Literature# British Literature# Novels# Literary Fiction# Religion# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 1192 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1192, 1193, "Toe to Toe", "Toe to Toe", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Epic# Novels# Fiction# Contemporary", "9780000000000", "", 304, 1193 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1193, 1194, "The Thief Lord", "The Thief Lord", "Scipio Massimo# Prosper Hartlieb# Boniface Hartlieb# Caterina Hornet Grimani# Riccio# Mosca# Ida Spavento# Esther Hartlieb# Victor Getz# Ernesto Barbarossa# Max Hartlieb# Conte# Contessa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Middle Grade# Adventure# Mystery# Historical Fiction# Italy# Juvenile", "9780000000000", "English", 350, 1194 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1194, 43, "The Serpent's Shadow", "The Serpent's Shadow", "Bast# Bes# Anubis# Osiris# Carter Kane# Sadie Kane", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Adventure# Magic# Childrens# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 406, 177 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1195, 1196, "If You Give a Mouse a Cookie", "If You Give a Mouse a Cookie", "Picture Books# Childrens# Fiction# Animals# Humor# Classics# Fantasy# Kids# Food# Storytime", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.26", 0, 221 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1196, 1197, "Diary of a Wimpy Kid", "Diary of a Wimpy Kid", "Greg Heffley# Rodrick Heffley# Manny Heffley# Rowley# Rodrick Heffley# Manny Heffley# Rowley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Childrens# Middle Grade# Young Adult# Realistic Fiction# Graphic Novels# Comedy# Comics# Diary", "9780000000000", "English", 224, 1197 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1197, 1198, "The White Tiger", "The White Tiger", "Balram Halwai# Ashok# Kishan# Kusum# Stork", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# India# Contemporary# Indian Literature# Novels# Literature# Literary Fiction# Asia# Book Club# Crime", "9780000000000", "English", 276, 1198 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1198, 872, "The Fury / Dark Reunion", "The Fury / Dark Reunion", "Klaus# Elena Gilbert# Stefan Salvatore# Damon Salvatore# Matt Honeycutt# Bonnie McCullough# Caroline Forbes# Alaric Saltzman# Katherine von Swartschild# Tyler Lockwood# Meredith Sulez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Teen", "9780000000000", "English", 520, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1199, 1200, "Out of My Mind", "Out of My Mind", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Realistic Fiction# Young Adult# Fiction# Middle Grade# Contemporary# Childrens# Disability# School# Juvenile# Family", "9780000000000", "English", 295, 1186 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1200, 1201, "Hiroshima", "Hiroshima", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Classics# War# Japan# World War II# Historical# Asia# School# Journalism", "9780000000000", "English", 152, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1201, 5, "New Moon", "New Moon", "Edward Cullen# Jacob Black# Bella Swan# Billy Black# Esme Cullen# Alice Cullen# Jasper Hale# Carlisle Cullen# Emmett Cullen# Rosalie Hale# Charlie Swan# Mike Newton# Alec (Twilight Saga)# Jane (Twilight Saga)# Aro (Twilight Saga)# Caius (Twilight Saga)# Marcus (Twilight Saga)# Jessica Stanley# Angela Weber# Embry Call# Sam Uley# Quil Ateara", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Vampires# Fiction# Paranormal# Paranormal Romance# Supernatural# Werewolves# Teen", "10000000000000", "English", 563, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1202, 1203, "The 100-Year-Old Man Who Climbed Out the Window and Disappeared", "The 100-Year-Old Man Who Climbed Out the Window and Disappeared", "Joseph Stalin# Robert Oppenheimer# Harry S. Truman# Charles de Gaulle# Lyndon B. Johnson# Kim Jong-il# Tage Erlander# Kim Il Sung# Lavrentiy Beria# Allan Karlsson# Francisco Franco# Mao Zedong# Julius Jonsson# Benny Ljungberg# Gunilla Björklund# Jiang Qing# Winston Churchill# Soong Mei-ling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Contemporary# Historical Fiction# Audiobook# Adventure# Comedy# Sweden# Book Club# Novels", "B007MB5OCE", "English", 396, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1203, 1204, "The Winter of Our Discontent", "The Winter of Our Discontent", "Classics# Fiction# Literature# American# Novels# Literary Fiction# Classic Literature# 20th Century# Nobel Prize# The United States Of America", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 1204 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1204, 1205, "Among the Hidden", "Among the Hidden", "Jen# Luke Garner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Middle Grade# Childrens# Fantasy# Adventure# School# Teen", "9780000000000", "English", 153, 1205 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1205, 237, "The Dream Thieves", "The Dream Thieves", "Blue Sargent# Richard Dick Campbell Gansey III# Adam Parrish# Ronan Lynch# Noah (The Raven Cycle)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Fiction# Magic# Urban Fantasy# LGBT# Audiobook# Supernatural", "9780000000000", "English", 439, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1206, 1207, "Solaris", "Solaris", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Steve Cox (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1207, 274, "Wintergirls", "Wintergirls", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Realistic Fiction# Mental Health# Mental Illness# Teen# Death# High School# Young Adult Contemporary", "9780000000000", "English", 278, 924 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1208, 1209, "River God", "River God", "Taita# Tanus# Lostris# Menom# Kratas", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Egypt# Fantasy# Adventure# Africa# Thriller# Romance# Mystery", "9780000000000", "English", 664, 293 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1209, 1210, "Pawn of Prophecy", "Pawn of Prophecy", "Garion# Polgara# Belgarath# Layla# Silk# Barak# Fulrach# Anheg# Rhodar# Cho-Hag# Islena# Porenn# Silar# Asharak# Hettar# Durnik# Brill# Greldik# Brand# Merel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Young Adult# Magic# Science Fiction# Epic", "9780000000000", "English", 304, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1210, 831, "Burned", "Burned", "Ethan# Pattyn Von Stratten", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Romance# Realistic Fiction# Abuse# Teen# Religion# Drama", "9780000000000", "English", 431, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1211, 117, "The Dharma Bums", "The Dharma Bums", "Ray Smith# Japhy Ryder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Travel# American# Philosophy# Buddhism# Adventure# Spirituality", "10000000000000", "English", 244, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1212, 1213, "The Scopas Factor", "The Scopas Factor", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Drama# Book Club# New Adult# Adult# Crime# Action# Middle Grade", "9780000000000", "", 326, 1213 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1213, 1214, "A Long Way Gone: Memoirs of a Boy Soldier", "A Long Way Gone: Memoirs of a Boy Soldier", "Ishmael Beah# Musa# Esther# Junior Beah# Talloi# Kanei# Alhaji# Jumah# Moriba# Saidu# Khalilou", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Africa# Biography# War# History# Biography Memoir# Autobiography# School# Sierra Leone", "9780000000000", "English", 229, 1214 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1214, 371, "The Great Hunt", "The Great Hunt", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Min Farshaw# Elayne Trakand# Siuan Sanche# Loial# Thom Merrilin# Padan Fain# Baalzamon# Hurin# Liandrin# Verin Mathwin# Lord Ingtar Shinowa# Bayle Domon# Lanfear# Geofram Bornhald", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Magic# Audiobook# Adult", "9780000000000", "English", 705, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1215, 1216, "Imajica", "Imajica", "Pie Oh Pah# John Furie Zacharias# Judith Estabrook# Quaisoir# Sartori# Hapexamendios# Clara Leash# Dowd# Huzzah# Charles Estabrook# Oscar Godolphin# Celestine# Tishalullé# Jokalaylau# Uma Umagammagi# Tick Raw# Concupiscentia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Horror# Fiction# Dark Fantasy# Science Fiction Fantasy# Science Fiction# Speculative Fiction# Novels# Supernatural# Epic", "9780000000000", "English", 823, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1216, 1217, "Pushing the Limits", "Pushing the Limits", "Echo Emerson# Noah Hutchins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# New Adult# Contemporary Romance# High School# Realistic Fiction# Fiction# Young Adult Romance# Young Adult Contemporary", "9780000000000", "English", 392, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1217, 1218, "The Prime of Miss Jean Brodie", "The Prime of Miss Jean Brodie", "Jean Brodie# Gordon Lowther# Teddy Lloyd# Miss Mackay# Sandy Stranger# Rose Stanley# Mary Macgregor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Scotland# British Literature# Novels# Literature# 20th Century# Modern Classics# Literary Fiction", "9780000000000", "English", 150, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1218, 1219, "The Warded Man", "The Warded Man", "Arlen# Leesha# Rojer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Demons# Adventure# Dark Fantasy# Science Fiction Fantasy# Adult", "9780000000000", "English", 416, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1219, 232, "Mere Christianity", "Mere Christianity", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Nonfiction# Religion# Theology# Christianity# Classics# Philosophy# Faith# Spirituality# Christian Living", "B07F799QGM", "", 168, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1220, 845, "Ham on Rye", "Ham on Rye", "Henry Chinaski# Henry Chinaski# Sr# Katherine Chinaski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# American# Coming Of Age# Contemporary# Poetry# 20th Century# The United States Of America", "9780000000000", "English", 288, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1221, 698, "The Dead Girls' Dance", "The Dead Girls' Dance", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 248, 698 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1222, 413, "Days of Blood & Starlight", "Days of Blood & Starlight", "Karou# Akiva (Daughter of Smoke & Bone)# Zuzana# Mik", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Angels# Urban Fantasy# Fiction# Magic# Young Adult Fantasy# Audiobook", "9780000000000", "English", 517, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1223, 1224, "Milk and Honey", "Milk and Honey", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Feminism# Nonfiction# Contemporary# Adult# Romance# Audiobook# Mental Health# Canada# Womens", "9780000000000", "English", 204, 703 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1224, 215, "China Blues", "China Blues", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Mystery# Fiction# Historical# Mystery Thriller# Historical Mystery# Crime# Literature# Thriller# Novels", "9780000000000", "English", 456, 271 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1225, 728, "Labyrinths: Selected Stories and Other Writings", "Labyrinths: Selected Stories and Other Writings", "Multiple languages", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.46", " André Maurois (preface)\"", " James E. Ir(Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1226, 831, "Impulse", "Impulse", "Tony Daniels# Connor Sykes# Vanessa OReilly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Mental Health# Realistic Fiction# Mental Illness# Teen# Romance# Abuse", "9780000000000", "English", 666, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1227, 797, "Gabriel's Rapture", "Gabriel's Rapture", "Gabriel Emerson# Julianne Mitchell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Erotica# Contemporary# Adult# New Adult# Erotic Romance# College# Fiction# Chick Lit", "9780000000000", "English", 386, 868 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1228, 1229, "Old Man's War", "Old Man's War", "John Perry# Jane Sagan# Harry Wilson# Leon Deak# Jesse Gonzales# Thomas Jane# Alan Rosenthal", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Military Fiction# Science Fiction Fantasy# War# Space# Audiobook# Fantasy# Adventure", "B000SEIK2S", "English", 332, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1229, 131, "Lullaby", "Lullaby", "Carl Streator# Helen Hoover Boyle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Contemporary# Fantasy# Novels# Thriller# Mystery# Dark# American# Adult", "9780000000000", "English", 260, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1230, 1003, "Vicious", "Vicious", "Mitchell Turner# Victor Vale# Eli Cardale# Sydney Clarke# Serena Clarke", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Fiction# Adult# Paranormal# Young Adult# Urban Fantasy# Superheroes# Adult Fiction# Supernatural", "B00CQY7WBI", "English", 366, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1231, 1232, "Need", "Need", "Nick McKenna# Betty# Devyn# Zara White# Issie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Fairies# Werewolves# Paranormal Romance# Fae# Supernatural# Urban Fantasy", "9780000000000", "English", 306, 447 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1232, 1233, "The Crystal Cave", "The Crystal Cave", "Niniane# Merlin# Uther Pendragon# Ralf# Aurelius Ambrosius# Vortigern# Galapas# Cadal# Ygraine# Ulfin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Historical Fiction# Fiction# Arthurian# Historical# Mythology# Science Fiction Fantasy# Classics# Adventure# Magic", "9780000000000", "English", 494, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1233, 748, "The Summer I Turned Pretty", "The Summer I Turned Pretty", "Jeremiah Fisher# Conrad Fisher# Susannah Fisher# Cam Cameron# Isabel Belly Conklin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Fiction# Realistic Fiction# Young Adult Contemporary# Teen# Young Adult Romance# Coming Of Age", "9780000000000", "English", 276, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1234, 1235, "The Scorpio Races", "The Scorpio Races", "Fantasy# Young Adult# Romance# Fiction# Mythology# Audiobook# Young Adult Fantasy# Paranormal# Teen# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.07", 0, 1235 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1235, 1236, "The Cruel Prince", "The Cruel Prince", "Madoc# Taryn Duarte# Jude Duarte# Cardan Greenbriar# Vivienne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fae# Young Adult Fantasy# Fiction# Magic# Audiobook# Fairies# Paranormal", "10000000000000", "English", 370, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1236, 1237, "Who Moved My Cheese?", "Who Moved My Cheese?", "Nonfiction# Self Help# Business# Psychology# Leadership# Personal Development# Management# Philosophy# Inspirational# Buisness", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 1237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1237, 1238, "The Forever War", "The Forever War", "William Mandella# Marygay Potter# Charlie Moore", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# War# Military Fiction# Science Fiction Fantasy# Space Opera# Classics# Time Travel# Space# Speculative Fiction", "9780000000000", "English", 278, 1238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1238, 1239, "The Traitor's Emblem", "The Traitor's Emblem", "Historical Fiction# Fiction# Mystery# Thriller# Historical# Germany# Spanish Literature# Mystery Thriller# Spain# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 1239 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1239, 1240, "The Painted Bird", "The Painted Bird", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# War# Literature# Horror# Holocaust# World War II# Novels# Polish Literature", "9780000000000", "English", 234, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1240, 1241, "Life As We Knew It", "Life As We Knew It", "Miranda Evans# Matt Evans# Jonny Evans# Laura Evans", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Post Apocalyptic# Survival# Apocalyptic# Teen# Fantasy# Audiobook", "10000000000000", "English", 337, 262 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1241, 1141, "Don't Judge a Girl by Her Cover", "Don't Judge a Girl by Her Cover", "Liz Sutton# Macey McHenry# Rebecca Bex Baxter# Zachary Goode# Cammie Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Romance# Contemporary# Espionage# Fiction# Adventure# Chick Lit# Teen# Action", "9780000000000", "English", 263, 143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1242, 61, "Cat's Eye", "Cat's Eye", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Canada# Contemporary# Literary Fiction# Novels# Literature# Feminism# Classics# Coming Of Age# Adult", "9780000000000", "English", 462, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1243, 1244, "Aesop's Fables", "Aesop's Fables", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.05", " Laura Gibbs (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1244, 214, "The Children of Húrin", "The Children of Húrin", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.96", " Alan Lee (artist) (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1245, 700, "Can You Keep a Secret?", "Can You Keep a Secret?", "Artemis (Goddess)# Emma Corrigan# Jack Harper# Connor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Contemporary# Humor# Contemporary Romance# Adult# Adult Fiction# Audiobook# Comedy", "9780000000000", "English", 374, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1246, 1247, "A Good Man is Hard to Find and Other Stories", "A Good Man is Hard to Find and Other Stories", "Tom T. Shiftlet# Lucynell Crater", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Classics# Southern Gothic# Literature# Southern# American# Gothic# Literary Fiction# 20th Century", "9780000000000", "English", 252, 1247 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1247, 1248, "If Tomorrow Comes", "If Tomorrow Comes", "Tracy Whitney# Maximilian# Don Orsatti# Joe Romano", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Romance# Suspense# Crime# Mystery Thriller# Drama# Contemporary# Novels", "9780000000000", "English", 501, 1248 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1248, 1249, "Real", "Real", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Sports# Fighters# Erotica# Adult# Sports Romance# Erotic Romance", "9780000000000", "English", 293, 1249 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1249, 432, "Hollow City", "Hollow City", "Olive Abroholos Elephanta# Fiona Waters# Horace Somnusson# Millard Nullings# Jacob Portman# Emma Bloom# Alma Lefay Peregrine# Bronwyn Bruntley# Enoch OConnor# Hugh Apiston# Claire Densmore", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Paranormal# Historical Fiction# Time Travel# Horror# Mystery# Adventure# Supernatural", "9780000000000", "English", 428, 1250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1250, 1251, "Kissed by an Angel/The Power of Love/Soulmates", "Kissed by an Angel/The Power of Love/Soulmates", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Angels# Fantasy# Paranormal# Mystery# Fiction# Supernatural# Paranormal Romance# Teen", "9780000000000", "English", 690, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1251, 293, "All Things Bright and Beautiful", "All Things Bright and Beautiful", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Animals# Memoir# Biography# Classics# Humor# Autobiography# Biography Memoir# British Literature# Short Stories", "9780000000000", "English", 378, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1252, 1253, "Where the Crawdads Sing", "Where the Crawdads Sing", "Kya Clark# Chase Andrews", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Mystery# Audiobook# Adult# Book Club# Romance# Adult Fiction# Historical# Coming Of Age", "9780000000000", "English", 384, 1253 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1253, 1254, "The Sword of Shannara", "The Sword of Shannara", "Shea Ohmsford# Flick# Allanon# Menion# Balinor# Hendel# Durin# Dayel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adventure# Magic# Young Adult# Adult# Audiobook", "9780000000000", "English", 726, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1254, 168, "The Mayor of Casterbridge", "The Mayor of Casterbridge", "Classics# Fiction# Literature# 19th Century# British Literature# Novels# Victorian# Historical Fiction# Classic Literature# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 1255 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1255, 72, "The Casual Vacancy", "The Casual Vacancy", "Barry Fairbrother# Mary Fairbrother# Howard Mollison# Shirley Mollison# Samantha Mollison# Miles Mollison# Krystal Weedon# Terri Weedon# Colin Cubby Wall# Tessa Wall# Stuart Fats Wall# Andrew Price# Ruth Price# Simon Price# Gavin Hughes# Kay Bawden# Gaia Bawden# Parminder Jawanda# Sukhvinder Jawanda# Vikram Jawanda# Robbie Weedon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Mystery# Adult# Adult Fiction# Drama# Unfinished# British Literature# Novels# Audiobook", "9780000000000", "English", 503, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1256, 26, "Notes from Underground", "Notes from Underground", "4.15", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Fyodor Dostoevsky", " Larissa Volokhonsky (Translator)", " Philip Dossick (Editor)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1257, 371, "The Shadow Rising", "The Shadow Rising", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Min Farshaw# Elayne Trakand# Aviendha# Siuan Sanche", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 1007, 1258 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1258, 1259, "The Manufactured Identity", "The Manufactured Identity", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Psychology# Mystery# Fiction# Mystery Thriller# Thriller# Suspense# Adult# Contemporary# Historical Fiction# Psychological Thriller", "9780000000000", "English", 305, 1259 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1259, 47, "A Storm of Swords: Blood and Gold", "A Storm of Swords: Blood and Gold", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Adult# Adventure# Dragons# Science Fiction Fantasy# Epic# War", "9780000000000", "English", 639, 1260 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1260, 1261, "Killing Floor", "Killing Floor", "Resnick# Jack Reacher", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Crime# Suspense# Mystery Thriller# Action# Audiobook# Adventure# Drama", "9780000000000", "English", 424, 1261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1261, 719, "Freedom", "Freedom", "Walter Berglund# Patty Berglund# Joey Berglund# Jessica Berglund# Richard Katz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# Literature# American# Adult Fiction# Family# Audiobook# Book Club", "9780000000000", "English", 562, 274 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1262, 1263, "A Voice in the Wind", "A Voice in the Wind", "Christian Fiction# Historical Fiction# Christian# Fiction# Romance# Historical# Historical Romance# Christian Romance# Adult# Religion", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.56", 0, 1263 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1263, 351, "Less Than Zero", "Less Than Zero", "Clay (Less Than Zero)# Blair (Less Than Zero)# Kim (Less Than Zero)# Alana (Less Than Zero)# Julian (Less Than Zero)# Trent (Less Than Zero)# Rip (Less Than Zero)# Griffin (Less Than Zero)# Finn (Less Than Zero)# Daniel (Less Than Zero)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# American# Literature# Thriller# Literary Fiction# Classics# 20th Century# The United States Of America", "9780000000000", "English", 208, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1264, 112, "Dolores Claiborne", "Dolores Claiborne", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Mystery# Suspense# Crime# Audiobook# Mystery Thriller# Drama# Adult", "9780000000000", "English", 384, 32 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1265, 497, "The Iron Knight", "The Iron Knight", "Big Bad Wolf# Meghan Chase# Puck# Grimalkin# Ash - Ashallayn Darkmyr Tallyn# The Forgotten# Keirran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fae# Fairies# Magic# Urban Fantasy# Young Adult Fantasy# Fiction", "9780000000000", "English", 400, 1266 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1266, 88, "Vampire Academy Collection", "Vampire Academy Collection", "Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Adrian Ivashkov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Romance# Paranormal Romance# Supernatural# Young Adult Fantasy# Fiction# Urban Fantasy", "9780000000000", "English", 1120, 1267 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1267, 147, "Three Comrades", "Three Comrades", "Classics# Fiction# German Literature# Historical Fiction# War# Germany# Literature# Novels# Historical# Drama", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.49", 0, 1268 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1268, 1101, "Centennial", "Centennial", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Westerns# Classics# Adventure# Epic# Novels# American History# Literature", "10000000000000", "English", 1056, 1269 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1269, 1059, "The Miraculous Journey of Edward Tulane", "The Miraculous Journey of Edward Tulane", "Fantasy# Childrens# Fiction# Middle Grade# Young Adult# Adventure# Animals# Juvenile# Audiobook# Chapter Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.37", 0, 28 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1270, 667, "Reaper Man", "Reaper Man", "Cut Me Own Throat Dibbler# DEATH# The Bursar# The Librarian# Auditors of Reality# Renata Flitworth# Windle Poons# Reg Shoe# Death of Rats# Mustrum Ridcully# Senior Wrangler# Lecturer in Recent Runes# Lupine# Ludmilla Cake# Mrs. Cake# Schleppel# Mr. Ixolite# Fred Colon# Dean (Terry Pratchett)# Azrael (Terry Pratchett)# Arthur Winkings# Doreen Winkings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Death# Magic# Novels# Science Fiction", "9780000000000", "English", 352, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1271, 1272, "Hunger", "Hunger", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.05", " Viki Kärkkäinen (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1272, 89, "Narcissus and Goldmund", "Narcissus and Goldmund", "Philosophy# German Literature# Literature# Novels# Classics# Germany# Historical Fiction# 20th Century# Fiction# Spirituality", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.21", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1273, 531, "Rendezvous with Rama", "Rendezvous with Rama", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Space# Aliens# Novels# Hugo Awards# Audiobook# Speculative Fiction", "9780000000000", "English", 243, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1274, 515, "Entwined with You", "Entwined with You", "Gideon Cross# Eva Tramell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# Contemporary# Contemporary Romance# Adult# Erotic Romance# BDSM# Fiction# New Adult# Chick Lit", "9780000000000", "English", 356, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1275, 672, "Even Cowgirls Get the Blues", "Even Cowgirls Get the Blues", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Novels# Literature# Contemporary# Magical Realism# Literary Fiction# American# Adult# Adult Fiction", "9780000000000", "English", 366, 672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1276, 21, "The Illustrated Man", "The Illustrated Man", "", new DateTime(2022, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Science Fiction# Short Stories# Fiction# Classics# Fantasy# Horror# Science Fiction Fantasy# Literature# Anthologies# American", "9780000000000", "English", 186, 1277 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1277, 1149, "The Power of Now: A Guide to Spiritual Enlightenment", "The Power of Now: A Guide to Spiritual Enlightenment", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Self Help# Nonfiction# Spirituality# Philosophy# Psychology# Personal Development# Audiobook# Religion# Inspirational# Unfinished", "9780000000000", "English", 229, 1278 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1278, 26, "Demons", "Demons", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.28", " Larissa Volokhonsky (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1279, 1280, "Unparalleled", "Unparalleled", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Contemporary# Epic# Suspense# Drama# Science Fiction", "10000000000000", "English", 287, 1280 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1280, 1281, "The Third Policeman", "The Third Policeman", "Fiction# Irish Literature# Ireland# Fantasy# Classics# Humor# Novels# Literature# Mystery# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 28 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1281, 1282, "The Opportunist", "The Opportunist", "Olivia Kaspen# Caleb Drake# Leah Smith# Noah Stein# Cammie Chase", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Adult# Chick Lit# Drama# Fiction# College# Young Adult", "10000000000000", "English", 278, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1282, 1283, "Fathers and Sons", "Fathers and Sons", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.96", " Jane Costlow (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1283, 1284, "Skulduggery Pleasant", "Skulduggery Pleasant", "Fantasy# Young Adult# Mystery# Fiction# Urban Fantasy# Magic# Adventure# Middle Grade# Paranormal# Humor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 1284 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1284, 1138, "Complicate Me", "Complicate Me", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary Romance# Contemporary# College# Young Adult# High School# Coming Of Age# Drama# Adult", "B015BUC1YG", "English", 397, 1285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1285, 1286, "A Suitable Boy", "A Suitable Boy", "Lata Mehra# Rupa Mehra# Savita Mehra# Arun Mehra# Varun Mehra# Pran Kapoor# Maan Kapoor# Amit Chatterji# Meenakshi Mehra (née Chatterji)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# India# Historical Fiction# Indian Literature# Classics# Romance# Historical# Novels# Literary Fiction# Literature", "9780000000000", "English", 1474, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1286, 1287, "The Day of the Jackal", "The Day of the Jackal", "the Jackal# Claude Lebel# Victor Kowalski# Jacqueline Dumas", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Crime# Espionage# Suspense# Historical Fiction# Drama# Mystery Thriller# Novels", "9780000000000", "English", 358, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1287, 1288, "Quiet: The Power of Introverts in a World That Can't Stop Talking", "Quiet: The Power of Introverts in a World That Can't Stop Talking", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Self Help# Science# Business# Audiobook# Personal Development# Sociology# Leadership# Adult", "9780000000000", "English", 333, 1288 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1288, 1289, "The Shadow Girl", "The Shadow Girl", "", new DateTime(2022, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Contemporary# Book Club# Fiction# Novels# Drama# Epic# Fantasy# Young Adult# Mystery", "B078PQ9FPN", "", 300, 1156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1289, 1290, "Heaven is for Real: A Little Boy's Astounding Story of His Trip to Heaven and Back", "Heaven is for Real: A Little Boy's Astounding Story of His Trip to Heaven and Back", "Nonfiction# Christian# Religion# Inspirational# Spirituality# Memoir# Biography# Faith# Christianity# Christian Non Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 494 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1290, 1291, "Midwives", "Midwives", "Sybil Danforth# Connie Danforth", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Adult Fiction# Book Club# Chick Lit# Adult# Mystery# Novels# Historical Fiction# Drama", "10000000000000", "English", 384, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1291, 1292, "\"Eragon", "\"Eragon", "Fantasy# Young Adult# Fiction# Dragons# Magic# Adventure# Science Fiction Fantasy# Epic Fantasy# Childrens# High Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 1292 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1292, 1293, "Cloudy With a Chance of Meatballs", "Cloudy With a Chance of Meatballs", "Picture Books# Childrens# Fiction# Fantasy# Classics# Food# Humor# Kids# Juvenile# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 164 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1293, 1294, "\"Girl", "\"Girl", "Nonfiction# Memoir# Psychology# Mental Health# Mental Illness# Biography# Biography Memoir# Autobiography# Classics# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 1294 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1294, 433, "Crossed", "Crossed", "Cassia Reyes# Ky Markham# Xander Carrow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Fantasy# Teen# Adventure# Audiobook# Post Apocalyptic", "9780000000000", "English", 367, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1295, 1296, "The New York Trilogy", "The New York Trilogy", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.88", " Luc Sante (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1296, 1297, "Wolf Hall", "Wolf Hall", "Anne Boleyn# Thomas More# Catherine of Aragon# Jane Seymour# Mary Boleyn# Thomas Howard# Charles Brandon# 1st Duke of Suffolk# Thomas Wyatt# Hans Holbein the Younger# Francis I of France# Thomas Cromwell# Thomas Cranmer# Walter Cromwell# Morgan Williams# Elizabeth Wykys# Henry Wykys# Johane Williamson# John Williamson# Alice Wellyfed# Bet Cromwell# Rafe Sadler# Thomas Avery# Helen Barre# Dick Purser# Thomas Wolsey# George Cavendish# Stephen Gardiner# Katherine Cromwell# Thomas Boleyn# Henry VIII of England# George Boleyn# Jane Boleyn# Richard Riche# Mary I of England", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# British Literature# Audiobook# Literary Fiction# Unfinished# Literature# Novels# Tudor Period", "9780000000000", "English", 604, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1297, 1298, "Flipped", "Flipped", "Bryce Loski# Julianna Baker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Fiction# Contemporary# Realistic Fiction# Middle Grade# Childrens# Teen# Coming Of Age# Humor", "9780000000000", "English", 212, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1298, 356, "Preludes & Nocturnes", "Preludes & Nocturnes", " Karen Berger (Introduction/Editor)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Todd Klein (Letterer)", " Malcolm Jones III (Illustrator)", " Mike Dringenberg (Illustrator)", 0, 230 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1299, 245, "After Dark", "After Dark", "Fiction# Japan# Japanese Literature# Magical Realism# Contemporary# Novels# Literature# Fantasy# Asia# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.71", 0, 1300 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1300, 1301, "The False Prince", "The False Prince", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Middle Grade# Adventure# Fiction# Young Adult Fantasy# Mystery# Audiobook# Historical Fiction# Childrens", "9780000000000", "English", 342, 1301 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1301, 1302, "Pope Joan", "Pope Joan", "Pope Joan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Religion# Book Club# Medieval# Italy# Adult# Adult Fiction# Womens", "9780000000000", "English", 422, 1302 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1302, 1303, "\"Ahab's Wife", "\"Ahab's Wife", "Fiction# Historical Fiction# Historical# Literature# Adult Fiction# Novels# Literary Fiction# Book Club# Adult# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1303, 1304, "Honor and Polygamy", "Honor and Polygamy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Polygamy", "9780000000000", "", 132, 762 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1304, 1305, "Think and Grow Rich", "Think and Grow Rich", "Business# Self Help# Nonfiction# Finance# Personal Development# Psychology# Money# Personal Finance# Philosophy# Entrepreneurship", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "1788441028", "English", "4.18", 0, 1305 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1305, 1306, "The Invisible Man", "The Invisible Man", "Griffin# Kemp", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Science Fiction# Fiction# Fantasy# Horror# Literature# Audiobook# Novels# Science Fiction Fantasy# 19th Century", "9780000000000", "English", 192, 70 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1306, 1307, "Endurance: Shackleton's Incredible Voyage", "Endurance: Shackleton's Incredible Voyage", "Ernest Shackleton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Adventure# Biography# Travel# Audiobook# Survival# Historical# Leadership# Nature", "9780000000000", "English", 282, 1307 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1307, 604, "The Ask and the Answer", "The Ask and the Answer", "Todd Hewitt# Viola Eade# Mayor Prentiss# 1017# Mistress Coyle# Davy Prentiss# Jr.", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Fantasy# Fiction# Adventure# Teen# Aliens# Romance# War", "9780000000000", "English", 553, 1308 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1308, 1309, "Noughts & Crosses", "Noughts & Crosses", "Callum McGregor# Persephone Sephy Hadley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Fiction# Dystopia# Science Fiction# Fantasy# Contemporary# Teen# Childrens# Race", "9780000000000", "English", 479, 1107 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1309, 1310, "Tell No One", "Tell No One", "Shauna# Elizabeth Parker# David Beck# Hester Crimstein", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Crime# Suspense# Mystery Thriller# Drama# Adult# Novels# Adult Fiction", "9780000000000", "English", 370, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1310, 1311, "The Art of Happiness", "The Art of Happiness", "Nonfiction# Philosophy# Spirituality# Self Help# Buddhism# Psychology# Religion# Personal Development# Inspirational# Biography", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 1204 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1311, 1312, "The Book of Lost Things", "The Book of Lost Things", "David Strorm# Little Red Riding Hood# Seven Dwarves# The Woodsman# The Crooked Man# Jonathan Tulvey# Roland the Soldier# Snow White (John Connolly)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Horror# Fairy Tales# Books About Books# Adventure# Adult# Mystery# Science Fiction Fantasy", "9780000000000", "English", 339, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1312, 1313, "Les Liaisons dangereuses", "Les Liaisons dangereuses", "Classics# Fiction# France# French Literature# Romance# Historical Fiction# Literature# 18th Century# Novels# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.07", 0, 256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1313, 76, "The Storyteller", "The Storyteller", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Holocaust# Historical# Contemporary# Adult Fiction# Adult# World War II# War# Drama", "9780000000000", "English", 461, 1314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1314, 1315, "Grendel", "Grendel", "Beowulf# Grendel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Classics# School# Literature# Mythology# Novels# Read For School# Philosophy# Retellings", "9780000000000", "English", 174, 1315 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1315, 1316, "\"Tomorrow", "\"Tomorrow", "Young Adult# Fiction# Dystopia# Science Fiction# Adventure# War# Survival# Post Apocalyptic# Australia# Teen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 1316 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1316, 1317, "The Brothers K", "The Brothers K", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Baseball# Historical Fiction# Sports# Novels# Literary Fiction# Family# Literature# Classics# Religion", "9780000000000", "English", 645, 314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1317, 1318, "Wallbanger", "Wallbanger", "Caroline Reynolds (aka Pink Nightie Girl)# Simon Parker (aka Wallbanger)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Contemporary Romance# Humor# New Adult# Adult# Chick Lit# Erotica# Fiction# Comedy", "9780000000000", "English", 384, 797 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1318, 1319, "Adhaata Asao's Liege", "Adhaata Asao's Liege", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy", "9790000000000", "English", 174, 1319 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1319, 1320, "The Book of Negroes", "The Book of Negroes", "Aminata Diallo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Canada# Historical# Africa# African American# Adult Fiction# Book Club# Adult# Literature", "9780000000000", "English", 512, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1320, 1321, "Dead Souls", "Dead Souls", "Classics# Fiction# Russia# Russian Literature# Literature# Novels# 19th Century# Historical Fiction# Humor# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 1321 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1321, 1322, "The Boy Who Sneaks in My Bedroom Window", "The Boy Who Sneaks in My Bedroom Window", "Amber Walker# Liam James# Jake Walker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# New Adult# Abuse# High School# Contemporary Romance# Chick Lit# Young Adult Romance# Love", "9780000000000", "English", 242, 703 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1322, 533, "Shadow of Night", "Shadow of Night", "Diana Bishop# Matthew Clairmont# Stephen Proctor# Gallowglass de Clermont# Philippe de Clermont", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Romance# Paranormal# Historical Fiction# Vampires# Witches# Time Travel# Magic# Urban Fantasy", "9780000000000", "English", 584, 1323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1323, 1324, "Quidditch Through the Ages", "Quidditch Through the Ages", "Fantasy# Young Adult# Fiction# Childrens# Magic# Middle Grade# Short Stories# Science Fiction Fantasy# Audiobook# Young Adult Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 681 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1324, 987, "Boy's Life", "Boy's Life", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Mystery# Coming Of Age# Young Adult# Magical Realism# Thriller# Historical Fiction# Adventure", "9780000000000", "English", 580, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1325, 74, "The Death of Ivan Ilych", "The Death of Ivan Ilych", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.08", " Mehmet Özgül (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1326, 11, "Turtles All the Way Down", "Turtles All the Way Down", "Aza Holmes# Davis Pickett# Daisy Ramirez# Mychal Turner# Noah Pickett", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Contemporary# Mental Health# Romance# Audiobook# Realistic Fiction# Mental Illness# Mystery# Teen", "9780000000000", "English", 286, 344 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1327, 986, "Blood Bound", "Blood Bound", "Adam Hauptman# Samuel Cornick# Zee (Siebold Adelbertsmiter)# Mercy Thompson# Jesse Hauptman# Charles Cornick# Darryl Zao# Warren Smith# Honey Jorgenson# Wulfe# Kyle Brooks# Stefan Uccello# Marsilia# Uncle Mike# Gabriel Sandoval# Tony Montenegro# Bran The Marrok Cornick# Ben Shaw# Andre (The Courtier)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Werewolves# Romance# Paranormal Romance# Shapeshifters# Fiction# Supernatural", "9780000000000", "English", 292, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1328, 1329, "Hometown Girl at Heart", "Hometown Girl at Heart", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Romance# Novels# New Adult# Young Adult# Love Story# Contemporary Romance# Adult# Chick Lit", "9780000000000", "English", 321, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1329, 1330, "The Last Wish", "The Last Wish", "Fantasy# Fiction# Short Stories# High Fantasy# Audiobook# Magic# Adult# Adventure# Polish Literature# Epic Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.13", 0, 242 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1330, 1331, "For the Love of Armin", "For the Love of Armin", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Adventure# Novels# New Adult# Historical Fiction# Adult# Young Adult# Historical# Love Story# Romance", "B0728LK7JC", "", 325, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1331, 1128, "Magic Bleeds", "Magic Bleeds", "Kate Daniels# Curran Lennart# Beatrice Aunt B# Derek Gaunt# Jim Shrapshire# Saiman# Dr. George Doolittle# Andrea Nash# Dali Harimau# Raphael Medrano# Mahon Delany# Ghastek# Ted Moynohan# Julie Olsen# Barabas Gilliam", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Magic# Vampires# Paranormal Romance# Shapeshifters# Adult# Werewolves", "9780000000000", "English", 349, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1332, 1333, "Harry Potter and the Cursed Child: Parts One and Two", "Harry Potter and the Cursed Child: Parts One and Two", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.62", " J.K. Rowling\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1333, 1071, "People of the Book", "People of the Book", "Hanna Heath# Ozren Karaman# Serif Kamal# Stela Kamal# Amitai Yomtov# Werner Heinrich# Razmus Kanaha# Dr. Franz Hirschfeldt# Florien Mittl# Giovanni Domenico Vistorini# Judah Aryeh# Sarah Heath# David Ben Shoushan# Ruth Ben Shoushan# Joseph Ben Shoushan# Reuben Ben Shoushan# Rosa del Salvador# Zahra bint Ibrahim al-Tarek# Aaron Sharansky", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Books About Books# Mystery# Book Club# Jewish# Religion# Adult Fiction# Audiobook", "10000000000000", "English", 372, 530 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1334, 1335, "The Cuckoo's Calling", "The Cuckoo's Calling", "Cormoran Strike# Robin Ellacott# Matthew Cunliffe# Lula Landry# John Bristow# Tony Landry# Lady Yvette Landry Bristow# Sir Alec Bristow# Evan Duffield# Freddy Bestigui# Marlene Higson# Jonny Rokeby# Charlotte Campbell# Leda Strike# Eric Wardle# Graham Hardy Hardacre# Linda Ellacott# Detective Inspector Roy Carver", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Thriller# Mystery Thriller# Audiobook# Adult# Contemporary# Detective# Adult Fiction", "9780000000000", "English", 456, 1335 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1335, 604, "Monsters of Men", "Monsters of Men", "Todd Hewitt# Viola Eade# Mayor Prentiss# 1017# The Sky# Mistress Coyle# Ben", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Fantasy# Fiction# Adventure# War# Romance# Teen# Aliens", "9780000000000", "English", 643, 1308 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1336, 1337, "The Constitution of the United States of America", "The Constitution of the United States of America", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Politics# Classics# Philosophy# Law# Reference# American History# Historical# Political Science", "9780000000000", "English", 30, 1337 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1337, 936, "Masquerade", "Masquerade", "Schuyler Van Alen# Mimi Force# Bliss Llewellyn# Jack Force# Oliver Hazard-Perry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Angels# Urban Fantasy# Fiction# Paranormal Romance", "9780000000000", "English", 307, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1338, 1339, "The High Lord", "The High Lord", "Sonea# Rothen# Akkarin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Magic# Young Adult# Fiction# High Fantasy# Romance# Epic Fantasy# Adventure# Science Fiction Fantasy# Audiobook", "9780000000000", "English", 644, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1339, 1340, "Die for Me", "Die for Me", "Kate Beaumont Mercier# Vincent Pierre Henri Delacroix# Georgia Frances Mercier# Jules Marchenoir# Ambrose Bates# Charlotte Violaine Lorieux# Charles Aurelien Lorieux# Gaspard Louis-Marie Tabard# Jean-Baptiste Alexandre Balthazar Grimod de La Reynière# Emilie Mercier# Antoine Mercier# Lucien Philippe Henri Poitevin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Paranormal Romance# Zombies# Supernatural# Urban Fantasy# Fiction# Young Adult Paranormal", "9780000000000", "English", 341, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1340, 1341, "Bird by Bird: Some Instructions on Writing and Life", "Bird by Bird: Some Instructions on Writing and Life", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Writing# Nonfiction# Memoir# Self Help# Reference# Essays# Biography# Humor# Audiobook# Crafts", "9780000000000", "", 237, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1341, 845, "Women", "Women", "Henry Chinaski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# American# Poetry# Contemporary# Thriller# Humor# The United States Of America", "9780000000000", "English", 291, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1342, 22, "Four: A Divergent Story Collection", "Four: A Divergent Story Collection", "Eric (Divergent)# Beatrice Prior# Jeanine Matthews# Marcus Eaton# Tobias Eaton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fiction# Science Fiction# Fantasy# Short Stories# Romance# Novella# Audiobook# Teen", "9780000000000", "English", 208, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1343, 1344, "\"\"\"Surely You're Joking", "\"\"\"Surely You're Joking", "Science# Nonfiction# Biography# Physics# Memoir# Autobiography# Humor# History# Biography Memoir# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "", "4.27", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1344, 986, "Bone Crossed", "Bone Crossed", "Adam Hauptman# Samuel Cornick# Zee (Siebold Adelbertsmiter)# Mercy Thompson# Jesse Hauptman# Darryl Zao# Warren Smith# Wulfe# Kyle Brooks# Stefan Uccello# Marsilia# Elizaveta Arkadyevna Vyshnevetskaya# Uncle Mike# Tony Montenegro# Margi Thompson# Ben Shaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Romance# Werewolves# Paranormal Romance# Shapeshifters# Fiction# Supernatural", "9780000000000", "English", 300, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1345, 220, "The Heir", "The Heir", "Kile Woodwork# Hale Garner# Prince Ahren# Eadlyn Schreave", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Dystopia# Fantasy# Fiction# Audiobook# Science Fiction# Teen# Chick Lit# Young Adult Fantasy", "B00MFYCZ2U", "English", 342, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1346, 656, "Royal Assassin", "Royal Assassin", "Verity Farseer# The Fool# FitzChivalry Farseer# Burrich# Lady Patience# Shrewd# Chade Fallstar# Regal Farseer# Kettricken", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Magic# Adventure# Audiobook# Adult# Epic", "10000000000000", "English", 675, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1347, 1141, "Only the Good Spy Young", "Only the Good Spy Young", "Liz Sutton# Macey McHenry# Rebecca Bex Baxter# Zachary Goode# Cammie Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Romance# Contemporary# Espionage# Fiction# Adventure# Chick Lit# Teen# Action", "9780000000000", "English", 265, 918 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1348, 112, "The Eyes of the Dragon", "The Eyes of the Dragon", "Randall Flagg", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Horror# Young Adult# Science Fiction Fantasy# Dragons# Adventure# Thriller# Audiobook# Novels", "9780000000000", "English", 427, 1349 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1349, 1350, "\"Tinker", "\"Tinker", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.04", "John le Carré", " Spy\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1350, 1351, "The Gathering Storm", "The Gathering Storm", "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Audiobook# Magic# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 1351 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1351, 1352, "Educated", "Educated", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Audiobook# Biography Memoir# Autobiography# Book Club# Adult# Education# Religion", "9780000000000", "English", 334, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1352, 1353, "Archibald Finch and the Lost Witches (Archibald Finch #1)", "Archibald Finch and the Lost Witches (Archibald Finch #1)", "Fantasy# Middle Grade# Childrens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 1353 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1353, 431, "The Final Warning", "The Final Warning", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Fang# Ari", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Paranormal# Romance# Teen# Action# Childrens", "9780000000000", "English", 256, 1354 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1354, 429, "Lola and the Boy Next Door", "Lola and the Boy Next Door", "Lola Nolan# Cricket Bell# Calliope Bell# Anna Oliphant# Étienne St. Clair", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Fiction# Realistic Fiction# Young Adult Contemporary# Contemporary Romance# Young Adult Romance# Teen", "10000000000000", "English", 338, 11 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1355, 1356, "Mrs. Frisby and the Rats of NIMH", "Mrs. Frisby and the Rats of NIMH", "Mrs. Frisby# Nicodemus# Justin.", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Childrens# Fiction# Young Adult# Classics# Animals# Middle Grade# Adventure# Science Fiction# Juvenile", "9780000000000", "English", 240, 1205 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1356, 1357, "Crossing the Seas: A Diary of My Thoughts", "Crossing the Seas: A Diary of My Thoughts", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction", "9780000000000", "", 328, 1357 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1357, 1358, "Big Little Lies", "Big Little Lies", "Celeste White# Madeline Martha Mackenzie# Jane Chapman (Liane Moriarty)# Perry Wright# Ed Mackenzie# Bonnie Carlson# Nathan Carlson# Renata Klein# Gordon Klein# Abigail Carlson# Detective Adrienne Quinlan# Ms. Rebecca Barnes# Tom", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Contemporary# Chick Lit# Audiobook# Adult# Thriller# Mystery Thriller# Adult Fiction# Australia", "9780000000000", "English", 460, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1358, 431, "Kiss the Girls", "Kiss the Girls", "Alex Cross# Kate McTiernan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Suspense# Mystery Thriller# Drama# Detective# Adult# Novels", "9780000000000", "English", 481, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1359, 1360, "The Great Book of Amber", "The Great Book of Amber", "Fantasy# Fiction# Science Fiction# Science Fiction Fantasy# Epic Fantasy# High Fantasy# Epic# Urban Fantasy# Speculative Fiction# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 1360 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1360, 431, "Fang", "Fang", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Ari", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Fiction# Adventure# Romance# Paranormal# Action# Teen# Angels", "9780000000000", "English", 309, 1144 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1361, 368, "Lover Unleashed", "Lover Unleashed", "Butch Brian ONeal# Vishous (Black Dagger)# Jane Whitcomb# Manuel Manny Manello# Payne# Qhuinn# Blaylock# Xcor# Throe# The Scribe Virgin# Wrath (Blind King)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Vampires# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 512, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1362, 256, "Daughter of Fortune", "Daughter of Fortune", "Historical Fiction# Fiction# Historical# Romance# Magical Realism# Novels# Literature# Adult# Adult Fiction# Spanish Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 1363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1363, 1364, "Keeper of the Lost Cities", "Keeper of the Lost Cities", "Sophie Foster", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Adventure# Fiction# Magic# Childrens# Mystery# Young Adult Fantasy# Elves", "9780000000000", "English", 496, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1364, 441, "About a Boy", "About a Boy", "Will Burrows# Fiona Waters# Ellie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Humor# British Literature# Novels# Adult Fiction# Adult# Comedy# Literature# Coming Of Age", "9780000000000", "English", 307, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1365, 1366, "Captive in the Dark", "Captive in the Dark", "Muhammad Rafiq# Olivia Ruiz# Caleb (Captive in the Dark)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Erotica# Romance# BDSM# Adult# Contemporary# Abuse# New Adult# Contemporary Romance# Erotic Romance", "2940000000000", "English", 276, 1366 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1366, 525, "Glass Sword", "Glass Sword", "Kilorn Warren# Gisa Barrow# Tiberias Calore Cal VII# Mare Molly Barrow# Maven Calore# Evangeline Samos# Diana Farley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Fiction# Young Adult Fantasy# Audiobook# Science Fiction# Magic# High Fantasy", "9780000000000", "English", 444, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1367, 1368, "American Pastoral", "American Pastoral", "Nathan Zuckerman# Seymour Levov# Meredith Levov# Jerry Levov# Dawn Dwyer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# American# Literary Fiction# Historical Fiction# Contemporary# Americana# The United States Of America", "9780000000000", "English", 432, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1368, 1216, "Weaveworld", "Weaveworld", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Horror# Fiction# Dark Fantasy# Science Fiction Fantasy# Urban Fantasy# Science Fiction# Thriller# Novels# Magic", "9780000000000", "English", 721, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1369, 1339, "The Magicians' Guild", "The Magicians' Guild", "Sonea# Rothen# Akkarin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Magic# Young Adult# Fiction# High Fantasy# Epic Fantasy# Adventure# Science Fiction Fantasy# Romance# Adult", "9780000000000", "English", 467, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1370, 1371, "Sybil: The Classic True Story of a Woman Possessed by Sixteen Personalities", "Sybil: The Classic True Story of a Woman Possessed by Sixteen Personalities", "Dr. Wilbur# Shirley Ardell Mason=Sybil Dorsett (pseud.)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Biography# Mental Illness# Mental Health# Memoir# Classics# Biography Memoir# Science# Adult", "9780000000000", "English", 481, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1371, 1372, "The Light Between Oceans", "The Light Between Oceans", "Tom Sherbourne# Isabel Sherbourne# Lucy / Grace# Hannah Roennfeldt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Australia# Historical# Book Club# Adult Fiction# Romance# Adult# Audiobook# Drama", "9780000000000", "English", 362, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1372, 1373, "Angels' Blood", "Angels' Blood", "Elena Deveraux# Raphael (Archangel)# Illium (Angel)# Sara Haziz# Ransom Winterwolf# Dmitri (Vampire)# Jason (Angel)# Venom (Vampire)# Michaela (Archangel)# Neha (Archangel)# Vivek Kapur", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Romance# Urban Fantasy# Paranormal Romance# Fantasy# Angels# Vampires# Adult# Supernatural# Fiction", "9780000000000", "English", 339, 1373 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1373, 1374, "The Beach", "The Beach", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Travel# Thriller# Adventure# Contemporary# Asia# Novels# Classics# Literature# British Literature", "9780000000000", "English", 436, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1374, 1375, "The Sunne in Splendour", "The Sunne in Splendour", "Elizabeth of York# Elizabeth Woodville# Richard III of England# Edward IV of England# Jane Shore# Anne Neville# Edward V of England# Margaret of Anjou# Richard Neville# 16th Earl of Warwick# George Plantagenet# 1st Duke of Clarence# Henry Stafford# Duke of Buckingham# Edward of Westminster# Prince of Wales# Cecily Neville# John Neville# 1st Marquess of Montagu# Francis Lovell# Richard Plantagenet# 3rd Duke of York# Isabel Neville# Edmund Plantagenet# Earl of Rutland# Anthony Woodville# 2nd Earl Rivers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Medieval# British Literature# 15th Century# Plantagenet# Romance# Novels# War", "9780000000000", "English", 936, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1375, 1376, "The Rosie Project", "The Rosie Project", "Don Tillman# Rosie Jarman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Contemporary# Humor# Chick Lit# Adult# Adult Fiction# Audiobook# Book Club# Australia", "9780000000000", "English", 295, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1376, 500, "The Epic of Gilgamesh", "The Epic of Gilgamesh", "Classics# Poetry# Fiction# Mythology# Literature# Fantasy# School# Epic# Religion# Ancient", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.7", 0, 1062 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1377, 1378, "The Heart Is a Lonely Hunter", "The Heart Is a Lonely Hunter", "John Singer# Spiros Antonapoulos# Biff Brannon# Jake Blount# Mick Kelly# Benedict Copeland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Southern# American# Literary Fiction# Historical Fiction# Southern Gothic# Coming Of Age", "9780000000000", "English", 359, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1378, 1379, "Warm Bodies", "Warm Bodies", "R# Nora# Julie Grigio# Perry Kelvin# M", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Science Fiction# Apocalyptic# Horror# Adult Fiction# Young Adult# Media Tie In# Dystopia# Fantasy", "9780000000000", "English", 256, 1379 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1379, 52, "Yertle the Turtle and Other Stories", "Yertle the Turtle and Other Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Humor# Fantasy# Animals# Kids# Juvenile", "9780000000000", "English", 96, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1380, 1381, "The Demon-Haunted World: Science as a Candle in the Dark", "The Demon-Haunted World: Science as a Candle in the Dark", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.27", " Seth MacFarlane (Reading)\"", " Cary Elwes (Reading)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1381, 1382, "The Alexandria Quartet", "The Alexandria Quartet", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Literature# Egypt# Novels# Africa# Literary Fiction# British Literature# 20th Century", "9780000000000", "English", 884, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1382, 1248, "Master of the Game", "Master of the Game", "Eve# Alexandra Jones# Anthony Tony Blackwell# Kate Blackwell# David Blackwell# Jamie Mcgregor# Salomon van der Merwe# Margaret van der Merwe# Dr. Peter Templeton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Mystery Thriller# Romance# Drama# Novels# Crime# Historical Fiction", "9780000000000", "English", 489, 1383 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1383, 667, "The Wee Free Men", "The Wee Free Men", "Nanny Ogg# Tiffany Aching# Nac Mac Feegle# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Humor# Comedy# Magic# Science Fiction Fantasy# Childrens# Adventure# Audiobook", "9780000000000", "English", 375, 715 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1384, 1385, "\"My Story: \"\"A Child Called It\"\"", "\"My Story: \"\"A Child Called It\"\"", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.21", "Dave Pelzer (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1385, 1386, "Ana Rocha: Shadows of Justice", "Ana Rocha: Shadows of Justice", "Thriller# Crime# Action# Police# Fiction# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 1386 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1386, 1069, "The Power and the Glory", "The Power and the Glory", "Fiction# Classics# Literature# Historical Fiction# Religion# Novels# British Literature# Catholic# Literary Fiction# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 1387 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1387, 1388, "North and South", "North and South", "George Hazard# Orry Main", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Civil War# War# Classics# Romance# American Civil War# Adult# Epic", "9780000000000", "English", 812, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1388, 1389, "On the Island", "On the Island", "Anna Emerson# T.J. Callahan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Contemporary Romance# Fiction# Chick Lit# New Adult# Adult# Survival# Adventure# Young Adult", "9780000000000", "English", 368, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1389, 1390, "Franz Kafka's The Castle (Dramatization)", "Franz Kafka's The Castle (Dramatization)", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.08", " Franz Kafka (Creator)\"", " Max Brod (Contributor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1390, 270, "As You Like It", "As You Like It", "Rosalind# Touchstone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Plays# Drama# Fiction# Theatre# Literature# Romance# School# Poetry# Comedy", "9780000000000", "English", 263, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1391, 88, "The Fiery Heart", "The Fiery Heart", "Sydney Sage# Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Adrian Ivashkov# Abe Mazur# Edison Eddie Castile# Rosemarie Rose Hathaway# Zoe Sage# Sonya Karp", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Magic# Urban Fantasy# Supernatural# Paranormal Romance# Witches", "9780000000000", "English", 420, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1392, 66, "Christine", "Christine", "Horror# Fiction# Thriller# Fantasy# Supernatural# Paranormal# Mystery# Audiobook# Suspense# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "French", "3.79", 0, 1130 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1393, 528, "The Moonstone", "The Moonstone", "Classics# Mystery# Fiction# Crime# Victorian# 19th Century# Historical Fiction# Literature# Mystery Thriller# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 1394 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1394, 1395, "Sons and Lovers", "Sons and Lovers", "Classics# Fiction# Literature# Novels# British Literature# Romance# 20th Century# Classic Literature# English Literature# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.63", 0, 1395 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1395, 66, "Insomnia", "Insomnia", "Horror# Fiction# Fantasy# Thriller# Supernatural# Mystery# Suspense# Paranormal# Science Fiction# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Spanish", "3.82", 0, 1396 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1396, 88, "Succubus Blues", "Succubus Blues", "Georgina Kincaid# Jerome# Doug Sato# Cody# Seth Mortensen# Hugh Mitchell# Carter# Roman Smith# Erik Lancaster# Peter Gwel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Romance# Paranormal Romance# Vampires# Demons# Adult# Angels# Supernatural", "9780000000000", "English", 343, 1397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1397, 1398, "Pedro Páramo", "Pedro Páramo", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.06", " Susan Sontag (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1398, 1399, "The Complete Stories", "The Complete Stories", "Short Stories# Fiction# Classics# Literature# Southern Gothic# Southern# American# Literary Fiction# 20th Century# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.4", 0, 1399 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1399, 1400, "Doomsday Book", "Doomsday Book", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.03", " Dan Dos Santos (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1400, 1039, "The Last Temptation of Christ", "The Last Temptation of Christ", "Fiction# Religion# Classics# Historical Fiction# Literature# Novels# Greece# Christianity# Philosophy# Spirituality", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 1401 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1401, 188, "The Kill Order", "The Kill Order", "Mark Fuller# Trina# Lana# Alec (The Maze Runner series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Post Apocalyptic# Adventure# Teen# Audiobook# Action", "9780000000000", "English", 327, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1402, 180, "Martin Eden", "Martin Eden", "Classics# Fiction# American# Literature# The United States Of America# Novels# Adventure# 20th Century# Historical Fiction# Roman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.44", 0, 1403 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1403, 990, "War and Remembrance", "War and Remembrance", "Victor Henry# Byron Henry# Winston Churchill", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# World War II# War# Historical# Classics# Holocaust# Military Fiction# Audiobook# Jewish", "9780000000000", "English", 1042, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1404, 1405, "Table 21", "Table 21", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Crime# Suspense# Mystery Thriller# New York# Thriller", "9780000000000", "English", 287, 1405 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1405, 1381, "Contact", "Contact", "Science Fiction# Fiction# Science Fiction Fantasy# Classics# Space# Novels# Fantasy# Aliens# Audiobook# Astronomy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "French", "4.13", 0, 1020 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1406, 1407, "Long Walk to Freedom", "Long Walk to Freedom", "Nelson Mandela", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Biography# Nonfiction# History# Africa# Autobiography# Memoir# Politics# South Africa# Biography Memoir# Race", "9780000000000", "English", 656, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1407, 1408, "Down and Rising", "Down and Rising", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Post Apocalyptic# Literary Fiction# Dystopia", "9780000000000", "English", 676, 1408 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1408, 698, "Lord of Misrule", "Lord of Misrule", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 246, 1409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1409, 1410, "Wild: From Lost to Found on the Pacific Crest Trail", "Wild: From Lost to Found on the Pacific Crest Trail", "Cheryl Strayed", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Travel# Biography# Adventure# Audiobook# Biography Memoir# Autobiography# Nature# Book Club", "9780000000000", "English", 315, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1410, 1411, "Nobody Loves a Bigfoot Like a Bigfoot Babe", "Nobody Loves a Bigfoot Like a Bigfoot Babe", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Paranormal# Urban Fantasy# Romance# Humor# Paranormal Romance", "B00AAL9UB4", "English", 286, 1411 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1411, 1101, "The Source", "The Source", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Religion# Israel# Jewish# Novels# Archaeology# Judaism# Classics", "9780000000000", "English", 1080, 536 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1412, 1413, "The Language of Flowers", "The Language of Flowers", "Victoria Jones.# Elizabeth Anderson# Grant.# Renata.# Natalya.# Marta Rubina# Meredith.# Marlena.", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Contemporary# Book Club# Adult Fiction# Adult# Chick Lit# Realistic Fiction# Audiobook# Novels", "9780000000000", "English", 323, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1413, 1079, "The Raven", "The Raven", "Classics# Poetry# Horror# Fiction# Short Stories# Gothic# School# Literature# American# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 1007 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1414, 698, "Midnight Alley", "Midnight Alley", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 245, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1415, 1416, "Switch! The Lost Kingdoms of Karibu", "Switch! The Lost Kingdoms of Karibu", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Humor# Adventure# Magic# Middle Grade# Mythology# Childrens# Africa# Teen", "10000000000000", "English", 276, 1416 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1416, 1030, "Torn", "Torn", "Rhys# Willa# Wendy Everly (Trylle)# Finn Holmes (Trylle)# Matt Everly# Elora", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Paranormal Romance# Magic# Fiction# Supernatural# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 324, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1417, 224, "Kingdom of Ash", "Kingdom of Ash", "Celaena Sardothien# Chaol Westfall# Dorian Havilliard# Rowan Whitethorn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# New Adult# Magic# Young Adult Fantasy# Fiction# Fae# High Fantasy# Paranormal", "9780000000000", "English", 984, 1418 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1418, 1419, "The Wishing Spell", "The Wishing Spell", "Fantasy# Middle Grade# Childrens# Fiction# Young Adult# Fairy Tales# Adventure# Audiobook# Magic# Retellings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 1419 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1419, 1420, "Paranormalcy", "Paranormalcy", "Raquel# Arianna# Evie# Reth# Lend# Lish# David Pirello# Fehl", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Vampires# Urban Fantasy# Supernatural# Paranormal Romance# Werewolves# Fairies", "9780000000000", "English", 335, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1420, 1421, "\"Night World", "\"Night World", "Young Adult# Vampires# Fantasy# Paranormal# Romance# Supernatural# Witches# Paranormal Romance# Magic# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 1421 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1421, 1422, "The Surgeon", "The Surgeon", "Jane Rizzoli# Thomas Moore# Catherine Cordell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Crime# Fiction# Suspense# Mystery Thriller# Drama# Detective# Adult# Adult Fiction", "10000000000000", "English", 416, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1422, 1423, "The Purpose Driven Life: What on Earth Am I Here for?", "The Purpose Driven Life: What on Earth Am I Here for?", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Nonfiction# Religion# Self Help# Spirituality# Christianity# Faith# Christian Living# Inspirational# Christian Non Fiction", "9780000000000", "English", 334, 1423 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1423, 1368, "Portnoy's Complaint", "Portnoy's Complaint", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# American# Humor# Jewish# Literary Fiction# The United States Of America# Contemporary", "9780000000000", "English", 274, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1424, 1425, "The Demon King", "The Demon King", "Fire Dancer# Han Alister# Princess Raisa ana’Marianna# Micah Bayar# Amon Byrne# Cat Tyburn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# High Fantasy# Young Adult Fantasy# Romance# Fiction# Adventure# Epic Fantasy# Teen", "9780000000000", "English", 506, 177 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1425, 1426, "I Am Malala: The Story of the Girl Who Stood Up for Education and Was Shot by the Taliban", "I Am Malala: The Story of the Girl Who Stood Up for Education and Was Shot by the Taliban", "Nonfiction# Biography# Memoir# Feminism# Autobiography# Audiobook# Biography Memoir# History# Politics# Education", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 909 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1426, 1427, "The Collected Poems of W.B. Yeats", "The Collected Poems of W.B. Yeats", "Poetry# Classics# Irish Literature# Ireland# Literature# Fiction# 20th Century# 19th Century# Classic Literature# College", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 1427 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1427, 1428, "The Eight", "The Eight", "Fiction# Mystery# Historical Fiction# Thriller# Fantasy# Historical# Adventure# Suspense# Mystery Thriller# Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.91", 0, 1428 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1428, 833, "Red Storm Rising", "Red Storm Rising", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Military Fiction# War# Action# Espionage# Suspense# Adventure# Mystery# Historical Fiction", "9780000000000", "English", 0, 1429 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1429, 1430, "The Diving Bell and the Butterfly", "The Diving Bell and the Butterfly", "Nonfiction# Memoir# Biography# Biography Memoir# Autobiography# France# Medicine# Medical# Classics# Disability", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 1430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1430, 955, "Crossroads and the Dominion of Four", "Crossroads and the Dominion of Four", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Young Adult# Adventure# New Adult# Fantasy# Adult# Magic# Science Fiction Fantasy# Contemporary", "9780000000000", "", 340, 955 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1431, 1432, "Caraval", "Caraval", "Scarlett# Donatella Tella# Julian# Legend# Marcello Dragna# Dante (Caraval)# Rose# Annalise", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Magic# Young Adult Fantasy# Mystery# Audiobook# Adventure# High Fantasy", "9780000000000", "English", 432, 1432 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1432, 1433, "ثلاثية غرناطة", "ثلاثية غرناطة", "Novels# Fiction# Historical Fiction# Literature# Egypt# Historical# Spain# Islam# Unfinished# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "Arabic", "4.29", 0, 1433 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1433, 1434, "Firelight", "Firelight", "Cassian# Will Rutledge# Jacinda Jones# Tamra Jones", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dragons# Romance# Paranormal# Paranormal Romance# Urban Fantasy# Supernatural# Shapeshifters# Magic", "9780000000000", "English", 323, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1434, 1435, "\"Animal", "\"Animal", " Richard A. Houser (Illustrator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Camille Kingsolver", " Steven L. Hopp", "\"Barbara Kingsolver", 0, 1435 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1435, 1436, "Tigana", "Tigana", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# High Fantasy# Epic Fantasy# Science Fiction Fantasy# Historical Fiction# Historical Fantasy# Canada# Adult# Magic", "9780000000000", "English", 676, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1436, 1437, "The Savage Detectives", "The Savage Detectives", "Fiction# Novels# Spanish Literature# Latin American# Literature# Literary Fiction# Contemporary# Latin American Literature# Unfinished# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 1437 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1437, 1438, "Bossypants", "Bossypants", "Tina Fey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Humor# Biography# Audiobook# Comedy# Autobiography# Biography Memoir# Feminism# Adult", "10000000000000", "English", 283, 1438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1438, 976, "Stargazer", "Stargazer", "Bianca Olivier# Balthazar More# Raquel Vargas# Lucas Ross# Vic Woodson# Adrian Olivier# Celia Olivier# Charity More", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Ghosts# Fiction", "9780000000000", "English", 329, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1439, 13, "Where the Sidewalk Ends", "Where the Sidewalk Ends", "", new DateTime(2022, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Poetry# Childrens# Classics# Fiction# Humor# Young Adult# Picture Books# Juvenile# Middle Grade# Fantasy", "9780000000000", "English", 176, 235 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1440, 640, "I Am Legend", "I Am Legend", "Robert Neville", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Science Fiction# Fiction# Classics# Post Apocalyptic# Vampires# Fantasy# Dystopia# Audiobook# Apocalyptic", "B00514HDNW", "English", 162, 1441 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1441, 1442, "The Bone Collector", "The Bone Collector", "Lincoln Rhyme# Amelia Sachs", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Crime# Suspense# Mystery Thriller# Drama# Detective# Horror# Novels", "9780000000000", "English", 528, 32 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1442, 1443, "The Illuminatus! Trilogy", "The Illuminatus! Trilogy", "Fiction# Science Fiction# Fantasy# Humor# Philosophy# Conspiracy Theories# Novels# Occult# Politics# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 1443 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1443, 710, "Firefly Lane", "Firefly Lane", "Kate Mularkey# Tully Hart", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Chick Lit# Romance# Contemporary# Adult# Adult Fiction# Audiobook# Drama# Womens Fiction# Book Club", "9780000000000", "English", 479, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1444, 651, "Circe", "Circe", "Jason (Argonaut)# Odysseus# Penelope (wife of Odysseus)# Glaucus# Prometheus (mythology)# Athena (Greek goddess)# Circe# Telemachus# Medea of Colchis# Daedalus# Aeëtes# Minos# Scylla# Hermes# Minotaur# Helius (mythology)# Icarus (mythology)# Ariadne (mythology)# Telegonus# Pasiphae# Perse (mythology)# Perses of Colchis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Mythology# Historical Fiction# Audiobook# Retellings# Historical# Adult# Magic# Adult Fiction", "9780000000000", "English", 393, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1445, 845, "Post Office", "Post Office", "Henry Chinaski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# Mystery# American# Thriller# Contemporary# Drama# Suspense", "B000SEGDNG", "English", 162, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1446, 1128, "Magic Strikes", "Magic Strikes", "Kate Daniels# Curran Lennart# Beatrice Aunt B# Derek Gaunt# Jim Shrapshire# Saiman# Dr. George Doolittle# Andrea Nash# Dali Harimau# Raphael Medrano# Mahon Delany# Julie Olsen# Hugh dAmbray", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Magic# Vampires# Paranormal Romance# Fiction# Shapeshifters# Adult", "9780000000000", "English", 310, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1447, 1038, "Persepolis: The Story of a Childhood", "Persepolis: The Story of a Childhood", "Graphic Novels# Nonfiction# Memoir# Comics# Biography# History# Iran# Graphic Novels Comics# Autobiography# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 1448 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1448, 1449, "The Darkest Night", "The Darkest Night", "Ashlyn Darrow# Maddox / Violence# Anya - Goddess of Anarchy# Lucien / Death# Reyes / Pain# Danika Ford# Sabin / Doubt# Aeron / Wrath# Strider / Defeat# Amun / Secrets# Kane / Disaster# Paris / Promiscuity# Gideon / Lies# Cameo / Misery# Torin / Disease", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Fantasy# Demons# Adult# Urban Fantasy# Mythology# Supernatural# Fiction", "9780000000000", "English", 379, 1449 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1449, 1450, "\"Red", "\"Red", "Romance# Contemporary# LGBT# Fiction# New Adult# Young Adult# Queer# Adult# M M Romance# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.23", 0, 1450 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1450, 1451, "A Distant Mirror: The Calamitous 14th Century", "A Distant Mirror: The Calamitous 14th Century", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Medieval# European History# Medieval History# Historical# France# World History# Audiobook# 14th Century", "9780000000000", "English", 677, 1451 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1451, 1452, "Half of a Yellow Sun", "Half of a Yellow Sun", "Ugwu# Olanna# Odenigbo# Kainene", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Africa# Nigeria# War# Historical# African Literature# Contemporary# Novels# Literary Fiction", "9780000000000", "English", 433, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1452, 1453, "The Threat Below", "The Threat Below", "Fiction# Fantasy# Epic# Drama# Novels# Young Adult# Contemporary# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.32", 0, 1427 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1453, 1454, "\"Band of Brothers: E Company", "\"Band of Brothers: E Company", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.42", "Stephen E. Ambrose", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1454, 1455, "Dragonflight", "Dragonflight", "Lessa# Flar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Dragons# Fiction# Science Fiction Fantasy# Young Adult# High Fantasy# Time Travel# Romance# Adventure", "9780000000000", "English", 299, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1455, 1456, "Silent Spring", "Silent Spring", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.98", " Edward O. Wilson (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1456, 1457, "Bully", "Bully", "Tatum Tate Brandt# Jared Trent", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# High School# Contemporary Romance# Abuse# Fiction# Chick Lit# Drama", "10000000000000", "", 333, 1457 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1457, 55, "Nicholas Nickleby", "Nicholas Nickleby", "Classics# Fiction# Literature# 19th Century# British Literature# Historical Fiction# Victorian# Classic Literature# Novels# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 1458 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1458, 698, "Feast of Fools", "Feast of Fools", "Ada Hermann# Michael Glass# Shane Collins# Eve Rosser# Claire Danvers# Oliver# Sam Glass# Amelie# Myrnin# Monica Morrell# Mr Bishop# Frank Collins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 242, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1459, 1460, "Demonglass", "Demonglass", "Young Adult# Fantasy# Paranormal# Romance# Magic# Vampires# Witches# Supernatural# Demons# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 1460 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1460, 1461, "\"The Oedipus Cycle: Oedipus Rex", "\"The Oedipus Cycle: Oedipus Rex", "3.98", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Dudley Fitts (Translator)", " Robert Fitzgerald (Translator)", "\"Sophocles", 0, 1461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1461, 1462, "Katherine", "Katherine", "Historical Fiction# Fiction# Romance# Historical# Classics# Medieval# British Literature# Historical Romance# 14th Century# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 1462 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1462, 554, "The Power of Six", "The Power of Six", "Sarah Hart# Sam Goode# Bernie Kosar# Mogadorians# Marina# Number 6# Adelina# John Smith (Pittacus Lore)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Aliens# Fiction# Adventure# Paranormal# Romance# Action# Teen", "9780000000000", "English", 406, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1463, 1329, "Trouble on Main Street", "Trouble on Main Street", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Epic# Novels# Drama", "B086CDYMTP", "English", 289, 1464 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1464, 90, "Animal Dreams", "Animal Dreams", "Cosima Codi Noline# Homer Noline# Halimeda Hallie Noline# Emelina Domingo# Loyd Peregrina# J.T. Domingo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Novels# Adult Fiction# Adult# Literature# Realistic Fiction# Womens# Romance", "9780000000000", "English", 342, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1465, 1466, "Americanah", "Americanah", "Fiction# Africa# Contemporary# Feminism# Literary Fiction# Race# Nigeria# Novels# Romance# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.31", 0, 1466 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1466, 317, "Dead in the Family", "Dead in the Family", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Alcide Herveaux", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Paranormal# Urban Fantasy# Romance# Fiction# Mystery# Paranormal Romance# Supernatural# Werewolves", "9780000000000", "English", 311, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1467, 1468, "Medea", "Medea", "Classics# Plays# Drama# Fiction# Mythology# Theatre# School# Literature# Read For School# Tragedy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.88", 0, 1468 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1468, 1469, "Steve Jobs", "Steve Jobs", "Steve Jobs", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Biography# Nonfiction# Business# Technology# History# Biography Memoir# Audiobook# Leadership# Memoir# Autobiography", "9780000000000", "English", 627, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1469, 1470, "Soulless", "Soulless", "Alexia Tarabotti# Lord Akeldama# Ivy Hisselpenny# Professor Randolph Lyall# Lord Maccon# Floote# Ormond Tunstell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Steampunk# Fantasy# Romance# Paranormal# Vampires# Urban Fantasy# Fiction# Historical Fiction# Historical# Werewolves", "9780000000000", "English", 357, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1470, 1471, "This Side of Paradise", "This Side of Paradise", "Amory Blaine# Isabelle Borgé# Rosalind Connage# Monsignor Thayer Darcy# Beatrice Blaine# Alec Connage# Clara Page# Tom DInvilliers# Kerry Holiday# Burne Holiday# Eleanor Savage# Dick Humbird# Cecilia Connage# Myra St. Clare", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Novels# American# 20th Century# Historical Fiction# Romance# Classic Literature# Literary Fiction", "9780000000000", "English", 275, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1471, 1472, "The DUFF: Designated Ugly Fat Friend", "The DUFF: Designated Ugly Fat Friend", "Bianca Piper# Wesley Rush# Casey Blithe# Jessica Gaither# Toby Tucker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Chick Lit# High School# Realistic Fiction# Young Adult Contemporary# Teen# Contemporary Romance", "9780000000000", "English", 280, 1472 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1472, 1473, "Eleanor Oliphant Is Completely Fine", "Eleanor Oliphant Is Completely Fine", "Eleanor Oliphant# Raymond Gibbons# Sammy Thom# Mrs. Gibbons# Laura Thom", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Audiobook# Adult# Adult Fiction# Mental Health# Book Club# Novels# Literary Fiction# Chick Lit", "9780000000000", "English", 336, 1473 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1473, 43, "The Demigod Files", "The Demigod Files", "Hades# Percy Jackson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Short Stories# Adventure# Greek Mythology# Childrens# Urban Fantasy", "9780000000000", "English", 151, 341 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1474, 1475, "Before I Die", "Before I Die", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Realistic Fiction# Death# Teen# Drama# Young Adult Contemporary# Chick Lit", "9780000000000", "English", 336, 209 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1475, 1476, "Fast Food Nation: The Dark Side of the All-American Meal", "Fast Food Nation: The Dark Side of the All-American Meal", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Food# Health# Sociology# Politics# History# Science# School# Business# Nutrition", "9780000000000", "English", 399, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1476, 721, "Atlas Shrugged & The Fountainhead", "Atlas Shrugged & The Fountainhead", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Philosophy# Politics# Literature# Novels# Economics# Sociology# American", "9780000000000", "", 0, 1409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1477, 268, "Requiem", "Requiem", "Hana Tate# Magdalena Lena Ella Haloway-Tiddle# Alex Sheathes# Julian Fineman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Fantasy# Adventure# Teen# Audiobook# Post Apocalyptic", "9780000000000", "English", 391, 152 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1478, 560, "Lirael", "Lirael", "Sabriel# Touchstone# Mogget# Lirael# The Disreputable Dog# Prince Sameth# Kirrith# Chlorr# Nicholas Sayre", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# High Fantasy# Adventure# Science Fiction Fantasy# Audiobook# Teen", "9780000000000", "English", 464, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1479, 698, "Carpe Corpus", "Carpe Corpus", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 241, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1480, 1481, "The Invisible Game: Mindset of a Winning Team", "The Invisible Game: Mindset of a Winning Team", "", new DateTime(2022, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Psychology# Gaming# Nonfiction# Self Help# Sports# Leadership# Games# Personal Development# Game Design# Business", "10000000000000", "English", 201, 1481 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1481, 62, "Gathering Blue", "Gathering Blue", "Helena (Gathering Blue)# Dan (Gathering Blue)# Singer (Gathering Blue)# Thomas (Gathering Blue)# Mar (Gathering Blue)# Marlena (Gathering Blue)# Branch (Gathering Blue)# Christopher (Gathering Blue)# Kira (Gathering Blue)# Jamison (Gathering Blue)# Solora (Gathering Blue)# Annabella (Gathering Blue)# Vandara (Gathering Blue)# Katrina (Gathering Blue)# Jo (Gathering Blue)# Camilla (Gathering Blue)# Matt (Gathering Blue)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Middle Grade# Classics# Childrens# Audiobook# Teen", "9780000000000", "English", 240, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1482, 1483, "Sliding on the Snow Stone", "Sliding on the Snow Stone", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Memoir# Biography# Ukraine# War# Autobiography# World War II# Historical# Survival", "B00KNOQFJS", "English", 238, 1483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1483, 1484, "Beg For Mercy", "Beg For Mercy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "10000000000000", "English", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1484, 1485, "This Man", "This Man", "Romance# Erotica# Contemporary Romance# Contemporary# BDSM# Adult# Erotic Romance# New Adult# Fiction# Adult Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.1", 0, 256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1485, 39, "Island", "Island", "Will Farnaby", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Science Fiction# Philosophy# Dystopia# Literature# Novels# Utopia# Fantasy# British Literature", "9780000000000", "English", 354, 1486 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1486, 1487, "The Rum Diary", "The Rum Diary", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Novels# Literature# Contemporary# American# Drama# Journalism# Thriller# Travel", "9780000000000", "English", 224, 1487 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1487, 1488, "Kindred", "Kindred", "Dana Franklin# Kevin Franklin# Rufus Weylin# Tom Weylin# Margaret Weylin# Alice Greenwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Science Fiction# Fantasy# Time Travel# Historical# Classics# African American# Science Fiction Fantasy# Race", "9780000000000", "English", 287, 1488 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1488, 1489, "When Breath Becomes Air", "When Breath Becomes Air", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Medicine# Medical# Audiobook# Biography Memoir# Autobiography# Philosophy# Science", "B00XSSYR50", "English", 208, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1489, 24, "Richard III", "Richard III", "Classics# Plays# Drama# Fiction# Historical Fiction# Theatre# Literature# School# Poetry# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "", "3.93", 0, 1490 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1490, 1491, "Wither", "Wither", "Rose# Jenna# Cecily# Linden Howard# Rhine Ellery# Gabriel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Science Fiction# Fiction# Teen# Post Apocalyptic# Paranormal# Futuristic# Apocalyptic", "9780000000000", "English", 358, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1491, 1030, "Ascend", "Ascend", "Willa# Wendy Everly (Trylle)# Finn Holmes (Trylle)# Matt Everly# Elora# Oren (Vittra)# Rhiannon (Manks)# Rhys (Manks)# Aurora (Trylle)# Loki (Vittra)# Oliver (Trylle & Vittra)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Paranormal Romance# Fiction# Magic# Supernatural# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 326, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1492, 1493, "L'Écume des jours", "L'Écume des jours", "Chloe# Colin# Alise# Chick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# France# Classics# French Literature# Romance# Novels# Roman# Fantasy# 20th Century# Literature", "10000000000000", "French", 351, 1493 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1493, 1494, "\"Rich Dad", "\"Rich Dad", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.08", " Sharon Lechter\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1494, 1495, "My Name Is Red", "My Name Is Red", "Fiction# Historical Fiction# Mystery# Literature# Novels# Turkish# Turkish Literature# Historical# Art# Nobel Prize", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.85", 0, 40 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1495, 729, "Smaragdgrün", "Smaragdgrün", "Gwendolyn Shepherd# Grace Shepherd# Leslie Hay# Gideon de Villiers# Cynthia Dale", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Time Travel# Romance# Historical Fiction# Fiction# Science Fiction# Paranormal# Historical# Urban Fantasy", "9780000000000", "German", 482, 729 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1496, 1497, "Out of Africa", "Out of Africa", "Nonfiction# Africa# Classics# Memoir# Biography# Travel# History# Autobiography# Biography Memoir# Kenya", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 1497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1497, 1498, "\"Eats", "\"Eats", "Nonfiction# Writing# Language# Reference# Humor# Linguistics# Education# Adult# British Literature# Self Help", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.87", 0, 1498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1498, 1499, "\"The Black Jewels Trilogy: Daughter of the Blood", "\"The Black Jewels Trilogy: Daughter of the Blood", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.38", "Anne Bishop", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1499, 570, "Never Fade", "Never Fade", "Charles Chubs Carrington Meriwether IV (The Darkest Minds)# Cate (The Darkest Minds)# Ruby Elizabeth Daly (The Darkest Minds)# Vida (The Darkest Minds)# Liam Stewart (The Darkest Minds)# Clancy Gray (The Darkest Minds)# Jude (The Darkest Minds)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Science Fiction# Romance# Paranormal# Fiction# Adventure# Supernatural# Audiobook", "9780000000000", "English", 507, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1500, 1501, "A Modest Proposal and Other Satirical Works", "A Modest Proposal and Other Satirical Works", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Humor# Essays# Literature# Philosophy# 18th Century# Irish Literature# Politics# Ireland", "9780000000000", "English", 64, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1501, 1502, "Beautiful Bastard", "Beautiful Bastard", "Chloe Mills# Bennett Ryan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Erotica# Contemporary Romance# Adult# New Adult# Erotic Romance# Chick Lit# Fiction# Humor", "9780000000000", "English", 320, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1502, 164, "The Runaway Bunny", "The Runaway Bunny", "Picture Books# Childrens# Fiction# Classics# Animals# Family# Rabbits# Kids# Love# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 1503 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1503, 555, "World After", "World After", "Penryn Young# Raffe# Obadiah West# Dee-Dum# Paige Young# Belial", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Angels# Dystopia# Paranormal# Romance# Post Apocalyptic# Urban Fantasy# Fiction# Supernatural", "B00DBE1P2Y", "English", 320, 555 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1504, 831, "Identical", "Identical", "Kaeleigh Gardella# Raeanne Gardella# Raymond Gardella# Kae Gardella# Greta (Identical)# Ian (Identical)# Madison (Identical)# Mick (Identical)# Ty (Identical)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Realistic Fiction# Mental Illness# Abuse# Mental Health# Teen# Romance", "9780000000000", "English", 565, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1505, 202, "Noble House", "Noble House", "Ian Dunross# K.C. Tcholok# Linc Bartlett# Quillan Gornt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Asia# China# Thriller# Novels# Adventure# Classics# Asian Literature", "10000000000000", "English", 1376, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1506, 1507, "The Bridge on the Drina", "The Bridge on the Drina", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.33", " William H. McNeill (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1507, 560, "Abhorsen", "Abhorsen", "Sabriel# Touchstone# Mogget# Lirael# The Disreputable Dog# Prince Sameth# Nicholas Sayre", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# High Fantasy# Adventure# Science Fiction Fantasy# Teen# Audiobook", "9780000000000", "English", 358, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1508, 1509, "Giovanni's Room", "Giovanni's Room", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# LGBT# Queer# Novels# Gay# Romance# Literature# African American# American", "9780000000000", "English", 159, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1509, 1510, "Coma", "Coma", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Horror# Medical# Suspense# Science Fiction# Mystery Thriller# Crime# Novels", "9780000000000", "", 384, 1510 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1510, 986, "Silver Borne", "Silver Borne", "Adam Hauptman# Samuel Cornick# Zee (Siebold Adelbertsmiter)# Mercy Thompson# Jesse Hauptman# Charles Cornick# Anna Latham# Darryl Zao# Warren Smith# Honey Jorgenson# Kyle Brooks# Stefan Uccello# Marsilia# Auriele Zao# Gabriel Sandoval# Tony Montenegro# Alicia (Ariana) Brewster# Ben Shaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Werewolves# Vampires# Paranormal Romance# Shapeshifters# Fiction# Fae", "9780000000000", "English", 342, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1511, 85, "Suttree", "Suttree", "Cornelius Suttree# Gene Harrogate", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literature# Southern Gothic# Novels# Classics# American# Southern# Contemporary# Literary Fiction# Gothic", "9780000000000", "English", 471, 250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1512, 1513, "The Ultimate Religion", "The Ultimate Religion", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Contemporary# Book Club# Thriller# Suspense# Fiction# Mystery# Epic# Novels# Dark", "B07RBY9422", "English", 319, 1513 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1513, 1514, "Station Eleven", "Station Eleven", "Miranda Carroll# Clark Thompson# Kirsten Raymonde# Jeevan Chaudhary# Arthur Leander# Sayid# Elizabeth Colton# Dieter# August (Station Eleven)# Gil Harris# Tyler Leander# Frank Chaudhary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Post Apocalyptic# Adult# Audiobook# Fantasy# Adult Fiction# Apocalyptic# Literary Fiction", "9780000000000", "English", 333, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1514, 514, "Rebel Angels", "Rebel Angels", "Gemma Doyle# Kartik# Ann Bradshaw# Felicity Worthington# Pippa Cross", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Historical Fiction# Historical# Fiction# Romance# Paranormal# Magic# Teen# Young Adult Fantasy", "9780000000000", "English", 548, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1515, 1516, "The Forest of Hands and Teeth", "The Forest of Hands and Teeth", "Mary# Travis# Harry Adams# Cass# Jed", new DateTime(2022, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Zombies# Horror# Dystopia# Fantasy# Fiction# Post Apocalyptic# Romance# Paranormal# Science Fiction", "9780000000000", "English", 310, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1516, 61, "The Year of the Flood", "The Year of the Flood", "Snowman# Oryx# Crake# Toby# Ren# Zeb", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Post Apocalyptic# Fantasy# Canada# Speculative Fiction# Audiobook# Apocalyptic# Science Fiction Fantasy", "9780000000000", "English", 431, 1085 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1517, 1518, "\"Men Are from Mars", "\"Men Are from Mars", "Nonfiction# Self Help# Psychology# Relationships# Marriage# Personal Development# Philosophy# Romance# Unfinished# Communication", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.56", 0, 727 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1518, 909, "Beyond Good and Evil", "Beyond Good and Evil", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4", " Michael Tanner (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1519, 1520, "Reason to Breathe", "Reason to Breathe", "Emma Thomas# Evan Mathews# Sara McKinley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# New Adult# Abuse# Contemporary Romance# Fiction# High School# Realistic Fiction# Dark", "B00505AZRS", "English", 377, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1520, 1521, "Kiss of Midnight", "Kiss of Midnight", "Gabrielle Maxwell# Lucan Thorne# Dante Malebranche# Tegan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Vampires# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Erotica", "9780000000000", "English", 402, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1521, 131, "Diary", "Diary", "Misty Wilmot# Peter Wilmot# Angel Delaporte# Tabitha Wilmot# Grace Wilmot", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Contemporary# Thriller# Novels# Mystery# Suspense# Adult Fiction# American# Adult", "9780000000000", "English", 262, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1522, 1523, "Hard Times", "Hard Times", "Thomas Gradgrind# Mr. MChoakumchild# Stephen Blackpool# Josiah Bounderby# Sissy Jupe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# 19th Century# Novels# Victorian# British Literature# Historical Fiction# School# Classic Literature", "9780000000000", "English", 353, 1523 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1523, 1524, "Ringworld", "Ringworld", "Louis Gridley Wu# Teela Brown# Nessus (Niven)# Speaker-to-Animals# Halrloprillalar Hotrufan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Science Fiction Fantasy# Fantasy# Classics# Space Opera# Audiobook# Space# Adventure# Hugo Awards", "9780000000000", "English", 288, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1524, 558, "Tatiana and Alexander", "Tatiana and Alexander", "Tatiana Metanova# Alexander Barrington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Historical# Historical Romance# Fiction# Russia# War# Adult# World War II# Love", "9780000000000", "English", 559, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1525, 1526, "عزازيل", "عزازيل", "Hypa# Martha# Octavia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Historical Fiction# Literature# Egypt# Religion# Unfinished# Historical# Philosophy# Egyptian Literature", "10000000000000", "Arabic", 470, 1526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1526, 1527, "2666", "2666", "Óscar Amalfitano# Oscar Fate# Rosa Amalfitano# Jean-Claude Pelletier# Piero Morini# Manuel Espinoza# Liz  Norton# Baroness von Zumpe# Benno von Archimboldi# Chucho Flores# Klaus Haas# Elvira Campo# Juan de Dios Martínez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literature# Novels# Spanish Literature# Literary Fiction# Latin American# Mystery# Contemporary# Crime# Classics", "9790000000000", "Spanish", 1128, 1527 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1527, 1528, "Uprooted", "Uprooted", "Agnieszka# The Dragon# Prince Marek# Kasia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Magic# Fairy Tales# High Fantasy# Adult# Retellings# New Adult", "9780000000000", "English", 435, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1528, 52, "The Cat in the Hat Comes Back", "The Cat in the Hat Comes Back", "Sally# The Cat in the Hat", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Humor# Fantasy# Cats# Animals# Juvenile", "9780000000000", "English", 63, 1529 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1529, 1530, "Suite Française", "Suite Française", "Fiction# Historical Fiction# France# World War II# War# Historical# Classics# Holocaust# Book Club# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 1530 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1530, 1531, "The Physician", "The Physician", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Medieval# Adventure# Medicine# Novels# Classics# British Literature# Romance", "9780000000000", "English", 714, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1531, 81, "Down and Out in Paris and London", "Down and Out in Paris and London", "Paddy# Bozo# George Orwell# Boris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Classics# Biography# Memoir# Travel# Literature# History# France# British Literature# Autobiography", "9780000000000", "English", 213, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1532, 1533, "The King of Attolia", "The King of Attolia", "Eugenides# Costis# Attolia# Relius# Teleus", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Adventure# Young Adult Fantasy# Romance# High Fantasy# Historical Fiction# Mythology# Audiobook", "9780000000000", "English", 387, 1533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1533, 1079, "The Selected Writings of Edgar Allan Poe", "The Selected Writings of Edgar Allan Poe", "Classics# Poetry# Fiction# Horror# Short Stories# Gothic# Essays# American# Literature# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 1534 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1534, 107, "The Mysterious Affair at Styles", "The Mysterious Affair at Styles", "Inspector Japp# Arthur Hastings# John Cavendish# Emily Inglethorp# Alfred Inglethorp# Cynthia Murdoch# Mary Cavendish# Evie Howard# Lawrence Cavendish# Hercule Poirot# Dorcas (The Mysterious Affair at Styles)# Dr. Bauerstein# Dr. Wilkins# Mr. Wells# Albert Mace# Superintendent Summerhaye", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Classics# Crime# Mystery Thriller# Detective# Audiobook# Thriller# British Literature# Adult", "9780000000000", "English", 121, 1535 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1535, 346, "The Young Elites", "The Young Elites", "Adelina Amouteru# Enzo Valenciano# Teren Santoro", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Magic# Fiction# Young Adult Fantasy# Science Fiction# High Fantasy# Paranormal", "9780000000000", "English", 355, 1536 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1536, 1537, "Book of a Thousand Days", "Book of a Thousand Days", "Fantasy# Young Adult# Fiction# Romance# Fairy Tales# Retellings# Historical Fiction# Young Adult Fantasy# Teen# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 252 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1537, 1538, "Survival in Auschwitz", "Survival in Auschwitz", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.31", " Philip Roth (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1538, 1539, "Paradox Effect: Time Travel and Purified DNA Merge to Halt the Collapse of Human Existence", "Paradox Effect: Time Travel and Purified DNA Merge to Halt the Collapse of Human Existence", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Epic# Drama", "9780000000000", "", 284, 1539 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1539, 416, "Shadowland", "Shadowland", "Ever Bloom# Damen Auguste# Roman# Miles# Haven Turner# Jude (The Immortals)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Paranormal Romance# Supernatural# Fiction# Magic# Urban Fantasy# Vampires", "9780000000000", "English", 339, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1540, 1541, "The Magicians", "The Magicians", "Quentin Coldwater# Martin Chatwin# Jane Chatwin# Alice Quinn# Eliot Waugh# Janet Pluchinsky# Josh Hoberman# Julia Wicker# Penny (William)# James (The Magicians)# The Beast# Henry Fogg# Professor Sundermann# Rupert Chatwin# Fiona Chatwin# Christopher Plover# Professor Melanie Vandervaya# Lovelady# Umber# Ember (The Magicians)# Richard (The Magicians)# Anaïs (The Magicians)# Humbledrum# Farvel# Professor Mayakovsky", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Magic# Urban Fantasy# Young Adult# Science Fiction Fantasy# Adult# Audiobook# Adult Fiction# Contemporary", "9780000000000", "English", 402, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1541, 1542, "\"Death Note", "\"Death Note", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.44", " Pookie Rolf (Translator)\"", " Takeshi Obata (Illustrator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1542, 1543, "Long Day's Journey into Night", "Long Day's Journey into Night", "Plays# Drama# Classics# Fiction# Theatre# American# Literature# School# 20th Century# Read For School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.07", 0, 1543 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1543, 1544, "A Bird Without Wings", "A Bird Without Wings", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary", "9780000000000", "English", 0, 1249 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1544, 1545, "Flatland: A Romance of Many Dimensions", "Flatland: A Romance of Many Dimensions", "Fiction# Science Fiction# Classics# Mathematics# Fantasy# Philosophy# Literature# Novels# Physics# 19th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 1237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1545, 112, "The Girl Who Loved Tom Gordon", "The Girl Who Loved Tom Gordon", "Patricia McFarland# Richie Tozier# Tom Gordon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Suspense# Mystery# Fantasy# Survival# Audiobook# Adventure# Adult", "9780000000000", "English", 264, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1546, 1547, "Code Name Verity", "Code Name Verity", "Hauptsturmfuhrer von Linden# Fraulein Engel# Julie# Maddie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Fiction# Historical# War# World War II# Audiobook# Teen# Mystery# Adventure", "9780000000000", "English", 452, 1547 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1547, 830, "Ptolemy's Gate", "Ptolemy's Gate", "Bartimaeus# Kathleen Kitty Jones# Nathaniel# Clem Hill# Rupert Devereaux# Carl Mortensen# Helen Malbindi# Jessica Whitwell# Bruce Collins# Jane Farrar# Quentin Makepeace# Harold Button# Sholto Pinn# Rebecca Piper# Nicholas Drew# Rosanna Lutyens# Ascobol# Hodge# Fritang# Purip# Cormocodran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Urban Fantasy# Adventure# Young Adult Fantasy# Middle Grade# Childrens# Audiobook", "9780000000000", "English", 501, 1548 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1548, 344, "Just One Day", "Just One Day", "Allyson Healey# Willem De Ruiter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# New Adult# Realistic Fiction# Travel# Chick Lit# Young Adult Contemporary# Teen", "9780000000000", "English", 369, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1549, 1550, "Some Girls Bite", "Some Girls Bite", "Scott Grey# Luc (Chicagoland Vampires)# Caroline Merit Merit# Morgan Greer# Ethan Sullivan# Mallory Carmichael# Catcher Bell# Jeff Christopher# Celina Desaulniers# Lindsey# Chuck Merit# Noah Beck# Kelley (Some Girls Bite)# Malik Washington# Juliet (Some Girls Bite)# Peter (Some Girls Bite)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Adult# Magic# Supernatural# Fiction", "9780000000000", "English", 341, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1550, 1551, "Reading Lolita in Tehran: A Memoir in Books", "Reading Lolita in Tehran: A Memoir in Books", "Azar Nafisi# Nassrin# Manna# Mahshid# Yassi# Azin# Mitra (Reading Lolita in Teheran)# Sanaz# Nima (Reading Lolita in Teheran)# Bijan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Iran# Books About Books# Feminism# History# Biography Memoir# Womens# Book Club", "9780000000000", "English", 356, 1551 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1551, 1552, "Wool Omnibus", "Wool Omnibus", "Juliette Nichols# Lukas Kyle# Holston# Jahns# Marnes# Bernard# Walker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Dystopia# Post Apocalyptic# Fantasy# Science Fiction Fantasy# Apocalyptic# Audiobook# Speculative Fiction# Young Adult", "10000000000000", "English", 509, 1552 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1552, 62, "Messenger", "Messenger", "Jonas (Lois Lowry)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fiction# Fantasy# Science Fiction# Middle Grade# Childrens# Classics# Audiobook# Adventure", "9780000000000", "English", 169, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1553, 1554, "After Forever Ends", "After Forever Ends", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Fiction# Fantasy# Chick Lit# Coming Of Age# Literary Fiction# Contemporary Romance# Young Adult# Womens Fiction", "B009ODTG86", "English", 564, 1554 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1554, 256, "Eva Luna", "Eva Luna", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.97", " Владимир Правосудов (Translator )\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1555, 1259, "The Human Obsession", "The Human Obsession", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Psychology# Fiction# Crime", "9780000000000", "English", 314, 1259 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1556, 245, "Sputnik Sweetheart", "Sputnik Sweetheart", "Fiction# Japan# Japanese Literature# Magical Realism# Contemporary# Romance# Novels# Literature# LGBT# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 1557 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1557, 574, "Fragile Eternity", "Fragile Eternity", "Aislinn# Keenan# Seth# Sorcha# Niall", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Fairies# Urban Fantasy# Fae# Fiction# Paranormal Romance# Magic", "9780000000000", "English", 389, 1558 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1558, 1559, "Crash", "Crash", "James Ballard# Dr. Robert Vaughan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Literature# Novels# Thriller# Contemporary# British Literature# Dark# Mystery# Horror", "9780000000000", "English", 224, 1559 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1559, 1560, "The Communist Manifesto", "The Communist Manifesto", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.58", " Gareth Stedman Jones (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1560, 112, "Lisey's Story", "Lisey's Story", "Lisey Landon# Scott Landon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Thriller# Mystery# Supernatural# Romance# Suspense# Audiobook# Paranormal", "9780000000000", "English", 513, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1561, 1562, "My Life Next Door", "My Life Next Door", "Samantha Reed# Jase Garrett", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Young Adult Contemporary# Contemporary Romance# Young Adult Romance# High School", "9780000000000", "English", 394, 1562 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1562, 1563, "\"Sarah", "\"Sarah", "Historical Fiction# Childrens# Fiction# Classics# Young Adult# Middle Grade# Historical# Juvenile# School# Chapter Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.78", 0, 1007 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1563, 416, "Dark Flame", "Dark Flame", "Ever Bloom# Damen Auguste# Roman# Miles# Haven Turner# Misa# Jude (The Immortals)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Magic# Urban Fantasy# Vampires", "9780000000000", "English", 320, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1564, 1565, "\"Good Night", "\"Good Night", "Historical Fiction# Fiction# Classics# Childrens# Young Adult# Historical# War# World War II# School# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1565, 257, "The Authoritative Calvin and Hobbes: A Calvin and Hobbes Treasury", "The Authoritative Calvin and Hobbes: A Calvin and Hobbes Treasury", "Calvin# Hobbes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Comics# Humor# Graphic Novels# Fiction# Graphic Novels Comics# Childrens# Comic Strips# Comedy# Comic Book# Classics", "9780000000000", "English", 254, 1566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1566, 514, "The Diviners", "The Diviners", "Jericho Jones# Evie ONeill# Will Unc Fitzgerald# Theta Knight# Memphis Campbell# Sam Lloyd# Mabel Rose", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Historical Fiction# Paranormal# Mystery# Historical# Horror# Fiction# Audiobook# Supernatural", "10000000000000", "English", 578, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1567, 310, "سیمای شکسته پدر سالار", "سیمای شکسته پدر سالار", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "9790000000000", "Persian", 367, 310 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1568, 1569, "Haroun and the Sea of Stories", "Haroun and the Sea of Stories", "Fantasy# Fiction# Young Adult# Magical Realism# Childrens# India# Literature# Novels# Classics# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1569, 1570, "\"The Call of the Wild", "\"The Call of the Wild", "Classics# Fiction# Literature# Short Stories# Adventure# Animals# Young Adult# American# Childrens# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1570, 872, "Nightfall", "Nightfall", "Shinichi# Elena Gilbert# Stefan Salvatore# Damon Salvatore# Matt Honeycutt# Bonnie McCullough# Mrs. Flowers# Caroline Forbes# Misao# Dr. Alpert# Isobel Saitou# Tami Bryce# Meredith Sulez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Magic", "9780000000000", "English", 586, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1571, 667, "Thud!", "Thud!", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Havelock Vetinari# Angua von Überwald# Fred Colon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Mystery# Comic Fantasy# Science Fiction# British Literature", "10000000000000", "English", 439, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1572, 1573, "The Lottery and Other Stories", "The Lottery and Other Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Horror# Classics# Literature# Gothic# American# Audiobook# Anthologies# 20th Century", "9780000000000", "English", 302, 274 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1573, 667, "The Light Fantastic", "The Light Fantastic", "Rincewind# Twoflower# The Luggage# DEATH# Trymon# The Librarian# Cohen the Barbarian# Bethan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Magic# Adventure# Science Fiction# Audiobook# Novels", "9780000000000", "English", 277, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1574, 1575, "The Sense of an Ending", "The Sense of an Ending", "Anthony Tony Webster# Veronica Mary Ford# Adrian Finn# Colin Simpson# Joe Hunt# Phil Dixon# Sarah Ford", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Literature# Novels# British Literature# Book Club# Adult Fiction# Audiobook# Mystery", "9780000000000", "English", 150, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1575, 1576, "Moon Palace", "Moon Palace", "Marco Stanley Fogg# Uncle Victor# Thomas Effing# Julian Barber# Kitty Wu", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# American# Contemporary# Novels# Literature# The United States Of America# Classics# 20th Century# Drama# Roman", "9780000000000", "English", 320, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1576, 396, "O Pioneers!", "O Pioneers!", "Alexandra Bergson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# Literature# American# Historical# Novels# Westerns# 20th Century# Classic Literature", "9780000000000", "English", 159, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1577, 385, "Opposition", "Opposition", "Daemon Black# Dawson Black# Bethany Williams# Archer (Lux Series)# Luc (Lux Series)# Katy Swartz# Dee Black", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Romance# Fantasy# Aliens# Science Fiction# Paranormal Romance# Supernatural# Urban Fantasy# New Adult", "9780000000000", "English", 533, 385 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1578, 47, "A Storm of Swords: Steel and Snow", "A Storm of Swords: Steel and Snow", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Adult# Dragons# Adventure# Science Fiction Fantasy# War# Epic", "9780000000000", "English", 663, 1260 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1579, 1580, "Moloka'i", "Moloka'i", "Rachel Kalama# Henry Kalama# Sarah Kalama# Kapono Uncle Pono Kalama# Haleola", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Book Club# Adult# Adult Fiction# Audiobook# Coming Of Age# Novels# Cultural", "9780000000000", "English", 405, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1580, 524, "Chain Reaction", "Chain Reaction", "Luis Fuentes# Nikki Cruz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# Realistic Fiction# High School# Contemporary Romance# Chick Lit# New Adult# Young Adult Romance# Fiction", "9780000000000", "English", 319, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1581, 830, "The Golem's Eye", "The Golem's Eye", "Bartimaeus# Kathleen Kitty Jones# Nathaniel# Rupert Devereaux# Sholto Pinn# Simpkin# Jane Farrar# Henry Duvall# Carl Mortensen# Quentin Makepeace", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Urban Fantasy# Middle Grade# Childrens# Young Adult Fantasy# Audiobook", "9780000000000", "English", 562, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1582, 1583, "Let the Great World Spin", "Let the Great World Spin", "Philippe Petit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# New York# Book Club# Novels# Contemporary# Literary Fiction# Literature# Historical# Adult Fiction", "9780000000000", "English", 351, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1583, 1584, "Common Sense", "Common Sense", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Classics# Philosophy# Politics# American History# Historical# Essays# Political Science# American Revolution", "9780000000000", "English", 104, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1584, 297, "The End of Eternity", "The End of Eternity", "Andrew Harlan# Laban Twissell# Noÿs Lambent", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Time Travel# Classics# Science Fiction Fantasy# Audiobook# Novels# Fantasy# Dystopia# Speculative Fiction", "9780000000000", "English", 192, 1585 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1585, 99, "The Vampire Armand", "The Vampire Armand", "Marius de Romanus# Bianca Solderini# Santino# Armand", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Vampires# Fantasy# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Historical Fiction# Adult", "9780000000000", "English", 457, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1586, 1587, "\"Drum Beats", "\"Drum Beats", "B07GNSYBVV", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.3", "Maria Nhambu (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1587, 1588, "Black Boy", "Black Boy", "Classics# Nonfiction# Memoir# Biography# African American# Race# Autobiography# History# School# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.07", 0, 1588 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1588, 385, "Pure", "Pure", "Leon (Covenant Series)# Aiden St. Delphi# Alexandria Alex Andros# Seth (Covenant Series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Mythology# Paranormal Romance# Urban Fantasy# Supernatural# Greek Mythology# Magic", "9780000000000", "English", 329, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1589, 1590, "Brownout - 666: or the Real Meaning of the Swastika", "Brownout - 666: or the Real Meaning of the Swastika", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Novels# Fiction# Drama# Book Club# Epic# Adult# Crime", "B07GGYBJY1", "", 605, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1590, 1591, "Ghost Story", "Ghost Story", "Edward Wanderley# Sears James# Ricky Hawthorne# Don Wanderley# Alma Mobley# Angie Maule# Stella Hawthorne# John Jaffrey# Lewis Benedikt# Eva Galli# Anna Mostyn# Ann-Veronica Moore# Milly Sheehan# Peter Barnes# Jim Hardie# Christina Barnes# Otto Gruebe# Freddy Robinson# Florence de Peyser", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Paranormal# Ghosts# Mystery# Thriller# Supernatural# Fantasy# Ghost Stories# Suspense", "9780000000000", "English", 567, 1591 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1591, 542, "Dance with the Devil", "Dance with the Devil", "Zarek of Moesia# Simi# Artemis Agrotera# Astrid (Dream Warrior)# William Jessup Brady (Sundown)# Sasha (Dance with the Devil)# Syra (Dance with the Devil)# Callyx (Dance with the Devil)# Otto Carvalletti# Clotho (mythology)# Lachesis (mythology)# Atropos (mythology)# M’Adoc# Lucian (Spawn)# Goddess Themis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Adult# Mythology# Supernatural# Fiction", "9780000000000", "English", 343, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1592, 539, "In Search of Lost Time", "In Search of Lost Time", " Richard Howard (Introduction)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " D.J. Enright (Translator)", " Terence Kilmartin (Translator)", " Andreas Mayor (Translator)", 0, 1593 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1593, 58, "Galápagos", "Galápagos", "Kilgore Trout# Leon Trotsky Trout# James Wait# Andrew MacIntosh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Classics# Humor# Literature# Novels# American# Fantasy# Dystopia# Post Apocalyptic", "9780000000000", "English", 324, 58 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1594, 1595, "The Kiss of Deception", "The Kiss of Deception", "Arabella Lia Celestine Idris Jezelia# Rafe (Remnant Chronicles)# Kaden (Remnant Chronicles)# Pauline (Remnant Chronicles)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Young Adult Fantasy# Fiction# High Fantasy# Magic# Adventure# Audiobook# Dystopia", "10000000000000", "English", 492, 1595 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1595, 1596, "The Guardian of Secrets and Her Deathly Pact", "The Guardian of Secrets and Her Deathly Pact", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# War# Adventure# Drama# Epic# Fiction# Historical# Romance# Amazon# Spain", "9780000000000", "English", 714, 1357 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1596, 1597, "The Candidate and other stories", "The Candidate and other stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Book Club# Drama# Epic# Fiction# Novels", "B07NGVDD77", "English", 192, 1597 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1597, 1598, "The True Confessions of Charlotte Doyle", "The True Confessions of Charlotte Doyle", "Charlotte Doyle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Fiction# Historical# Adventure# Childrens# Middle Grade# Classics# School# Read For School", "9780000000000", "English", 278, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1598, 43, "The Sword of Summer", "The Sword of Summer", "Annabeth Chase# Magnus Chase# Hearthstone# Blitzen# Samirah Sam Al-Abbas", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Adventure# Urban Fantasy# Magic# Childrens# Young Adult Fantasy", "9780000000000", "English", 499, 341 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1599, 679, "Buddenbrooks: The Decline of a Family", "Buddenbrooks: The Decline of a Family", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.16", " John E. Woods (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1600, 2, "The Harry Potter Collection 1-4", "The Harry Potter Collection 1-4", "Fantasy# Young Adult# Fiction# Magic# Adventure# Childrens# Classics# Novels# Science Fiction Fantasy# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.68", 0, 1601 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1601, 1602, "The Egyptian", "The Egyptian", "Akhenaten# Nefertiti# Tutankhamun# Kaptah# Ay# Horemheb# Sinuhe# Burna-Buriash II# Aziru# Tiye# Beketaten# Smenkhkare", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Classics# Historical# Egypt# Finnish Literature# Novels# Literature# Adventure# Africa", "B00OQTE64C", "English", 514, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1602, 1603, "Blood Red Road", "Blood Red Road", "Lugh# Saba# Jack# Emmi# DeMalo# Maev# Tommo# Ike", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Romance# Science Fiction# Post Apocalyptic# Adventure# Fiction# Teen# Action", "9780000000000", "English", 459, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1603, 1604, "La Vérité sur l'affaire Harry Quebert", "La Vérité sur l'affaire Harry Quebert", "Marcus Goldman# Harry Quebert# Nola Kellergan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Crime# France# Mystery Thriller# Contemporary# Suspense# Roman# Adult", "9780000000000", "French", 672, 1604 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1604, 647, "Intensity", "Intensity", "Chyna Shepherd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Suspense# Mystery# Mystery Thriller# Crime# Adult# Audiobook# Novels", "9780000000000", "English", 436, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1605, 385, "Deity", "Deity", "Aiden St. Delphi# Alexandria Alex Andros# Seth (Covenant Series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Mythology# Romance# Paranormal Romance# Greek Mythology# Urban Fantasy# Supernatural# Magic", "9780000000000", "English", 330, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1606, 1607, "God Is Not Great: How Religion Poisons Everything", "God Is Not Great: How Religion Poisons Everything", "Moses (Bible)# Joseph Stalin# Osama Bin Laden# Voltaire# Joseph Smith# Mother Teresa# Steven Seagal# Jerry Falwell# Richard Dawkins# Sam Harris# Mary# mother of Jesus (Bible)# Baruch Spinoza# E.P. Thompson# Malcolm Muggeridge# Muhammad# Stephen Jay Gould# Daniel Dennett# Jawaharlal Nehru# Karen Armstrong# Jennifer Michael Hecht# Walter Kirn# Allah# John Frum# Dalai Lama XIV# Richard Gere# Dennis Prager# Omar Khayyám# Henry VIII of England# Mahatma Gandhi# Jesus# Albert Einstein# God# Thomas Jefferson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Religion# Philosophy# Atheism# Science# History# Politics# Audiobook# Theology# Sociology", "9780000000000", "English", 307, 1607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1607, 1608, "The Daughter of Time", "The Daughter of Time", "Elizabeth of York# Henry VII of England# Richard III of England# Edward V of England# Inspector Alan Grant# Cecily Neville# Marta Hallard# Sergeant Williams# Brent Carradine# Atlanta Shergold# Sir William Harrington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Historical Fiction# Fiction# Historical# Crime# Classics# Mystery Thriller# British Literature# Historical Mystery# Detective", "10000000000000", "English", 206, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1608, 1609, "Splintered", "Splintered", "Alyssa Victoria Gardner# Jebediah Jeb Holt# Taelor Tremont# Morpheus# Alison Gardner# Thomas Gardner# Jenara Holt# Rabid White# Octobenus# Gossamer# Queen Red# Grenadine# Herman Hattington# March Hairless# Door Mouse# Sister One Twid# Sister Two Twid# Humphrey Dumpty# Ivory Queen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Retellings# Romance# Magic# Fairy Tales# Paranormal# Fiction# Adventure# Young Adult Fantasy", "9780000000000", "English", 371, 1197 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1609, 1610, "Eye for Eye", "Eye for Eye", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Epic# Contemporary# Fiction# Novels# Drama", "9780000000000", "English", 432, 1610 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1610, 1611, "The Seven Husbands of Evelyn Hugo", "The Seven Husbands of Evelyn Hugo", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Romance# Contemporary# LGBT# Adult# Audiobook# Historical# Adult Fiction# Chick Lit", "9780000000000", "English", 391, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1611, 1612, "\"Winesburg", "\"Winesburg", "Fiction# Classics# Short Stories# Literature# American# 20th Century# Literary Fiction# Novels# School# Americana", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1612, 238, "Leviathan", "Leviathan", "Deryn Sharp# Prince Aleksander", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Steampunk# Young Adult# Fantasy# Science Fiction# Historical Fiction# Fiction# Alternate History# Adventure# Historical# Teen", "9780000000000", "English", 440, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1613, 1614, "The Kitchen House", "The Kitchen House", "Ben# Marshall# Captain Pyke# Miss Martha# Lavinia McCarten# Mama Mae# Papa George# Uncle Jacob# Sukey# Campbell# Fanny# Beattie# Dory# Overseer Rankin# Sally Pyke", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Book Club# Audiobook# Adult Fiction# Adult# Southern# Novels# African American", "9780000000000", "English", 369, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1614, 1615, "Lips of a Mastodon", "Lips of a Mastodon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Mystery# Crime# Fiction# Thriller# Suspense# Psychological Thriller# Adult Fiction# Novels# Adventure", "9780000000000", "English", 226, 1615 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1615, 46, "A Wind in the Door", "A Wind in the Door", "Meg Murry# Charles Wallace Murry# Calvin OKeefe# Echthroi# Mrs. Murry# Proginoskes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Childrens# Classics# Middle Grade# Science Fiction Fantasy# Adventure# Audiobook", "9780000000000", "English", 203, 1616 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1616, 1617, "Dark Matter", "Dark Matter", "Jason Dessen# Daniela Vargas Dessen# Amanda Lucas# Charlie Dessen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Thriller# Mystery# Audiobook# Mystery Thriller# Adult# Fantasy# Science Fiction Fantasy# Suspense", "9780000000000", "English", 342, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1617, 65, "Eye of the Needle", "Eye of the Needle", "Lucy Rose# Henry Faber", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Historical Fiction# Mystery# Suspense# Espionage# Crime# Drama# War# Mystery Thriller", "9780000000000", "English", 339, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1618, 1523, "Our Mutual Friend", "Our Mutual Friend", "Jenny Wren# Jesse Hexam# Lizzie Hexam# Charley Hexam# Roger Riderhood# Pleasant Riderhood# John Harmon# Bella Wilfer# Hamilton Veneering# Anastatia Veneering# Melvin Twemlow# Eugene Wrayburn# Mortimer Lightwood# Lady Tippins# John Podsnap# Mrs. Podsnap# Georgiana Podsnap# Nicodemus Boffin# Henrietta Boffin# Reginald Wilfer# Mrs. Wilfer# Lavinia Wilfer# Alfred Lammle# Sophronia Lammle# Abbey Potterson# Bob Gliddery# Silas Wegg# Mr. Venus# George Sampson# Bradley Headstone# Emma Peecher# Sloppy# Betty Higden# Mr. Fledgeby# Mr. Riah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Victorian# 19th Century# British Literature# Historical Fiction# Classic Literature# Novels# Audiobook", "9780000000000", "English", 801, 161 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1619, 1620, "The Winner's Curse", "The Winner's Curse", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Dystopia# Young Adult Fantasy# Fiction# High Fantasy# Historical Fiction# Historical# War", "9780000000000", "English", 355, 363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1620, 30, "Xenocide", "Xenocide", "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Young Adult# Audiobook# Aliens# Space# Novels# Space Opera", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.8", 0, 1621 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1621, 650, "The Earthsea Trilogy", "The Earthsea Trilogy", "Lebannen# Ged", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Science Fiction Fantasy# Science Fiction# Classics# Epic Fantasy# Magic# Dragons# Speculative Fiction", "9780000000000", "English", 478, 1622 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1622, 1623, "Nickel and Dimed: On (Not) Getting by in America", "Nickel and Dimed: On (Not) Getting by in America", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Sociology# Politics# Economics# Memoir# Social Justice# Poverty# School# Social Issues# Adult", "9780000000000", "English", 240, 1623 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1623, 1063, "Annabel Horton: Lost Witch of Salem", "Annabel Horton: Lost Witch of Salem", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Epic# Paranormal# Witches# Fiction# Fantasy# Historical Fiction", "9780000000000", "English", 402, 1624 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1624, 1625, "The Wrath and the Dawn", "The Wrath and the Dawn", "Shahrzad al-Khayzuran# Khalid Ibn al-Rashid# Tariq Imran al-Ziyad# Jahandar al-Khayzuran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Retellings# Fiction# Young Adult Fantasy# Magic# Historical Fiction# Fairy Tales# Historical", "9780000000000", "English", 404, 496 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1625, 314, "The Lords of Discipline", "The Lords of Discipline", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Military Fiction# Southern# Literature# Coming Of Age# Literary Fiction# Novels# Audiobook# Contemporary", "9780000000000", "English", 512, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1626, 1067, "Existence", "Existence", "Pagan# Dank# Leif", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Young Adult# Romance# Fantasy# Paranormal Romance# Supernatural# Ghosts# Urban Fantasy# Angels# New Adult", "B006LFVZ8E", "English", 161, 1627 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1627, 1628, "After", "After", "Hardin Scott# Tessa Young# Noah Roberts# Landon Gibson# Steph", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# College# Fiction# Contemporary Romance# Audiobook# Love# Adult", "9780000000000", "English", 582, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1628, 1629, "Tell the Wolves I'm Home", "Tell the Wolves I'm Home", "June Elbus# Greta Elbus# Finn Weiss# Toby Aldshaw# Dani Elbus", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Historical Fiction# Contemporary# Coming Of Age# LGBT# Adult# Adult Fiction# Realistic Fiction# Book Club", "9780000000000", "English", 360, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1629, 506, "Faith of the Fallen", "Faith of the Fallen", "Richard Cypher# Kahlan Amnell# Lord Rahl", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Magic# Epic# Adventure# Romance# Adult", "9780000000000", "English", 785, 1630 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1630, 588, "The Reptile Room", "The Reptile Room", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Audiobook# Humor# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 517 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1631, 1086, "Finnikin of the Rock", "Finnikin of the Rock", "Finnikin# Trevanion# Sir Topher# Evanjalin# Froi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Adventure# Fiction# Young Adult Fantasy# High Fantasy# Magic# Teen# Epic Fantasy", "9780000000000", "English", 416, 1632 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1632, 321, "The Mill on the Floss", "The Mill on the Floss", "Classics# Fiction# 19th Century# Literature# Victorian# British Literature# Historical Fiction# Novels# Classic Literature# English Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.8", 0, 1633 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1633, 859, "Reckless", "Reckless", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Music# Adult# Chick Lit# Erotica# Young Adult# Love", "B0092PUTZK", "English", 546, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1634, 1635, "Defending Jacob", "Defending Jacob", "Andy Barber# Jacob Barber# Laurie Barber# Ben Rifkin# Dan Rifkin# Jonathan Klein# Neal Logiudice# Father OLeary# Paul Duffy# Derek Yoo# Leonard Patz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Crime# Suspense# Mystery Thriller# Audiobook# Book Club# Drama# Adult Fiction", "9780000000000", "English", 421, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1635, 1133, "Twilight", "Twilight", "Hector de Silva (Jesse)# Susannah Suze Simon# Paul Slater# Kelly Prescott# Father Dominic# Jake Ackerman (Sleepy)# Brad Ackerman (Dopey)# David Ackerman (Doc)# Sister Ernestine", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Supernatural# Fiction# Teen# Chick Lit# Mystery", "9780000000000", "English", 312, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1636, 1637, "\"The Road Less Traveled: A New Psychology of Love", "\"The Road Less Traveled: A New Psychology of Love", "Psychology# Nonfiction# Self Help# Spirituality# Philosophy# Personal Development# Inspirational# Religion# Classics# Relationships", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1637, 1638, "Eon: Dragoneye Reborn", "Eon: Dragoneye Reborn", "Dillon Walsh# Eona# Rilla# Chart# Ryoko# Lady Jila# Lord Ido", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dragons# Magic# Fiction# Young Adult Fantasy# High Fantasy# Adventure# Mythology# Teen", "9780000000000", "English", 531, 924 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1638, 1639, "Wives and Daughters", "Wives and Daughters", "Classics# Fiction# Romance# Historical Fiction# 19th Century# Victorian# Literature# Historical# British Literature# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 1639 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1639, 110, "Heart of a Dog", "Heart of a Dog", "Fiction# Russia# Classics# Russian Literature# Science Fiction# Literature# Novels# Fantasy# 20th Century# Humor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 109 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1640, 554, "The Rise of Nine", "The Rise of Nine", "Marina Marchetti# Sarah Hart# Sam Goode# Bernie Kosar# Mogadorians# Number 6# John Smith (Pittacus Lore)# Number 9# Number 8", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Aliens# Fiction# Adventure# Paranormal# Romance# Action# Teen", "9780000000000", "English", 372, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1641, 112, "Doctor Sleep", "Doctor Sleep", "Wendy Torrance# Danny Torrance# Dick Halloran# Abra Stone# Jack Torrance# Rose the Hat", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Fantasy# Paranormal# Audiobook# Supernatural# Mystery# Suspense# Adult", "9780000000000", "English", 531, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1642, 1643, "The Steps: 12 Secrets To Raising Happy and Successful Kids", "The Steps: 12 Secrets To Raising Happy and Successful Kids", "Parenting", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B07X21WZ5B", "English", "4.65", 0, 1643 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1643, 1644, "The Testing", "The Testing", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.04", " Amélie Hesnard\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1644, 1645, "The City of Dreaming Books", "The City of Dreaming Books", "Fantasy# Fiction# Books About Books# German Literature# Humor# Young Adult# Adventure# Science Fiction Fantasy# Adult# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.37", 0, 1645 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1645, 168, "The Return of the Native", "The Return of the Native", "Classics# Fiction# Literature# 19th Century# Victorian# British Literature# Historical Fiction# Novels# Romance# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.86", 0, 256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1646, 1079, "The Fall of the House of Usher and Other Tales", "The Fall of the House of Usher and Other Tales", "Classics# Horror# Fiction# Short Stories# Gothic# Literature# Mystery# Fantasy# Poetry# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1647, 604, "More Than This", "More Than This", "Seth Wearing", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# LGBT# Fiction# Dystopia# Fantasy# Mystery# Contemporary# Queer# Teen", "9780000000000", "English", 480, 173 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1648, 1649, "To Say Nothing of the Dog", "To Say Nothing of the Dog", "Ned Henry# Verity Kindle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Time Travel# Fiction# Historical Fiction# Fantasy# Humor# Historical# Mystery# Science Fiction Fantasy# Romance", "9780000000000", "English", 512, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1649, 804, "The House at Riverton", "The House at Riverton", "Grace Bradley# Hannah Hartford# Emmeline Hartford# Robbie Hunter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Mystery# Historical# Romance# Gothic# British Literature# Adult# Adult Fiction# Audiobook", "9780000000000", "English", 599, 1650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1650, 332, "The Rainmaker", "The Rainmaker", "Rudy Baylor# J. Lyman Stone# Deck Shifflet# Leo F. Drummond# Kelly Riker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Legal Thriller# Suspense# Crime# Mystery Thriller# Law# Drama# Novels", "9780000000000", "English", 419, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1651, 530, "Dreamland", "Dreamland", "Caitlin OKoren# Rogerson Biscoe# Boo Connel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Realistic Fiction# Chick Lit# Abuse# Teen# Young Adult Contemporary# High School", "9780000000000", "English", 250, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1652, 872, "The Forbidden Game", "The Forbidden Game", "Julian Stone# Zach Taylor# Jenny Thornton# Tom Locke# Audrey Myers# Dee Eliade# Michael Cohen# Summer Parker-Pearson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Supernatural# Horror# Fiction# Magic# Urban Fantasy# Paranormal Romance", "9780000000000", "English", 750, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1653, 1533, "The Thief", "The Thief", "Eugenides# The Magus# Eddis# Sophos", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Adventure# Historical Fiction# Young Adult Fantasy# High Fantasy# Mythology# Historical# Audiobook", "9780000000000", "English", 280, 1533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1654, 343, "Warbreaker", "Warbreaker", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Adult# Audiobook# Magic# Science Fiction Fantasy# Romance# Adventure", "10000000000000", "English", 688, 1655 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1655, 977, "Salt to the Sea", "Salt to the Sea", "Joana# Alfred Frick# Florian Beck# Emilia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Historical# Fiction# World War II# War# Audiobook# Romance# Teen# Survival", "9780000000000", "English", 391, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1656, 687, "The Long Goodbye", "The Long Goodbye", "Candy# Philip Marlowe# Roger Wade# Eileen Wade# Sewell Endicott# Terry Lennox# Howard Spencer# Harlan Potter# Linda Loring# Dr. Edward Loring# Dr. Verringer# Bernie Ohls# George Peters# Mendy Menendez# Chick Agostino# Lonnie Morgan# Sergeant Green# Captain Gregorius# Detective Dayton# Mr. Grenz# Dr. Lester Vukanich# Dr. Amos Varley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Noir# Classics# Detective# Mystery Thriller# Novels# Thriller# Hard Boiled", "9780000000000", "English", 379, 1657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1657, 438, "This Girl", "This Girl", "Layken Cohen# Will Cooper", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# Fiction# Chick Lit# Love# Realistic Fiction# Poetry", "B00BOVFLD0", "English", 304, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1658, 1659, "Nevermore", "Nevermore", "Varen Nethers# Isobel Lanley# Gwen Daniels# Reynolds", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Paranormal Romance# Supernatural# Horror# Urban Fantasy# Fiction# Ghosts", "9780000000000", "English", 543, 1186 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1659, 1660, "Amy & Roger's Epic Detour", "Amy & Roger's Epic Detour", "Amy Curry# Roger Sullivan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Road Trip# Fiction# Realistic Fiction# Travel# Young Adult Contemporary# Chick Lit# Adventure", "9780000000000", "English", 343, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1660, 863, "Rise of the Evening Star", "Rise of the Evening Star", "Kendra Sorenson# Seth Sorenson# Casey Hancock# Errol Fisk# Tanugatoa Dufu# Dale# Warren# Coulter Dixon# Vanessa Santoro# Stan Sorenson Grandpa# Hugo# Mr. Lich# The Sphinx# Shiara", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Adventure# Magic# Childrens# Juvenile# Young Adult Fantasy# Science Fiction Fantasy", "9780000000000", "English", 456, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1661, 1662, "Night Watch", "Night Watch", "Fantasy# Urban Fantasy# Fiction# Horror# Vampires# Paranormal# Russia# Supernatural# Science Fiction# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 1662 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1662, 1663, "The Fall of Hyperion", "The Fall of Hyperion", "Martin Silenus# Sol Weintraub# Consul# The Shrike# Rachel Weintraub# Brawne Lamia# Fedmahn Kassad# Meina Gladstone# Melio Arundez# Tyrena Wingreen-Feif# John Keats", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Space Opera# Science Fiction Fantasy# Time Travel# Audiobook# Space# Speculative Fiction# Horror", "9780000000000", "English", 517, 656 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1663, 656, "Ship of Magic", "Ship of Magic", "Althea Vestrit# Ephron Vestrit# Ronica Vestrit# Keffria Vestrit# Kyle Haven# Wintrow Vestrit# Malta Vestrit# Vivacia# Paragon# Brashen Trell# Amber (Liveship Traders)# Kennit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Dragons# Magic# Adult# Pirates", "9780000000000", "English", 880, 1238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1664, 55, "Little Dorrit", "Little Dorrit", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Helen Small (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1665, 1373, "Slave to Sensation", "Slave to Sensation", "Sascha Duncan# Lucas Hunter# Brenna Shane Kincaid# Judd Lauren# Clay Bennett# Mercy Smith# Hawke Snow# Walker Lauren# Sienna Lauren# Nate Ryder# Tamsyn Mahaire# Dorian Christensen# Kit Monahan# Nikita Duncan# Vaughn DAngelo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Paranormal# Paranormal Romance# Fantasy# Urban Fantasy# Shapeshifters# Adult# Science Fiction# Fiction# Supernatural", "10000000000000", "English", 334, 1373 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1666, 1667, "Daddy-Long-Legs", "Daddy-Long-Legs", "Jerusha Judy Abbott# Jervis Pendleton# Jimmy McBride# Julia Pendleton# Sallie McBride", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Romance# Historical Fiction# Childrens# Historical# Novels# Coming Of Age# Humor", "10000000000000", "English", 249, 730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1667, 1668, "The Sight", "The Sight", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Animals# Fiction# Wolves# Adventure# Childrens# Animal Fiction# Magic# Young Adult Fantasy", "9780000000000", "English", 486, 1668 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1668, 93, "We the Living", "We the Living", "Fiction# Classics# Philosophy# Historical Fiction# Literature# Politics# Russia# Novels# Historical# Dystopia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 1321 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1669, 365, "Beautiful Chaos", "Beautiful Chaos", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.93", " Paz Pruneda (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1670, 514, "The Sweet Far Thing", "The Sweet Far Thing", "Gemma Doyle# Kartik# Ann Bradshaw# Felicity Worthington# Pippa Cross", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Historical Fiction# Historical# Fiction# Romance# Paranormal# Magic# Young Adult Fantasy# Teen", "9780000000000", "English", 819, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1671, 1672, "The Coincidence of Callie & Kayden", "The Coincidence of Callie & Kayden", "Kayden Owens# Callie Lawrence", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# College# Contemporary Romance# Abuse# Fiction# Chick Lit# Love", "B00ANDLC6K", "English", 283, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1672, 1076, "The Cadaver Factory", "The Cadaver Factory", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Contemporary# Mystery# Science Fiction# Crime# Thriller# Suspense", "9780000000000", "English", 52, 1673 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1673, 12, "The Long Dark Tea-Time of the Soul", "The Long Dark Tea-Time of the Soul", "Dirk Gently# Thor# Kate Schechter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Science Fiction# Humor# Mystery# Comedy# Science Fiction Fantasy# Audiobook# Novels# British Literature", "9780000000000", "English", 307, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1674, 530, "Someone Like You", "Someone Like You", "Halley Cooke# Scarlett Thomas# Macon Faulkner# Michael Sherwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Teen# Young Adult Contemporary# High School# Coming Of Age", "9780000000000", "English", 281, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1675, 1676, "Explosion in Paris", "Explosion in Paris", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Chick Lit# Adult# Mystery# Nonfiction", "9780000000000", "English", 408, 1676 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1676, 343, "Oathbringer", "Oathbringer", "Kaladin Stormblessed# Dalinar Kholin# Shallan Davar# Adolin Kholin# Hoid# Lift", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Audiobook# Adult# Magic# Epic# Science Fiction Fantasy# Adventure", "9780000000000", "English", 1243, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1677, 371, "Lord of Chaos", "Lord of Chaos", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# Matrim Cauthon# Min Farshaw# Elayne Trakand# Aviendha# Siuan Sanche# Birgitte Silverbow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 1011, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1678, 1679, "Our Town", "Our Town", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.67", " Tappan Wilder (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1679, 47, "A Song of Ice and Fire", "A Song of Ice and Fire", "Tyrion Lannister# Arya Stark# Khal Drogo# Aerys Targaryen II# Aegon Targaryen# Jon Snow# Jaime Lannister# Cersei Lannister# Petyr Baelish# Sansa Stark# Varys# Brienne of Tarth# Samwell Tarly# Arianne Martell# Victarion Greyjoy# Asha Greyjoy# Pyp# Tommen Baratheon# Brandon Stark# Catelyn Stark# Daenerys Targaryen# Robb Stark# Joffrey Baratheon# Tywin Lannister# Stannis Baratheon# Melisandre# Davos Seaworth# Lysa Arryn# Hodor# Sandor Clegane# Jorah Mormont# Grenn# Oswell Kettleback# Theon Greyjoy# Euron Greyjoy# Margaery Tyrell# Robert Baratheon# Ser Gregor Clegane# Qyburn# Lord Bronn# Walder Frey# Eddard Stark# Yara Greyjoy# Jory Cassel# Viserys Targaryen# Olenna Tyrell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Science Fiction Fantasy# Adventure# Novels# Dragons# Science Fiction# Epic Fantasy# Epic# Adult", "9780000000000", "English", 5216, 1680 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1680, 25, "By the River Piedra I Sat Down and Wept", "By the River Piedra I Sat Down and Wept", "Fiction# Romance# Philosophy# Novels# Spirituality# Contemporary# Inspirational# Literature# Love# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.57", 0, 354 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1681, 1331, "A Gracious Enemy 'storytelleruk2019'", "A Gracious Enemy 'storytelleruk2019'", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Book Club# Contemporary# Novels# Epic# Fiction", "10000000000000", "", 503, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1682, 506, "Stone of Tears", "Stone of Tears", "Richard Cypher# Kahlan Amnell# Zeddicus Zul Zorander", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Magic# Adventure# Romance# Adult# Epic", "9780000000000", "English", 703, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1683, 1684, "The House on Mango Street", "The House on Mango Street", "Esperanza# Nenny", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Classics# Short Stories# School# Coming Of Age# Read For School# Realistic Fiction# Contemporary# Poetry", "9780000000000", "English", 110, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1684, 1685, "Carnal: Somewhere Over 40 Winks", "Carnal: Somewhere Over 40 Winks", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Psychology", "9780000000000", "English", 222, 1685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1685, 1686, "Gates of Fire", "Gates of Fire", "Leonidas# Xerxes I of Persia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# War# Historical# Military Fiction# Novels# Greece# Fantasy# Literature# Ancient History", "9780000000000", "English", 392, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1686, 1687, "The Dragonbone Chair", "The Dragonbone Chair", "", new DateTime(2022, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Dragons# Epic# Magic# Adult", "9780000000000", "English", 672, 1687 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1687, 803, "Son of the Shadows", "Son of the Shadows", "Hugh of Harrowfield# Bran# Sorcha# Fat Janis# Niamh# Ciaran# Liadan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Historical Fiction# Fiction# Historical# Magic# Adult# Historical Fantasy# Young Adult# Science Fiction Fantasy", "9780000000000", "English", 608, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1688, 1689, "The Orb of Truth", "The Orb of Truth", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Christian# Christian Fiction# High Fantasy# Epic Fantasy# Christian Fantasy", "9780000000000", "English", 242, 1689 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1689, 1690, "Os Maias", "Os Maias", "Classics# Portuguese Literature# Fiction# Romance# Portugal# School# Literature# 19th Century# Historical Fiction# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Portuguese", "4.02", 0, 1690 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1690, 112, "Bag of Bones", "Bag of Bones", "Mike Noonan# Mattie Devore# Kyra Devore# Max Devore# Jo Noonan# Sara Tidwell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Mystery# Fantasy# Paranormal# Suspense# Supernatural# Ghosts# Adult", "9780000000000", "English", 736, 1691 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1691, 645, "Wild Magic", "Wild Magic", "Veralidaine Sarrasri# Numair Salmalín# Alanna of Trebond# George Cooper# Jonathan of Conte# Onua Chamtong", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Adventure# High Fantasy# Dragons# Science Fiction Fantasy# Teen", "9780000000000", "English", 362, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1692, 1693, "\"So Long", "\"So Long", "Science Fiction# Fiction# Humor# Fantasy# Comedy# Science Fiction Fantasy# Classics# Audiobook# Novels# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B001OF5F1E", "English", "4.1", 0, 1693 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1693, 1694, "Child 44", "Child 44", "Leo Demidov# Vasili Nikitin# Maj. Kuzmin# Raisa Demidov# Dr. Zarubin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Mystery# Thriller# Crime# Russia# Historical# Mystery Thriller# Audiobook# Suspense", "9780000000000", "English", 509, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1694, 1695, "Confessions", "Confessions", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.92", " Albert Cook Outler (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1695, 76, "House Rules", "House Rules", "Emma Hunt# Theo Hunt# Jacob Hunt# Rich Matson# Oliver Bond# Jess Ogilvy# Mark Maguire# Judge Cuttings# Helen Sharp", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Contemporary# Adult Fiction# Adult# Chick Lit# Drama# Aspergers# Realistic Fiction# Family", "9780000000000", "English", 532, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1696, 1697, "Tales of the City", "Tales of the City", "Mary Ann Singleton# Michael Tolliver# Anna  Madrigal# Mona Ramsey# Brian Hawkins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# LGBT# Queer# Humor# Gay# Classics# Contemporary# Novels# American# Literature", "9780000000000", "English", 272, 100 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1697, 1698, "Grave Mercy", "Grave Mercy", "Ismae Rienne# Gavriel Duval", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Historical Fiction# Romance# Historical# Fiction# Paranormal# Young Adult Fantasy# Adventure# Mystery", "9780000000000", "English", 549, 81 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1698, 237, "The Raven King", "The Raven King", "Blue Sargent# Richard Dick Campbell Gansey III# Adam Parrish# Ronan Lynch# Noah (The Raven Cycle)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# LGBT# Romance# Fiction# Magic# Urban Fantasy# Audiobook# Young Adult Fantasy", "9780000000000", "English", 439, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1699, 351, "The Rules of Attraction", "The Rules of Attraction", "Patrick Bateman# Sean Bateman# Lauren Hynde# Paul Denton# Victor Johnson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# LGBT# American# Literature# Thriller# Dark# Adult# Literary Fiction", "9780000000000", "English", 283, 1700 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1700, 1019, "Beyond the Shadows", "Beyond the Shadows", "Azoth# Durzo Blint# Elene Cromwyll# Logan Gyre# Viridiana Sovari# Gwinvere Kirena# Feir Cousat# Dorian Ursuul# Brant Agon# Lantano Garuwashi# Solonariwan Tofusin# Jenine Gyre# Ariel Wyant# Neph Dada", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Magic# High Fantasy# Adventure# Science Fiction Fantasy# Dark Fantasy# Epic# Adult", "9780000000000", "English", 689, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1701, 1133, "Avalon High", "Avalon High", "Elaine Harrison# A. William Wagner# Jennifer Gold# Lance Reynolds# Mr. Morton (Avalon High)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Chick Lit# Fiction# Teen# Mythology# Retellings# Paranormal# Contemporary", "9780000000000", "English", 288, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1702, 1703, "ساق البامبو", "ساق البامبو", "Novels# Fiction# Literature# Contemporary# Drama# Social", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Arabic", "4.22", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1703, 433, "Reached", "Reached", "Cassia Reyes# Ky Markham# Xander Carrow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Fantasy# Teen# Audiobook# Adventure# Post Apocalyptic", "9780000000000", "", 512, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1704, 1660, "Since You've Been Gone", "Since You've Been Gone", "Emily Hughes# Frank Porter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Young Adult# Romance# Fiction# Young Adult Contemporary# Realistic Fiction# Chick Lit# Audiobook# Mystery# Coming Of Age", "9780000000000", "English", 449, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1705, 1706, "Tangled", "Tangled", "Drew Evans# Katherine Brooks", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Contemporary Romance# New Adult# Humor# Adult# Chick Lit# Erotica# Fiction# Erotic Romance", "B00DJWV11I", "English", 254, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1706, 1707, "Making Faces", "Making Faces", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Young Adult# Contemporary Romance# Military Fiction# Fiction# New Adult# War# Drama# High School", "10000000000000", "English", 405, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1707, 277, "The Sword in the Stone", "The Sword in the Stone", "Merlin# King Arthur", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Classics# Fiction# Historical Fiction# Arthurian# Childrens# Young Adult# Mythology# Adventure# Historical", "9780000000000", "English", 352, 1708 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1708, 1709, "Oranges Are Not the Only Fruit", "Oranges Are Not the Only Fruit", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# LGBT# Queer# Contemporary# Classics# Feminism# Religion# Novels# Lesbian# British Literature", "10000000000000", "English", 176, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1709, 1259, "The Grand Delusion", "The Grand Delusion", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Psychology# Fiction", "9780000000000", "English", 410, 1710 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1710, 748, "P.S. I Still Love You", "P.S. I Still Love You", "Josh# Kitty# Margot# Lara Jean# Peter Kavinsky", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Audiobook# Chick Lit# Young Adult Contemporary# Realistic Fiction# High School# Young Adult Romance", "9780000000000", "English", 337, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1711, 446, "The Brothers Lionheart", "The Brothers Lionheart", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.35", " Jill M. Morgan (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1712, 1713, "Bloodlines", "Bloodlines", "Keira Jameson# Lily Tierney# Eligos# Lucian Turner# Tyler Rickman# Danny Goodwin# Jake Culver", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Vampires# Horror# Fantasy# Romance# Supernatural# Paranormal Romance# Urban Fantasy# Young Adult Paranormal", "9780000000000", "English", 320, 1713 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1713, 431, "Along Came a Spider", "Along Came a Spider", "Alex Cross# Gary Soneji# Gary Murphy# Regina Nana Mama Cross", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Suspense# Mystery Thriller# Detective# Adult# Murder Mystery# Audiobook", "9780000000000", "English", 449, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1714, 1141, "Heist Society", "Heist Society", "Gabrielle# Simon# Katarina Bishop# W.W. Hale the Fifth# Arturo Taccone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Contemporary# Romance# Fiction# Adventure# Teen# Chick Lit# Crime# Realistic Fiction", "9780000000000", "English", 287, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1715, 1716, "Black Hawk Down: A Story of Modern War", "Black Hawk Down: A Story of Modern War", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Military Fiction# War# Military History# Africa# American History# Historical# Politics# Somalia", "9780000000000", "English", 386, 601 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1716, 667, "Equal Rites", "Equal Rites", "The Librarian# Eskarina Smith# Cutangle# Simon (Equal Rites)# Treatle# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Magic# Witches# Audiobook# Science Fiction# Novels", "9780000000000", "English", 228, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1717, 347, "The Sign of Four", "The Sign of Four", "Classics# Mystery# Fiction# Crime# Detective# Audiobook# Mystery Thriller# 19th Century# Historical Fiction# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 286 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1718, 236, "Hannibal", "Hannibal", "Hannibal Lecter# Clarice Starling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Crime# Mystery# Suspense# Novels# Mystery Thriller# Drama# Psychological Thriller", "9780000000000", "English", 564, 516 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1719, 1720, "Lord Jim", "Lord Jim", "Charles Marlow# Jim", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Adventure# Novels# Historical Fiction# British Literature# Classic Literature# Literary Fiction# 20th Century", "9780000000000", "English", 455, 1720 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1720, 1019, "Shadow's Edge", "Shadow's Edge", "Azoth# Elene Cromwyll# Jarl# Logan Gyre# Viridiana Sovari# Gwinvere Kirena# Ulyssandra# Dorian Ursuul# Ariel Wyant# Neph Dada", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Magic# High Fantasy# Adventure# Science Fiction Fantasy# Dark Fantasy# Adult# Action", "9780000000000", "English", 636, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1721, 210, "Sphere", "Sphere", "Beth Halpern# Norman Johnson# Ted Fielding# Harry Adams", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Thriller# Horror# Suspense# Science Fiction Fantasy# Mystery# Novels# Adventure# Fantasy", "10000000000000", "English", 371, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1722, 1723, "The Rise and Fall of the Third Reich: A History of Nazi Germany", "The Rise and Fall of the Third Reich: A History of Nazi Germany", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# World War II# War# Politics# Germany# Historical# Military Fiction# Holocaust# Military History", "9780000000000", "English", 1614, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1723, 1724, "Significance", "Significance", "Maggie Masters# Caleb Jacobson# Kyle Jacobson", new DateTime(2022, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Paranormal# Young Adult# Romance# Fantasy# Paranormal Romance# Supernatural# New Adult# Magic# Contemporary# Young Adult Paranormal", "9780000000000", "English", 387, 1724 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1724, 1725, "The Snowman", "The Snowman", "Mystery# Crime# Fiction# Thriller# Mystery Thriller# Scandinavian Literature# Suspense# Detective# Nordic Noir# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 1725 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1725, 77, "The Twits", "The Twits", "Childrens# Fiction# Fantasy# Classics# Humor# Young Adult# Middle Grade# Novels# British Literature# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 1237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1726, 564, "Enna Burning", "Enna Burning", "Razo# Geric# Enna# Princess Anidori-Kiladra# Finn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Fairy Tales# Adventure# Magic# Young Adult Fantasy# Teen# Middle Grade", "9780000000000", "English", 317, 564 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1727, 1728, "The Second Sex", "The Second Sex", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.13", " Deirdre Bair (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1728, 22, "Free Four: Tobias Tells the Divergent Knife-Throwing Scene", "Free Four: Tobias Tells the Divergent Knife-Throwing Scene", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Short Stories# Science Fiction# Fantasy# Fiction# Romance# Novella# Post Apocalyptic# Teen", "9780000000000", "English", 43, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1729, 1730, "A Hunger Like No Other", "A Hunger Like No Other", "Lachlain MacRieve# Emmaline Troy# Myst# the Coveted# Phenïx Nïx# The Ever-Knowing# King Kristoff# Nikolai Wroth", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Vampires# Fantasy# Urban Fantasy# Adult# Werewolves# Shapeshifters# Supernatural", "9780000000000", "English", 360, 1730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1730, 1248, "Rage of Angels", "Rage of Angels", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Romance# Suspense# Mystery Thriller# Crime# Drama# Novels# Adult", "9780000000000", "English", 512, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1731, 1732, "Stones (One True Child #5)", "Stones (One True Child #5)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Novels# Fiction# Drama# Contemporary", "B07NDB7LQ5", "", 327, 1732 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1732, 1733, "The Hot Zone: The Terrifying True Story of the Origins of the Ebola Virus", "The Hot Zone: The Terrifying True Story of the Origins of the Ebola Virus", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Science# History# Medical# Medicine# Horror# Thriller# Health# Africa# Biology", "9780000000000", "English", 352, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1733, 1734, "The Tattooist of Auschwitz", "The Tattooist of Auschwitz", "Lale Sokolov# Gita Sokolov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Audiobook# World War II# Holocaust# War# Romance# Adult# Adult Fiction", "9780000000000", "English", 262, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1734, 1735, "Follow the River", "Follow the River", "Mary Ingles# Will Ingles# Gander Jack# Henry Lenard# Otter Girl# Mister Harmon# Adam Harmon# Captain Wildcat# Johnny Draper# William Ingles# Blue Ridge# Bettie Draper# Colonel Patton# Bettie Elenor# Colonel Washington# Captain Buchanan# John Ingles# Dunkards Bottom# Elenor Draper# Mary Draper Ingles# Philip Lybrook# Casper Barrier# Snake Stick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Adventure# Survival# American History# Book Club# Westerns# Adult Fiction# Adult", "9780000000000", "English", 406, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1735, 1736, "Baby", "Baby", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Horror# Aliens# Fantasy# Thriller# Dystopia# Paranormal# Fiction# Dark# Wildlife", "B0092PLG16", "English", 173, 1736 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1736, 1737, "El túnel", "El túnel", "Fiction# Classics# Spanish Literature# Novels# Literature# Latin American# Latin American Literature# School# 20th Century# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Spanish", "4.05", 0, 1737 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1737, 207, "The Constant Princess", "The Constant Princess", "Catherine of Aragon# Arthur# Prince of Wales# Henry VII of England# Henry VIII of England# Margaret Beaufort# Margaret Pole# Countess of Salisbury", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Romance# Tudor Period# British Literature# Adult# Historical Romance# Adult Fiction# Audiobook", "9780000000000", "English", 390, 76 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1738, 1739, "Shadowland", "Shadowland", "Young Adult# Fantasy# Paranormal# Romance# Ghosts# Fiction# Supernatural# Mystery# Chick Lit# Teen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 1739 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1739, 1740, "\"Fruits Basket", "\"Fruits Basket", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.24", " Athena Nibley (Translator)\"", " Alethea Nibley (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1740, 1741, "Under the Volcano", "Under the Volcano", "Geoffrey Firmin# Yvonne Constable# Hugh Firmin# Jacques Laruelle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# British Literature# 20th Century# Historical Fiction# Literary Fiction# Unfinished# English Literature", "9780000000000", "English", 397, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1741, 698, "Fade Out", "Fade Out", "Michael Glass# Shane Collins# Eve Rosser# Claire Danvers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Teen", "9780000000000", "English", 237, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1742, 1743, "The Silent Patient", "The Silent Patient", "Alicia Berenson# Theo Faber# Kathy Faber# Professor Lazarus Diomedes# Gabe Berenson# Max Berenson# Christian West", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Mystery Thriller# Audiobook# Suspense# Crime# Adult# Psychological Thriller# Contemporary", "9780000000000", "English", 325, 1743 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1743, 847, "The Electric Kool-Aid Acid Test", "The Electric Kool-Aid Acid Test", "Ken Kesey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Classics# Journalism# Biography# Memoir# Literature# American# Cultural# Counter Culture", "9780000000000", "English", 416, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1744, 1720, "Heart of Darkness and The Secret Sharer", "Heart of Darkness and The Secret Sharer", "Charles Marlow# Kurtz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# School# Africa# Historical Fiction# Novels# Read For School# Classic Literature# High School", "9780000000000", "English", 176, 70 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1745, 394, "The Testament", "The Testament", "Fiction# Thriller# Mystery# Legal Thriller# Suspense# Crime# Mystery Thriller# Law# Adult Fiction# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.86", 0, 1746 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1746, 144, "These Happy Golden Years", "These Happy Golden Years", "Classics# Historical Fiction# Childrens# Fiction# Young Adult# Historical# Middle Grade# Romance# Juvenile# Family", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.19", 0, 1643 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1747, 97, "The House at Pooh Corner", "The House at Pooh Corner", "Classics# Childrens# Fiction# Fantasy# Animals# Audiobook# Picture Books# Young Adult# Middle Grade# Short Stories", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 1069 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1748, 542, "Night Play", "Night Play", "Nicholas Ambrosius Gautier# Wren Tigarian# Kyrian of Thrace# Amanda Devereaux# Tabitha Devereaux Magnus# Vane Kattalakis# Bride McTierney# Grace Alexander# Aimee Peltier# Fang Kattalakis# Simi# Cherise Nicole Gautier# Devereaux Aubert Peltier# Colt Theodorakopolis# Kyle Peltier# Yasmina Devereaux# Jasyn Kallinos# Aubert Peltier (Papa Bear)# Nicolette Peltier (Mama Lo)# Remi Peltier# Marissa Hunter# Julian of Macedonia (Hunter Legends series)# Fury Kattalakis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Shapeshifters# Adult# Mythology# Fiction", "9780000000000", "English", 362, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1749, 1339, "The Novice", "The Novice", "Sonea# Rothen# Akkarin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Magic# Young Adult# Fiction# High Fantasy# Epic Fantasy# Adventure# Science Fiction Fantasy# Romance# Adult", "9780000000000", "English", 577, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1750, 1751, "The Tea Rose", "The Tea Rose", "Jack the Ripper# Fiona Finnegan# Joe Bristow# Nicholas Soames# William McClane# Seamie Finnegan# Millie Peterson# Michael Finnegan# Patrick Finnegan# Charlie Finnegan# Kate Finnegan# Roddy OMeara# Bowler Sheehan# Sid Malone# Nate Feldman# Madalena Feldman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Fiction# Historical# Historical Romance# Adult# British Literature# Mystery# Chick Lit# 19th Century", "9780000000000", "English", 675, 1751 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1751, 25, "Brida", "Brida", "Fiction# Fantasy# Philosophy# Novels# Romance# Spirituality# Inspirational# Literature# Magical Realism# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Portuguese", "3.48", 0, 1752 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1752, 1753, "Raintree County", "Raintree County", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Classics# Novels# Romance# Historical# War# Civil War# American# Literary Fiction", "9780000000000", "English", 1088, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1753, 1754, "Bumi Manusia", "Bumi Manusia", "Minke# Nyai Ontosoroh# Annelies", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Novels# Indonesian Literature# Literature# Classics# Asia# Romance# Historical# Asian Literature", "9790000000000", "Indonesian", 535, 1754 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1754, 1128, "Magic Burns", "Magic Burns", "Kate Daniels# Curran Lennart# Beatrice Aunt B# Derek Gaunt# Jim Shrapshire# Saiman# Dr. George Doolittle# Andrea Nash# Raphael Medrano# Ghastek# Julie Olsen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Magic# Vampires# Romance# Paranormal Romance# Shapeshifters# Adult# Werewolves", "9780000000000", "English", 261, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1755, 729, "Saphirblau", "Saphirblau", "Gwendolyn Shepherd# Grace Shepherd# Leslie Hay# Gideon de Villiers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Time Travel# Romance# Historical Fiction# Science Fiction# Fiction# Paranormal# Historical# Urban Fantasy", "9780000000000", "German", 389, 1756 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1756, 1757, "Percy Jackson's Greek Gods", "Percy Jackson's Greek Gods", "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Greek Mythology# Adventure# Humor# Childrens# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B00HVMAS0W", "English", "4.49", 0, 40 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1757, 1164, "Housekeeping", "Housekeeping", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Literary Fiction# Classics# Literature# Contemporary# American# Coming Of Age# Book Club# Family", "9780000000000", "English", 219, 108 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1758, 1759, "\"Alas", "\"Alas", "Fiction# Science Fiction# Post Apocalyptic# Classics# Apocalyptic# Dystopia# Survival# Science Fiction Fantasy# Audiobook# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 577 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1759, 667, "Soul Music", "Soul Music", "Cut Me Own Throat Dibbler# Foul Ole Ron# Havelock Vetinari# DEATH# Susan Sto Helit# The Librarian# Death of Rats", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Music# Audiobook# Magic# High Fantasy# Death", "9780000000000", "English", 424, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1760, 99, "The Mummy", "The Mummy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Fiction# Paranormal# Supernatural# Historical Fiction# Romance# Historical# Egypt# Urban Fantasy", "9780000000000", "English", 480, 516 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1761, 1762, "Mission: Subhero", "Mission: Subhero", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Contemporary# Fiction# Drama# Book Club# Young Adult# Middle Grade# New Adult# Adventure# Adult", "B0735GD1L3", "", 225, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1762, 780, "No Exit and Three Other Plays", "No Exit and Three Other Plays", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.1", " Lionel Abel (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1763, 1523, "The Pickwick Papers", "The Pickwick Papers", "Samuel Pickwick# Nathaniel Winkle# Augustus Snodgrass# Tracy Tupman# Sam Weller# Tony Weller# Alfred Jingle# Job Trotter# Mr. Wardle# Emily Wardle# Benjamin Allen# Arabella Allen# Bob Sawyer# Mr. Perker# Mrs. Bardell# Dr. Slammer# Solomon Pell# Rachael Wardle# Mr. Dodson# Mr. Fogg", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# 19th Century# Humor# British Literature# Victorian# Historical Fiction# Novels# Classic Literature", "9780000000000", "English", 801, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1764, 1765, "Gaudy Night", "Gaudy Night", "Lord Peter Death Bredon Wimsey# Mervyn Bunter# Harriet Vane# Gerald# Duke of Denver# The Honorable Freddy Arbuthnot# Miss Lydgate# Gerald Saint-George Wimsey# Letitia Martin# Helen de Vine# Dr. Baring# Phoebe Tucker# Reggie Pomfret# Miss Burrows# Annie Wilson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Classics# Romance# Mystery Thriller# British Literature# Detective# Historical Fiction# 20th Century", "9780000000000", "English", 501, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1765, 1766, "Take My Heart", "Take My Heart", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Contemporary# Novels# Fiction# Drama# Erotica", "10000000000000", "English", 289, 1766 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1766, 1366, "Seduced in the Dark", "Seduced in the Dark", "Muhammad Rafiq# Matthew Reed# Olivia Ruiz# Felipe Villanueva# Janice Sloan# Caleb (Captive in the Dark)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Romance# BDSM# Erotica# Adult# Abuse# Contemporary# Contemporary Romance# Erotic Romance# New Adult", "B0094KFM9Q", "English", 505, 1767 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1767, 848, "Sunshine", "Sunshine", "Sunshine# Mel# Constantine (Sunshine)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Urban Fantasy# Fantasy# Paranormal# Fiction# Horror# Young Adult# Romance# Supernatural# Adult", "9780000000000", "English", 405, 1261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1768, 1769, "A Gentleman in Moscow", "A Gentleman in Moscow", "Count Alexander Rostov# Mikhail Fyodorovich Mindich# Anna Urbanova# Nina Kulikova# Sofia Kulikova", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Russia# Historical# Audiobook# Book Club# Literary Fiction# Novels# Adult Fiction# Adult", "9780000000000", "English", 462, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1769, 1770, "One Thousand White Women: The Journals of May Dodd", "One Thousand White Women: The Journals of May Dodd", "May Dodd# Little Wolf# Ulysses S. Grant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Book Club# Westerns# Adult# Adult Fiction# Audiobook# Adventure# 19th Century", "9780000000000", "English", 434, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1770, 1771, "Dream Caster", "Dream Caster", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction# Dystopia# Post Apocalyptic# Paranormal# Fiction# Action", "9780000000000", "English", 362, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1771, 1772, "The Executioner's Song", "The Executioner's Song", "Gary Gilmore", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# True Crime# Crime# Biography# Classics# History# Literature# Mystery# American# Journalism", "9780000000000", "English", 1056, 16 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1772, 1773, "The Naming", "The Naming", "Maerad of Pellinor# Cadvan of Lirigon# Dernhil of Gent", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# High Fantasy# Young Adult Fantasy# Adventure# Epic Fantasy# Teen# Science Fiction Fantasy", "9780000000000", "English", 492, 621 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1773, 294, "Bitterblue", "Bitterblue", "Katsa (Graceling Realm)# Bitterblue# Leck (Graceling Realm)# Sapphire Saf Birch# Po (Graceling Realm)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Young Adult Fantasy# High Fantasy# Magic# Adventure# Teen# Mystery", "9780000000000", "English", 576, 1774 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1774, 1775, "The Talented Mr. Ripley", "The Talented Mr. Ripley", "Tom Ripley# Dickie Greenleaf# Marge Sherwood# Freddie Miles", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Crime# Classics# Suspense# Mystery Thriller# Novels# Drama# Italy", "9780000000000", "English", 320, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1775, 891, "Spells", "Spells", "Laurel Sewell# David Lawson# Tamani", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fairies# Fae# Magic# Fiction# Urban Fantasy# Paranormal Romance", "9780000000000", "English", 359, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1776, 52, "Horton Hears a Who!", "Horton Hears a Who!", "Horton the Elephant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Fantasy# Animals# Kids# Humor# Juvenile", "9780000000000", "English", 64, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1777, 1778, "Vampire Princess Rising", "Vampire Princess Rising", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Witches# Angels# Werewolves# Paranormal# Magic# Paranormal Romance# Supernatural# Shapeshifters# Demons", "9780000000000", "English", 326, 1778 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1778, 610, "The Gulag Archipelago 1918–1956", "The Gulag Archipelago 1918–1956", "History# Nonfiction# Russia# Classics# Politics# Biography# Russian Literature# Memoir# Literature# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.27", 0, 1779 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1779, 522, "First Drop of Crimson", "First Drop of Crimson", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Mencheres# Ian Flannery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal# Paranormal Romance# Romance# Urban Fantasy# Fantasy# Adult# Demons# Supernatural# Fiction", "9780000000000", "English", 371, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1780, 524, "Leaving Paradise", "Leaving Paradise", "Maggie Armstrong# Caleb Becker# Mrs. Reynolds", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Realistic Fiction# Fiction# Young Adult Romance# Chick Lit# Contemporary Romance# High School# Teen", "9780000000000", "English", 303, 1781 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1781, 535, "Porno", "Porno", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Dark# Thriller# Novels# Crime# Mystery# Scotland# Drama# British Literature", "9790000000000", "Spanish", 600, 1527 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1782, 710, "The Great Alone", "The Great Alone", "Lenora Leni Allbright# Cora Allbright# Ernt Allbright# Matthew Walker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Audiobook# Historical# Adult# Adult Fiction# Romance# Book Club# Contemporary# Family", "10000000000000", "English", 435, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1783, 1784, "When Nietzsche Wept", "When Nietzsche Wept", "Friedrich Nietzsche# Josef Breuer# Lou Andreas-Salomé# Sigmund Freud", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Psychology# Fiction# Philosophy# Historical Fiction# Novels# Literature# American# Historical# Roman# Contemporary", "9780000000000", "English", 310, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1784, 1785, "Seraphina", "Seraphina", "Seraphina Dombegh# Lucian Kiggs# Orma# Eskar# Claude Dombegh# Glisselda# Ardmagar Comonot", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dragons# Romance# Fiction# Young Adult Fantasy# High Fantasy# Adventure# Mystery# Magic", "10000000000000", "English", 499, 52 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1785, 1786, "Cold Comfort Farm", "Cold Comfort Farm", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.91", " Roz Chast (Illustrations)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1786, 667, "Monstrous Regiment", "Monstrous Regiment", "Sam Vimes# William de Worde# Angua von Überwald# Otto Chriek# Reg Shoe# Polly Perks# Buggy Swires# Nuggan# Strappi# Jackrum# Maladicta# Igorina# Jade# Tonker Halter# Shufti Manickle# Wazzer Goom# Lofty Tewt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# War# Audiobook# Military Fiction# High Fantasy# Comic Fantasy", "10000000000000", "English", 496, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1787, 1236, "The Wicked King", "The Wicked King", "Madoc# Taryn Duarte# Jude Duarte# Cardan Greenbriar# Vivienne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fae# Young Adult Fantasy# Fiction# Magic# Audiobook# Fairies# Urban Fantasy", "9780000000000", "English", 336, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1788, 210, "The Andromeda Strain", "The Andromeda Strain", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Thriller# Mystery# Science Fiction Fantasy# Suspense# Horror# Novels# Classics# Adventure", "9780000000000", "English", 327, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1789, 52, "The Sneetches and Other Stories", "The Sneetches and Other Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Fantasy# Humor# Kids# Short Stories# Juvenile", "9780000000000", "English", 65, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1790, 1281, "At Swim-Two-Birds", "At Swim-Two-Birds", "Fiction# Classics# Irish Literature# Ireland# Literature# Novels# Humor# 20th Century# Fantasy# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.89", 0, 1791 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1791, 1792, "Incarceron", "Incarceron", "Claudia# Finn Abbott# Keiro# Attia# John Arlexa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Science Fiction# Steampunk# Fiction# Adventure# Teen# Young Adult Fantasy# Mystery", "9780000000000", "English", 458, 1792 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1792, 512, "Quicksilver", "Quicksilver", "Isaac Newton# Eliza# Jack Shaftoe# Enoch Root# Gottfried Wilhelm Leibniz# Daniel Waterhouse# Bob Shaftoe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Science Fiction# Fantasy# Historical# Science Fiction Fantasy# Alternate History# Speculative Fiction# Adventure# Novels", "9780000000000", "English", 927, 1793 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1793, 822, "Circus of the Damned", "Circus of the Damned", "Anita Blake# Dolph Storr# Zerbrowski (Anita Blake series)# Jean-Claude (Anita Blake series)# Richard Zeeman# Edward Ted Forrester# Bert Vaughn# Larry Kirkland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Horror# Romance# Paranormal Romance# Fiction# Supernatural# Mystery", "9780000000000", "English", 320, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1794, 1795, "Om Chanting and Meditation", "Om Chanting and Meditation", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Spirituality# Self Help# Inspirational# Religion# Nonfiction", "B003XKNWCM", "English", 113, 1795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1795, 667, "Wyrd Sisters", "Wyrd Sisters", "Nanny Ogg# DEATH# Magrat Garlick# Verence the Fool# Tom John# Granny Weatherwax# Lord Leonal Felmet# Lady Felmet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Witches# Magic# Audiobook# Science Fiction# High Fantasy", "9780000000000", "English", 265, 1796 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1796, 141, "Batman: The Killing Joke", "Batman: The Killing Joke", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.37", " Tim Sale (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1797, 438, "Maybe Someday", "Maybe Someday", "Sydney Blake# Ridge Lawson# Warren Russell# Bridgette Cox# Brennan Lawson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# Fiction# Music# Chick Lit# College# Audiobook", "B00DPM7RJW", "English", 385, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1798, 1799, "Five Feet Apart", "Five Feet Apart", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.19", " فاطمه صبحی (translator)\"", " Tobias Iaconis (Goodreads Author) (Contributor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1799, 210, "Prey", "Prey", "Jack Forman# Julia Forman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Thriller# Horror# Suspense# Mystery# Science Fiction Fantasy# Adventure# Novels# Audiobook", "9780000000000", "English", 507, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1800, 1801, "Willow", "Willow", "Willow Rosenberg# Guy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Mental Health# Mental Illness# Death# Teen# Drama", "9780000000000", "English", 329, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1801, 607, "Magic Study", "Magic Study", "Valek# Kiki# Zitora Cowan# Commander Ambrose# Irys Jewelrose# Cahill Ixia# Moon Man# Leif Zaltana# Janco# Opal Cowan# Yelena Zaltana# Ari# Roze Featherstone# Bain Bloodgood# Dax Greenblade# Gelsi Moon# Fisk# Goel# Perl Zaltana# Esau Zaltana# Captain Marrok", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Romance# Fiction# High Fantasy# Adventure# Paranormal# Young Adult Fantasy# Adult", "9780000000000", "English", 392, 1802 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1802, 1803, "Scars and Voices: And Other Stories", "Scars and Voices: And Other Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Fiction# Novels# Drama# Contemporary", "B07N33PP4M", "", 102, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1803, 1804, "My Brilliant Friend", "My Brilliant Friend", "Fiction# Historical Fiction# Italy# Italian Literature# Novels# Audiobook# Literary Fiction# Contemporary# Historical# Book Club", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.96", 0, 57 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1804, 1805, "تراب الماس", "تراب الماس", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Crime# Thriller# Egypt# Contemporary# Audiobook# Fantasy# Mystery Thriller# Egyptian Literature", "10000000000000", "Arabic", 389, 1526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1805, 1806, "A Knight in Shining Armor", "A Knight in Shining Armor", "Dougless Montgomery# Nicholas Stafford", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Historical Romance# Time Travel# Historical# Historical Fiction# Fiction# Fantasy# Medieval# Time Travel Romance# Contemporary", "9780000000000", "English", 464, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1806, 194, "The Mammoth Hunters", "The Mammoth Hunters", "Ayla# Jondalar# Ranec", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Romance# Prehistoric# Adventure# Adult# Novels# Adult Fiction", "9780000000000", "English", 688, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1807, 96, "At First Sight", "At First Sight", "Jeremy Marsh# Doris McClellan# Lexie Darnell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Audiobook# Love# Drama", "9780000000000", "English", 204, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1808, 872, "Dark Visions", "Dark Visions", "Rob Kessler# Kaitlyn Fairchild# Lewis Chao# Anna Eva Whiteraven", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Supernatural# Vampires# Paranormal Romance# Urban Fantasy# Fiction# Magic", "9780000000000", "English", 732, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1809, 838, "Last Exit to Brooklyn", "Last Exit to Brooklyn", "Fiction# Classics# Thriller# Contemporary# Dark# New York# American# Crime# Novels# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 1017 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1810, 1001, "The Call of Cthulhu and Other Weird Stories", "The Call of Cthulhu and Other Weird Stories", "Horror# Fiction# Classics# Short Stories# Fantasy# Science Fiction# Gothic# Weird Fiction# Literature# Lovecraftian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.22", 0, 1811 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1811, 1812, "A Living Nightmare", "A Living Nightmare", "Darren Shan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Horror# Vampires# Paranormal# Fiction# Supernatural# Urban Fantasy# Middle Grade# Adventure", "9780000000000", "English", 272, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1812, 1813, "My Sister's Grave", "My Sister's Grave", "Tracy Crosswhite# Sarah Crosswhite# Roy Calloway# Dan OLeary# Vic Fazzio# Kins Rowe# Vance Clark# Finlay Armstrong# Kelly Rosa# Sunnie Witherspoon# Dr. James Crosswhite# Abby Crosswhite# DeAngelo Finn# Maria Vanpelt# Edmund House# The Honorable Burleigh Meyers# Harrison Scott# Parker House# Andrew Laub# Johnny Nolasco# Detective Margaret Giesa# Ryan Hagen# Billy Williams (My Sisters Grave)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Audiobook# Adult# Contemporary# Detective", "9780000000000", "English", 416, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1813, 13, "Falling Up", "Falling Up", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Childrens# Fiction# Humor# Classics# Picture Books# Young Adult# Juvenile# Middle Grade# Kids", "9780000000000", "English", 178, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1814, 1815, "Stormbreaker", "Stormbreaker", "Alex Rider# Alan Blunt# Jack Starbright# Smithers# Herod Sayle# Ian Rider# Mrs Jones", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Adventure# Fiction# Mystery# Thriller# Action# Espionage# Childrens# Middle Grade# Teen", "9780000000000", "English", 256, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1815, 1816, "Mateguas Island: A Novel of Horror and Suspense", "Mateguas Island: A Novel of Horror and Suspense", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Paranormal# Suspense# Gothic# Fantasy# Fiction# Mystery# Thriller# Weird Fiction# Supernatural", "9780000000000", "English", 380, 1816 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1816, 124, "Immortality", "Immortality", "Fiction# Philosophy# Czech Literature# Literature# Novels# Classics# Contemporary# 20th Century# France# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1817, 1818, "Pollyanna", "Pollyanna", "Nancy# Pollyanna# Dr. Chilton# Jimmy Bean# Old Tom# John Pendleton# Polly Chilton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Childrens# Young Adult# Historical Fiction# Middle Grade# Historical# Childrens Classics# American# Juvenile", "9780000000000", "English", 304, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1818, 1819, "Alice's Adventures in Wonderland", "Alice's Adventures in Wonderland", "Alice (Lewis Carroll)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fantasy# Fiction# Childrens# Adventure# Young Adult# Audiobook# Middle Grade# Literature# 19th Century", "B000JQV3QA", "English", 96, 1819 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1819, 1820, "\"Raise High the Roof Beam", "\"Raise High the Roof Beam", "Fiction# Classics# Short Stories# Literature# American# Novels# 20th Century# Literary Fiction# Adult Fiction# Novella", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1820, 1821, "Wide Sargasso Sea", "Wide Sargasso Sea", "Antoinette Cosway# Tia# Aunt Cora# Grace Poole# Richard Mason# Annette Cosway# Pierre Cosway# Mr Mason# Christophine# Godfrey# Edward Rochester", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Literature# Historical# Feminism# Literary Fiction# Novels# 20th Century# School", "9780000000000", "English", 171, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1821, 1140, "A Summer of Good-Byes (Blue Triangle Press Book 2)", "A Summer of Good-Byes (Blue Triangle Press Book 2)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Adult# Contemporary# Adventure# Young Adult# New Adult# Drama# Book Club# Mystery", "B06XY6CP6F", "", 0, 1822 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1822, 1823, "The Four Agreements: A Practical Guide to Personal Freedom", "The Four Agreements: A Practical Guide to Personal Freedom", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Self Help# Nonfiction# Spirituality# Philosophy# Personal Development# Psychology# Inspirational# Religion# Audiobook# Business", "9780000000000", "English", 168, 1823 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1823, 761, "Faust", "Faust", "Classics# Fiction# Poetry# Plays# Literature# German Literature# Drama# Philosophy# Fantasy# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "Multiple languages", "3.96", 0, 187 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1824, 1825, "The Mountain's Morning Song", "The Mountain's Morning Song", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Drama# Novels# Contemporary# Fiction", "9780000000000", "English", 346, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1825, 1826, "The Body Finder", "The Body Finder", "Violet Ambrose# Jules# Jay Heaton# Claire Amadeus# Chelsea Morrison# Lissie Adams# Maggie Ambrose# Stephen Ambrose# Kathryn Ambrose# Joshua Ambrose# Cassidy Ambrose", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Mystery# Fantasy# Romance# Supernatural# Fiction# Paranormal Romance# Suspense# Thriller", "9780000000000", "English", 327, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1826, 1827, "Blood & Spirits", "Blood & Spirits", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Vampires# Supernatural# Fantasy# Ghosts# Zombies# Horror# Dark Fantasy# Fiction", "9780000000000", "English", 310, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1827, 1828, "The Book of Three", "The Book of Three", "Taran# Fflewddur Fflam# Princess Eilonwy# Gurgi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Middle Grade# Adventure# Classics# Science Fiction Fantasy# High Fantasy# Magic", "9780000000000", "English", 190, 46 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1828, 1829, "Steel Dogs", "Steel Dogs", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Contemporary# Fiction# Novels# Epic", "9780000000000", "", 262, 1685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1829, 1329, "Love on the Line", "Love on the Line", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Young Adult# New Adult# Love Story# Adult# Romance# Novels# Contemporary Romance# Chick Lit", "B071XCLL84", "English", 362, 1464 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1830, 1047, "Blink: The Power of Thinking Without Thinking", "Blink: The Power of Thinking Without Thinking", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Business# Science# Self Help# Sociology# Audiobook# Personal Development# Philosophy# Leadership", "9780000000000", "English", 296, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1831, 1832, "What We Talk About When We Talk About Love", "What We Talk About When We Talk About Love", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Classics# Literature# American# Contemporary# Literary Fiction# 20th Century# The United States Of America# Love", "9780000000000", "English", 159, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1832, 822, "Blue Moon", "Blue Moon", "Anita Blake# Jean-Claude (Anita Blake series)# Richard Zeeman# Asher (Anita Blake series)# Jason Schuyler# Nathaniel Graison# Damian (Anita Blake series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Horror# Fiction# Supernatural# Werewolves", "9780000000000", "English", 418, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1833, 413, "Strange the Dreamer", "Strange the Dreamer", "Sarai# Minya# Sparrow# Feral# Ruby# Ruza# Azareen# Suheyla# Calixte# Lazlo Strange", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fiction# Young Adult Fantasy# Audiobook# Magic# High Fantasy# Adventure# Science Fiction Fantasy", "9780000000000", "English", 544, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1834, 1835, "NOS4A2", "NOS4A2", "Victoria Vic McQueen# Charles Talent Manx# Bruce Wayne Carmody# Bing Partridge", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Thriller# Audiobook# Paranormal# Vampires# Supernatural# Adult# Mystery", "9780000000000", "English", 692, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1835, 1836, "Good in Bed", "Good in Bed", "Candace Cannie Shapiro# Bruce Guberman# Samantha# Dr. Peter Kruchelevansky# Maxi Ryder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Fiction# Romance# Contemporary# Adult Fiction# Adult# Humor# Contemporary Romance# Womens Fiction# Novels", "9780000000000", "English", 376, 76 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1836, 445, "The Eternity Code", "The Eternity Code", "Artemis Fowl II# Domovoi Butler# Captain Holly Short# Commander Julius Root# Foaly# Mulch Diggums# Juliet Butler# Angeline Fowl# Artemis Fowl Sr.# Captain Trouble Kelp# John Spiro# Arno Blunt# Corporal Grub Kelp", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Middle Grade# Adventure# Childrens# Magic# Urban Fantasy# Audiobook", "9780000000000", "English", 352, 591 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1837, 1838, "Wake", "Wake", "Janie Hannagan# Cabel Strumheller# Captain Fran Komisky# Martha Stubin# Carrie Brandt# Melinda Jeffers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Fiction# Supernatural# Fantasy# Mystery# Teen# Urban Fantasy# Paranormal# Paranormal Romance", "9780000000000", "English", 210, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1838, 640, "What Dreams May Come", "What Dreams May Come", "Chris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Romance# Horror# Science Fiction# Death# Paranormal# Classics# Religion# Contemporary", "9780000000000", "English", 288, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1839, 297, "Second Foundation", "Second Foundation", "Hari Seldon# Mule# Arcadia Darell# Bail Channis# Preem Palver", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Space Opera# Fantasy# Novels# Space# Speculative Fiction# Audiobook", "9780000000000", "English", 256, 650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1840, 241, "The Hour I First Believed", "The Hour I First Believed", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Contemporary# Adult Fiction# Adult# Literary Fiction# Drama# Novels# Book Club# Audiobook", "9780000000000", "English", 740, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1841, 1449, "Alice in Zombieland", "Alice in Zombieland", "Alice Bell# Cole Holland# Emma Lily", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Zombies# Fantasy# Paranormal# Romance# Horror# Retellings# Urban Fantasy# Fiction# Supernatural", "9780000000000", "English", 404, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1842, 312, "Attachments", "Attachments", "Beth Fremont# Jennifer Scribner-Snyder# Lincoln ONeill", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Contemporary# Chick Lit# Adult# Young Adult# Adult Fiction# Contemporary Romance# Realistic Fiction# Humor", "9780000000000", "English", 323, 578 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1843, 1844, "Frankie the Ferret", "Frankie the Ferret", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Epic# Contemporary", "9780000000000", "English", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1844, 1845, "First Grave on the Right", "First Grave on the Right", "Charley Davidson# Reyes Farrow# Garrett Swopes# Cookie Kowalski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Urban Fantasy# Fantasy# Romance# Mystery# Paranormal Romance# Ghosts# Adult# Fiction# Supernatural", "9780000000000", "English", 310, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1845, 1846, "Master and Commander", "Master and Commander", "Jack Aubrey# Stephen Maturin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Adventure# Classics# War# Audiobook# Military Fiction# Literature# Novels", "9780000000000", "English", 464, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1846, 1709, "Written on the Body", "Written on the Body", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# LGBT# Queer# Romance# Contemporary# Literature# Literary Fiction# Novels# Lesbian# Feminism", "9780000000000", "English", 192, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1847, 1848, "La Dame aux Camélias", "La Dame aux Camélias", "Classics# Fiction# Romance# France# French Literature# Historical Fiction# 19th Century# Literature# Novels# Drama", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1848, 25, "The Zahir", "The Zahir", "Fiction# Novels# Philosophy# Contemporary# Romance# Spirituality# Literature# Inspirational# Adult# Love", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.57", 0, 1204 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1849, 645, "Trickster's Choice", "Trickster's Choice", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Adventure# Romance# High Fantasy# Teen# Science Fiction Fantasy", "10000000000000", "English", 448, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1850, 907, "Tiger's Quest", "Tiger's Quest", "Kishan# Kelsey Hayes# Dhiren# Mr. Kadam", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Mythology# Paranormal# Magic# Adventure# Fiction# Paranormal Romance# Urban Fantasy", "9780000000000", "English", 479, 1851 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1851, 1852, "Standing for Something: 10 Neglected Virtues That Will Heal Our Hearts and Homes", "Standing for Something: 10 Neglected Virtues That Will Heal Our Hearts and Homes", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Religion# Nonfiction# Lds# Church# Inspirational# Self Help# Spirituality# Lds Non Fiction# Philosophy# Christian", "9780000000000", "English", 256, 1852 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1852, 872, "Shadow Souls", "Shadow Souls", "Elena Gilbert# Stefan Salvatore# Damon Salvatore# Matt Honeycutt# Bonnie McCullough# Caroline Forbes# Meredith Sulez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Horror", "9780000000000", "English", 599, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1853, 847, "The Right Stuff", "The Right Stuff", "John Glenn# Gus Grissom# Pete Conrad# Chuck Yeager", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Science# Space# Biography# American History# Aviation# Classics# Adventure# Journalism", "9780000000000", "English", 352, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1854, 522, "This Side of the Grave", "This Side of the Grave", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Mencheres# Tate Bradley# Don Williams# Vlad Tepesh# Kira Graceling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Urban Fantasy# Paranormal# Paranormal Romance# Romance# Fantasy# Adult# Ghosts# Supernatural# Fiction", "9780000000000", "English", 357, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1855, 1856, "Anna Dressed in Blood", "Anna Dressed in Blood", "Cas Lowood# Anna Korlov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Horror# Paranormal# Fantasy# Ghosts# Romance# Supernatural# Fiction# Urban Fantasy# Mystery", "9780000000000", "English", 316, 1856 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1856, 667, "The Fifth Elephant", "The Fifth Elephant", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# Gaspode# Angua von Überwald# Cheery Littlebottom# Igor (Discworld)# Wolfgang von Überwald# Fred Colon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Mystery# Adventure# Novels# British Literature", "9780000000000", "English", 464, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1857, 48, "The Prince and the Pauper", "The Prince and the Pauper", "Classics# Fiction# Historical Fiction# Literature# Childrens# Adventure# Young Adult# Historical# American# Classic Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.86", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1858, 178, "The Hundred Secret Senses", "The Hundred Secret Senses", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# China# Asia# Contemporary# Asian Literature# Novels# Literature# Adult Fiction# Literary Fiction", "9780000000000", "English", 406, 1859 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1859, 1860, "Marina", "Marina", "Marina Marchetti# German Blau# Oscar Drai", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Mystery# Fantasy# Horror# Gothic# Historical Fiction# Spanish Literature# Spain# Romance", "9790000000000", "Spanish", 238, 1860 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1860, 1861, "Just Kids", "Just Kids", "Patti Smith# Robert Mapplethorpe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Music# Biography# Art# Autobiography# Biography Memoir# Audiobook# New York# Poetry", "9780000000000", "English", 304, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1861, 960, "A Million Suns", "A Million Suns", "Amy Martin# Elder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Romance# Fantasy# Fiction# Mystery# Space# Teen# Futuristic", "9780000000000", "English", 386, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1862, 1751, "A Northern Light", "A Northern Light", "Mattie Gokey# Grace Brown# Weaver Smith# Royal Loomis# Emily Wilcox# Beth Gokey# Lou Gokey# Abby Gokey# Michael Gokey# Tommy Hubbard", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Fiction# Mystery# Historical# Romance# Teen# Coming Of Age# Audiobook# Young Adult Historical Fiction", "9780000000000", "English", 396, 262 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1863, 257, "The Calvin and Hobbes Tenth Anniversary Book", "The Calvin and Hobbes Tenth Anniversary Book", "Calvin# Hobbes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Comics# Humor# Graphic Novels# Fiction# Graphic Novels Comics# Comic Book# Comic Strips# Childrens# Comedy# Cartoon", "9780000000000", "English", 208, 257 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1864, 1865, "The War of the End of the World", "The War of the End of the World", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Literature# Latin American# Novels# War# Nobel Prize# Spanish Literature# Classics# Brazil", "9780000000000", "English", 568, 1865 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1865, 1866, "The Hobbit: Graphic Novel", "The Hobbit: Graphic Novel", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.48", " Sean Deming (Adapter)\"", " David Wenzel (Illustrator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1866, 512, "Anathem", "Anathem", "Erasmas# Lio# Arsibalt# Jesry# Orolo# Tulia# Cord", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Philosophy# Science Fiction Fantasy# Speculative Fiction# Audiobook# Novels# Cyberpunk# Mathematics", "9780000000000", "English", 937, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1867, 1003, "A Conjuring of Light", "A Conjuring of Light", "Kell Maresh# Rhy Maresh# Holland Vosijk# Delilah Lila Bard# Alucard Emery# Osaron# Ojka# Maxim Maresh# Emira Maresh# Tieren Serense# Edward Ned Archibald Tuttle III", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Magic# Adult# LGBT# Romance# Audiobook# Adventure# New Adult", "9780000000000", "English", 624, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1868, 1869, "Sister Carrie", "Sister Carrie", "Carrie Meeber# Charles H. Drouet# Minnie Hanson# Sven Hanson# George W. Hurstwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# American# Historical Fiction# Novels# Classic Literature# 20th Century# Literary Fiction# School", "9780000000000", "English", 580, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1869, 936, "The Van Alen Legacy", "The Van Alen Legacy", "Schuyler Van Alen# Mimi Force# Bliss Llewellyn# Jack Force# Oliver Hazard-Perry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Angels# Supernatural# Urban Fantasy# Fiction# Paranormal Romance", "9780000000000", "English", 369, 1870 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1870, 700, "I've Got Your Number", "I've Got Your Number", "Poppy Wyatt# Dr. Magnus Tavish# Sam Roxton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Contemporary# Humor# Adult# Contemporary Romance# Audiobook# Adult Fiction# Comedy", "9780000000000", "English", 433, 1871 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1871, 1872, "The Sun Is Also a Star", "The Sun Is Also a Star", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Audiobook# Realistic Fiction# Young Adult Contemporary# Teen# Young Adult Romance# Family", "9780000000000", "English", 384, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1872, 1873, "In Farleigh Field", "In Farleigh Field", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Mystery# Fiction# Historical# World War II# War# British Literature# Historical Mystery# Audiobook# Adult", "B01HBKAYMA", "English", 397, 1873 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1873, 667, "Witches Abroad", "Witches Abroad", "Nanny Ogg# DEATH# Magrat Garlick# Lilith Weatherwax# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Witches# Magic# Audiobook# High Fantasy# Novels", "9780000000000", "English", 374, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1874, 307, "The Solitaire Mystery", "The Solitaire Mystery", "Fiction# Philosophy# Fantasy# Young Adult# Mystery# Novels# Contemporary# Scandinavian Literature# Magical Realism# Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 33 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1875, 1876, "The Miracle of Forgiveness", "The Miracle of Forgiveness", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Religion# Lds# Nonfiction# Church# Spirituality# Self Help# Inspirational# Christianity# Christian# Lds Non Fiction", "9780000000000", "English", 376, 1876 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1876, 210, "The Lost World", "The Lost World", "Ian Malcolm# Richard Levine# Eddie Carr# Lewis Dodgson# Sarah Harding", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Thriller# Adventure# Fantasy# Dinosaurs# Horror# Science Fiction Fantasy# Novels# Suspense", "9780000000000", "English", 448, 1877 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1877, 1878, "Dance Dance Dance", "Dance Dance Dance", "Yuki# Yomiyoshi# The Sheep Man# Kiki", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Japan# Japanese Literature# Magical Realism# Fantasy# Contemporary# Novels# Literature# Mystery# Asia", "9780000000000", "English", 393, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1878, 1460, "Spell Bound", "Spell Bound", "Young Adult# Fantasy# Paranormal# Magic# Romance# Vampires# Witches# Supernatural# Demons# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.07", 0, 909 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1879, 647, "Lightning", "Lightning", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Science Fiction# Time Travel# Suspense# Mystery# Fantasy# Audiobook# Paranormal", "9780000000000", "English", 384, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1880, 431, "Angel", "Angel", "Maximum Ride# Jeb Batchelder# Dylan# Iggy# Nudge# Angel# Ella Fitzgerald# Gazzy# Fang", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Adventure# Fiction# Romance# Paranormal# Action# Teen# Supernatural", "9780000000000", "English", 298, 1881 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1881, 1882, "The Discovery of Heaven", "The Discovery of Heaven", "Fiction# Literature# Dutch Literature# Classics# Philosophy# Novels# Roman# Contemporary# 20th Century# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.17", 0, 1882 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1882, 1883, "This Man Confessed", "This Man Confessed", "Ava OShea# Jesse Ward", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# BDSM# Contemporary Romance# Contemporary# Erotic Romance# Adult# New Adult# Love# Fiction", "B00C102T2Y", "English", 501, 1025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1883, 1884, "Resonance", "Resonance", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Urban Fantasy# Science Fiction# Young Adult Fantasy# New Adult# Paranormal# Paranormal Romance# Fiction", "9780000000000", "English", 350, 1884 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1884, 1885, "Don't Close Your Eyes", "Don't Close Your Eyes", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Romance", "B08C36B91H", "English", 326, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1885, 1886, "Fun Home: A Family Tragicomic", "Fun Home: A Family Tragicomic", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Memoir# Comics# Nonfiction# LGBT# Queer# Biography# Graphic Novels Comics# Autobiography# Adult", "9780000000000", "English", 232, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1886, 96, "True Believer", "True Believer", "Jeremy Marsh# Doris McClellan# Lexie Darnell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Contemporary Romance# Mystery# Love# Audiobook", "9780000000000", "English", 465, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1887, 1888, "London", "London", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# British Literature# Novels# Travel# Adult# Epic# Unfinished# 20th Century", "9780000000000", "English", 1152, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1888, 245, "A Wild Sheep Chase", "A Wild Sheep Chase", "Fiction# Japan# Japanese Literature# Magical Realism# Fantasy# Novels# Literature# Contemporary# Mystery# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 1889 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1889, 35, "Stuart Little", "Stuart Little", "Childrens# Classics# Fiction# Fantasy# Animals# Young Adult# Middle Grade# Adventure# Chapter Books# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 1890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1890, 1891, "The Sweetness at the Bottom of the Pie", "The Sweetness at the Bottom of the Pie", "Flavia de Luce# Ophelia de Luce# Daphne de Luce# Dogger# Mrs. Mullet# Horace Bonepenny# Inspector Hewitt# Ned Cropper# Tully Stoker# Mary Stoker# Bob Stanley# Colonel de Luce# Frank Pemberton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Historical Fiction# Young Adult# Audiobook# Mystery Thriller# Crime# Historical# Adult# British Literature", "B0027G6XDS", "English", 386, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1891, 1239, "God's Spy", "God's Spy", "Thriller# Fiction# Mystery# Crime# Italy# Spanish Literature# Suspense# Religion# Adventure# Mystery Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.75", 0, 727 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1892, 656, "Fool's Fate", "Fool's Fate", "The Fool# FitzChivalry Farseer# Burrich# Lady Patience# Chade Fallstar# Riddle# Kettricken# Dutiful Farseer# Thick# Nettle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Dragons# Fiction# Magic# Epic Fantasy# Epic# High Fantasy# Audiobook# Science Fiction Fantasy# Adventure", "9780000000000", "", 914, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1893, 1894, "\"Blue Lily", "\"Blue Lily", "Fantasy# Young Adult# Paranormal# Romance# Fiction# Magic# Urban Fantasy# LGBT# Audiobook# Young Adult Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.27", 0, 133 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1894, 915, "The Burning Bridge", "The Burning Bridge", "Will Treaty# Halt OCarrick# Horace Altman# Morgarath# Tug# Blaze# Gilan# Evanlyn# King Duncan# Crowley Meratyn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Childrens# Young Adult Fantasy# Action# Teen# High Fantasy", "9780000000000", "English", 262, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1895, 1896, "Gandhi: An autobiography", "Gandhi: An autobiography", "Biography# Nonfiction# History# Autobiography# India# Philosophy# Memoir# Politics# Biography Memoir# Spirituality", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 1394 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1896, 1897, "Angelfire", "Angelfire", "Nathaniel# Kate Dawson# Ivar# Lauren# Bastian# Will# Geir# Ragnuk# Cadan# Ellie Monroe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Angels# Young Adult# Fantasy# Paranormal# Romance# Paranormal Romance# Urban Fantasy# Supernatural# Demons# Fiction", "9780000000000", "English", 453, 1897 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1897, 1130, "\"Africa's Child (Dancing Soul Trilogy", "\"Africa's Child (Dancing Soul Trilogy", "Epic# Contemporary# Novels# Drama# Fiction# Suspense", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B01EIOKBFW", "English", "4.28", 0, 1898 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1898, 65, "Winter of the World", "Winter of the World", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Audiobook# War# World War II# Novels# Adult# British Literature# Russia", "9780000000000", "English", 940, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1899, 607, "Fire Study", "Fire Study", "Valek# Commander Ambrose# Irys Jewelrose# Cahill Ixia# Moon Man# Leif Zaltana# Janco# Opal Cowan# Yelena Zaltana# Ari# Roze Featherstone# Tauno# Captain Marrok", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Romance# Fiction# High Fantasy# Adventure# Paranormal# Young Adult Fantasy# Adult", "9780000000000", "English", 441, 607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1900, 1901, "Across the Nightingale Floor", "Across the Nightingale Floor", "Otori Takeo# Lord Iida", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Historical Fiction# Japan# Young Adult# Historical# Romance# Adventure# Historical Fantasy# Audiobook", "9780000000000", "English", 305, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1901, 246, "Heartless", "Heartless", "The Cheshire Cat (Marissa Meyer)# The Mad Hatter# Catherine# Jest# Mary Ann", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Retellings# Romance# Fiction# Fairy Tales# Young Adult Fantasy# Audiobook# Magic# Fairy Tale Retellings", "9780000000000", "English", 453, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1902, 1903, "Conjunction", "Conjunction", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.47", " Steven N. Nagy\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1903, 1904, "A Visit from the Goon Squad", "A Visit from the Goon Squad", "Bennie Salazar# Lou Kline# Scotty Hausmann# Bill Duff# Jules Jones# Dolly Peale# Kitty Jackson# Ted Hollander# Sasha Blake# Andy Grady# Mark Avery# Rachel Costanza# Beth Grady# Alison Blake", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Music# Short Stories# Literary Fiction# Novels# Adult Fiction# Literature# Book Club# Adult", "9780000000000", "English", 288, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1904, 368, "Lover at Last", "Lover at Last", "Qhuinn# Blaylock# Xcor# Saxton# Layla (Chosen) (Black Dagger)# Marisol (Sola) Morte# Trez# iAm# Wrath (Blind King)# Assail# son of Assail", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Vampires# Romance# Fantasy# M M Romance# Urban Fantasy# Adult# Erotica# Fiction", "9780000000000", "English", 608, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1905, 1906, "Time and Again", "Time and Again", "Si Morley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Time Travel# Fiction# Science Fiction# Historical Fiction# Fantasy# Romance# Historical# Mystery# New York# Classics", "9780000000000", "English", 399, 1906 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1906, 1907, "Oblomov", "Oblomov", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.08", " Galya Diment (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1907, 1908, "Bartleby the Scrivener", "Bartleby the Scrivener", "Bartleby# Ginger Nut# Turkey# Nippers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Short Stories# Literature# American# 19th Century# School# Novella# The United States Of America# Read For School", "9780000000000", "English", 64, 1908 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1908, 699, "The Mysterious Island", "The Mysterious Island", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.11", " Jordan Stump (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1909, 100, "A Widow for One Year", "A Widow for One Year", "Ruth Cole# Ted Cole# Eddie OHare# Marion Cole", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Literature# Literary Fiction# American# Adult# Adult Fiction# Romance# Drama", "10000000000000", "English", 576, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1910, 1351, "Towers of Midnight", "Towers of Midnight", "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Audiobook# Adventure# Magic# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.42", 0, 1911 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1911, 936, "Revelations", "Revelations", "Schuyler Van Alen# Mimi Force# Bliss Llewellyn# Jack Force# Oliver Hazard-Perry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Angels# Supernatural# Urban Fantasy# Paranormal Romance# Fiction", "9780000000000", "English", 264, 171 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1912, 1913, "Circle of Five", "Circle of Five", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction# Adventure# Aliens# Fiction# Paranormal", "B00H6LS59E", "English", 352, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1913, 1914, "\"Thinking", "\"Thinking", "Nonfiction# Psychology# Science# Business# Economics# Self Help# Personal Development# Philosophy# Audiobook# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 1914 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1914, 1915, "The Gentleman's Guide to Vice and Virtue", "The Gentleman's Guide to Vice and Virtue", "Percy Newton# Felicity Montague# Henry Monty Montague", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# LGBT# Romance# Historical# Fiction# Audiobook# Queer# Fantasy# Adventure", "9780000000000", "English", 513, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1915, 1916, "Ask the Dust", "Ask the Dust", "Fiction# Classics# Novels# American# Literature# The United States Of America# Americana# Romance# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 1002 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1916, 1917, "The Fifth Season", "The Fifth Season", "Essun# Nassun# Damaya# Syenite# Alabaster# Schaffa# Jija", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Science Fiction# Dystopia# Adult# Science Fiction Fantasy# Audiobook# Post Apocalyptic# LGBT# High Fantasy", "10000000000000", "English", 468, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1917, 1918, "The Complete Short Stories of Ernest Hemingway", "The Complete Short Stories of Ernest Hemingway", "4.29", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Charles Scribner Jr. (Preface)", " Gregory H. Hemingway (Foreword)", " Patrick Hemingway (Foreword)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1918, 927, "Every Which Way But Dead", "Every Which Way But Dead", "Rachel Morgan# Ivy Tamwood# Jenks# Trent Kalamack# Algaliarept# Kisten Felps# Nick Sparagmos# David Hue# Ceri# Newt# Saladan# Jonathan# Quen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Fiction# Romance# Demons# Supernatural", "9780000000000", "English", 501, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1919, 1920, "The Game of Kings", "The Game of Kings", "Mary of Guise# Queen of Scots# Francis Crawford of Lymond# Mary Queen of Scots# Margaret Douglas# Countess of Lennox# Christian Stewart# Thomas Erskine# Richard Crawford", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Scotland# Fantasy# Adventure# Romance# 16th Century# Novels# Classics", "9780000000000", "English", 543, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1920, 1921, "The Stars My Destination", "The Stars My Destination", "Science Fiction# Fiction# Classics# Cyberpunk# Science Fiction Fantasy# Space Opera# Fantasy# Novels# Speculative Fiction# Space", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 1921 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1921, 1835, "Horns", "Horns", "Ignatius Perrish# Lee Tourneau", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Fantasy# Thriller# Mystery# Paranormal# Supernatural# Adult# Audiobook# Adult Fiction", "9780000000000", "English", 370, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1922, 1351, "A Memory of Light", "A Memory of Light", "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Audiobook# Magic# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.5", 0, 1923 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1923, 822, "Obsidian Butterfly", "Obsidian Butterfly", "Anita Blake# Jean-Claude (Anita Blake series)# Richard Zeeman# Edward Ted Forrester# Olaf Gundersson# Bernardo Spotted-Horse# Bradley Bradford", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Horror# Paranormal Romance# Fiction# Supernatural# Werewolves", "9780000000000", "English", 585, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1924, 1925, "شجرتي شجرة البرتقال الرائعة", "شجرتي شجرة البرتقال الرائعة", "Classics# Fiction# Novels# Childrens# Drama# Literature# Brazil# Roman# Romance# Portuguese Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Arabic", "4.41", 0, 362 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1925, 99, "The Tale of the Body Thief", "The Tale of the Body Thief", "Lestat de Lioncourt# David Talbot", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Vampires# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Adult# Science Fiction Fantasy", "9780000000000", "English", 468, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1926, 1067, "Never Too Far", "Never Too Far", "Rush Finlay# Blaire Wynn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Young Adult# Chick Lit# Adult# Erotica# Drama# Fiction", "9780000000000", "English", 193, 1249 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1927, 623, "Lies", "Lies", "Sam Temple# Astrid Ellison# Caine Soren# Diana Ladris# Drake Merwin# Little Pete", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Paranormal# Horror# Adventure# Survival# Supernatural", "9780000000000", "English", 447, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1928, 1929, "Replay", "Replay", "Jeff Winston# Pamela Phillips", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Time Travel# Fantasy# Audiobook# Science Fiction Fantasy# Romance# Speculative Fiction# Adult# Novels", "9780000000000", "English", 311, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1929, 76, "Change of Heart", "Change of Heart", "Michael Wright# Claire Nealon# June Nealon# Shay Bourne# Grace Bourne# Maggie Bloom# Lucius DuFresne# Elizabeth Nealon# Kurt Nealon# Dr Wu# Judge Haig# Christian Gallagher", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Chick Lit# Adult Fiction# Drama# Adult# Realistic Fiction# Novels# Audiobook# Religion", "9780000000000", "English", 448, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1930, 648, "1776", "1776", "John Adams# Benjamin Franklin# George III of the United Kingdom# Rufus Putnam# George Washington# Thomas Jefferson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# American History# Historical# American Revolution# War# Audiobook# American Revolutionary War# Military Fiction# Politics", "9780000000000", "English", 386, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1931, 1932, "Starters", "Starters", "Callie Woodland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Romance# Fiction# Post Apocalyptic# Teen# Mystery# Futuristic", "9780000000000", "English", 352, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1932, 1069, "Brighton Rock", "Brighton Rock", "Fiction# Classics# Crime# Mystery# Thriller# British Literature# Literature# Novels# 20th Century# Dark", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.67", 0, 1933 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1933, 1934, "The Bone Season", "The Bone Season", "Paige Mahoney# Arcturus The Warden Mesarthim", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Fiction# Paranormal# Science Fiction# Urban Fantasy# Romance# Adult# Audiobook", "9780000000000", "English", 466, 1934 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1934, 787, "Mila 18", "Mila 18", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Holocaust# World War II# Historical# War# Jewish# Classics# Literature# Poland", "9780000000000", "English", 563, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1935, 112, "Duma Key", "Duma Key", "Edgar Freemantle# Jerome Wireman# Elizabeth Eastlake# Dr. Xander Kamen# Jack Cantori# Perse (Duma Key)# Candy Brown# Mary Ire# Pam Freemantle# Ilse Freemantle", new DateTime(2022, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Thriller# Fantasy# Supernatural# Mystery# Audiobook# Suspense# Paranormal# Novels", "9780000000000", "English", 611, 435 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1936, 1937, "Arcadia", "Arcadia", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Plays# Drama# Fiction# Theatre# Classics# Historical Fiction# School# Literature# British Literature# 20th Century", "9780000000000", "English", 97, 1937 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1937, 255, "Hell's Angels", "Hell's Angels", "Nonfiction# History# Journalism# Memoir# Biography# Crime# Classics# True Crime# American# Sociology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "French", "3.97", 0, 1938 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1938, 1939, "Infidel", "Infidel", "Rita Verdonk# Ayaan Hirsi Ali", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Religion# Africa# Politics# Islam# Autobiography# Feminism# Biography Memoir", "9780000000000", "English", 353, 1198 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1939, 1940, "Crossing to Safety", "Crossing to Safety", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.16", " T.H. Watkins (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1940, 194, "The Shelters of Stone", "The Shelters of Stone", "Ayla# Jondalar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Romance# Prehistoric# Adventure# Adult# Adult Fiction# Audiobook", "9780000000000", "English", 891, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1941, 1942, "Prince of Wolves", "Prince of Wolves", "Fane Lupei# Jacque Pierce# Jennifer Adams# Sally Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Young Adult# Werewolves# Fantasy# Romance# Paranormal Romance# Shapeshifters# Supernatural# Wolves# Urban Fantasy", "10000000000000", "English", 230, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1942, 1943, "Strange Angels", "Strange Angels", "Young Adult# Paranormal# Fantasy# Vampires# Urban Fantasy# Werewolves# Supernatural# Romance# Zombies# Angels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 455 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1943, 1944, "The Crimson Petal and the White", "The Crimson Petal and the White", "Sugar# William Rackham# Agnes Rackham# Henry Rackham# Sophie Rackham# Emmeline Fox# Caroline (The Crimson Petal and the White)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Victorian# Romance# British Literature# Adult# Literary Fiction# 19th Century# Novels", "9780000000000", "English", 835, 1944 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1944, 413, "Dreams of Gods and Monsters", "Dreams of Gods and Monsters", "Karou# Akiva (Daughter of Smoke & Bone)# Zuzana# Issa# Lirazel# Ziri# Jael", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Angels# Paranormal# Urban Fantasy# Fiction# Magic# Young Adult Fantasy# Audiobook", "9780000000000", "English", 613, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1945, 66, "Wolves of the Calla", "Wolves of the Calla", "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Science Fiction Fantasy# Audiobook# Post Apocalyptic# Epic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 1946 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1946, 1947, "Hairspray and Lighter", "Hairspray and Lighter", "", new DateTime(2022, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Contemporary# Novels# Book Club# Fiction# Drama# Epic", "B07KJYKZ5K", "English", 225, 1947 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1947, 645, "Trickster's Queen", "Trickster's Queen", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Romance# Adventure# High Fantasy# Teen# Science Fiction Fantasy", "10000000000000", "English", 496, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1948, 1949, "The Player of Games", "The Player of Games", "Jernau Gurgeh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Science Fiction Fantasy# Fantasy# Cultural# Space# Audiobook# Novels# Speculative Fiction", "9780000000000", "English", 293, 1949 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1949, 75, "Written in My Own Heart's Blood", "Written in My Own Heart's Blood", "Jamie Fraser# Brianna Randall# Roger MacKenzie# Jeremiah MacKenzie# Fergus Fraser# Marsali Fraser# Germain Fraser# Ian Murray# Lord John Grey# Benedict Arnold# Claire Randall Fraser# Jonathan Randall# Dougal MacKenzie# Geillis Duncan# Jenny Murray# Young Ian Murray# William Ransom# Rachel Hunter# Denzell Hunter# William Buccleigh MacKenzie# Amanda MacKenzie# Harold# Duke of Pardloe# Henri-Christian Fraser# Brian Fraser# Jane Pocock# Frances Pocock# Dorothea Grey# Jerry MacKenzie# George Washington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Fiction# Fantasy# Time Travel# Historical# Historical Romance# Audiobook# Adult# Science Fiction", "9780000000000", "English", 825, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1950, 1951, "Be More Pirate: Or How to Take On the World and Win", "Be More Pirate: Or How to Take On the World and Win", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Business# Self Help# Philosophy# Leadership# Finance# Personal Development# Psychology", "9780000000000", "English", 290, 1951 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1951, 371, "The Fires of Heaven", "The Fires of Heaven", "Rand alThor# Nynaeve alMeara# Egwene alVere# Matrim Cauthon# Min Farshaw# Elayne Trakand", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Epic# Audiobook# Adventure# Magic# Adult", "9780000000000", "English", 912, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1952, 1953, "Lucifer's Hammer", "Lucifer's Hammer", "Science Fiction# Fiction# Post Apocalyptic# Apocalyptic# Science Fiction Fantasy# Dystopia# Survival# Audiobook# Speculative Fiction# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 1953 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1953, 1954, "Legend", "Legend", "Druss", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Heroic Fantasy# High Fantasy# Adventure# Sword and Sorcery# War# Science Fiction Fantasy# Epic", "10000000000000", "English", 345, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1954, 667, "Nation", "Nation", "Mau# Daphne (Ermintrude Fanshaw)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Adventure# Historical Fiction# Humor# Alternate History# Teen# Audiobook# Survival", "9780000000000", "English", 367, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1955, 1956, "The Forsyte Saga", "The Forsyte Saga", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Historical Fiction# British Literature# Literature# Romance# Historical# Classic Literature# 20th Century# Novels", "9780000000000", "English", 872, 67 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1956, 232, "Perelandra", "Perelandra", "Elwin Ransom", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Christian# Classics# Christian Fiction# Science Fiction Fantasy# Religion# Christianity# Adventure", "9780000000000", "English", 288, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1957, 1958, "The Indian in the Cupboard", "The Indian in the Cupboard", "Omri# Little Bull# Boone# Bright Stars", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Childrens# Fiction# Young Adult# Classics# Middle Grade# Juvenile# Adventure# Chapter Books# School", "9780000000000", "English", 192, 1708 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1958, 1959, "The Woman in the Dunes", "The Woman in the Dunes", "Fiction# Japan# Japanese Literature# Classics# Literature# Novels# Asia# Magical Realism# Literary Fiction# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.91", 0, 1959 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1959, 1960, "The Civil War: A Narrative", "The Civil War: A Narrative", "", new DateTime(2022, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "History# Civil War# Nonfiction# American History# War# Military History# American Civil War# Military Fiction# Politics# Historical", "9780000000000", "English", 2934, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1960, 542, "Night Pleasures", "Night Pleasures", "Speirr of the Morrigantes (Talon)# Nicholas Ambrosius Gautier# Kyrian of Thrace# Amanda Devereaux# Tabitha Devereaux Magnus# Valerius Magnus# Grace Alexander# Artemis Agrotera# Rosa Garcia# Tate Bennett# Neco DAlerian# Eric St. James# Esmeralda Devereaux# Aphrodite (Hunter Legends series)# Acheron Ash Parthenopaeus# Julian of Macedonia (Hunter Legends series)# Selena Devereaux Laurens# Tiyana Devereaux", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Fantasy# Vampires# Urban Fantasy# Adult# Mythology# Supernatural# Fiction", "9780000000000", "English", 309, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1961, 1962, "Cane River", "Cane River", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# African American# Southern# Adult# Book Club# Family# Novels# Adult Fiction", "9780000000000", "English", 522, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1962, 1963, "The Birth of Venus", "The Birth of Venus", "Alessandra Cecci# Tomaso Cecci# Cristoforo Langella# Painter# Girolamo Savonarola", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Italy# Art# Romance# Adult Fiction# Adult# Book Club# 15th Century", "9780000000000", "English", 427, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1963, 141, "From Hell", "From Hell", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.17", " Pete Mullins (illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1964, 1965, "\"The History of Tom Jones", "\"The History of Tom Jones", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.74", " Alice Wakely (Editor)\"", " Thomas Keymer (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1965, 558, "The Summer Garden", "The Summer Garden", "Tatiana Metanova# Alexander Barrington# Sam Gulotta# Anthony Barrington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Historical Romance# Historical# Fiction# War# Russia# Adult# Drama# World War II", "9780000000000", "English", 742, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1966, 1967, "\"Out of Sight", "\"Out of Sight", "Young Adult# Mystery# Romance# Contemporary# Espionage# Fiction# Adventure# Chick Lit# Teen# Action", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.33", 0, 1967 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1967, 1968, "\"The Good", "\"The Good", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.25", "Kim Harrison (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1968, 1969, "Roadside Picnic", "Roadside Picnic", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.18", " Antonina W. Bouis (Translator)\"", " Theodore Sturgeon (Introduction)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1969, 96, "The Best of Me", "The Best of Me", "Amanda Collier# Dawson Cole", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Audiobook# Adult Fiction# Contemporary Romance# Drama# Love", "9780000000000", "English", 292, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1970, 1358, "The Husband's Secret", "The Husband's Secret", "Cecilia Fitzpatrick# John-Paul Fitzpatrick# Tess OLeary# Rachel Crowley# Felicity# Connor Whitby", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Chick Lit# Contemporary# Audiobook# Adult# Adult Fiction# Book Club# Thriller# Australia", "9780000000000", "English", 396, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1971, 863, "Secrets of the Dragon Sanctuary", "Secrets of the Dragon Sanctuary", "Kendra Sorenson# Seth Sorenson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Adventure# Dragons# Magic# Childrens# Young Adult Fantasy# Juvenile", "9780000000000", "English", 535, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1972, 1003, "A Gathering of Shadows", "A Gathering of Shadows", "Kell Maresh# Rhy Maresh# Holland Vosijk# Emira Maresh# Maxim Maresh# Tieren Serense# Ojka# Delilah Lila Bard# Alucard Emery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adult# LGBT# Audiobook# Romance# Adventure# High Fantasy", "9780000000000", "English", 512, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1973, 1974, "\"Look Homeward", "\"Look Homeward", "Fiction# Classics# Literature# Novels# American# Southern# Literary Fiction# Coming Of Age# 20th Century# Historical Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 1974 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1974, 737, "Washington Square", "Washington Square", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.69", " Radu Surdulescu (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1975, 96, "The Longest Ride", "The Longest Ride", "Ruth# Ira Levinson# Sophia Danko# Luke Collins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Audiobook# Adult Fiction# Contemporary Romance# Drama# Realistic Fiction", "9780000000000", "English", 398, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1976, 1977, "\"Love", "\"Love", "Young Adult# Fiction# Realistic Fiction# Romance# Contemporary# Middle Grade# Teen# Audiobook# Childrens# Coming Of Age", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1977, 1978, "The Dark Elf Trilogy Collector's Edition", "The Dark Elf Trilogy Collector's Edition", "Drizzt Do’Urden# Bruenor Battlehammer# Cattie Brie# Malice DoUrden# Belwar Dissengulp# Wulfgar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Forgotten Realms# Fiction# Science Fiction Fantasy# Epic Fantasy# High Fantasy# Adventure# Dungeons and Dragons# Magic# Elves", "9780000000000", "English", 808, 1978 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1978, 1979, "Dragons of Autumn Twilight", "Dragons of Autumn Twilight", "Fantasy# Dragonlance# Fiction# Dragons# High Fantasy# Epic Fantasy# Science Fiction Fantasy# Adventure# Young Adult# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 283 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1979, 803, "Wildwood Dancing", "Wildwood Dancing", "Jenica# Costin# Cezar# Tatiana# Sorrow# Iulia# Paula# Stela", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fairy Tales# Fiction# Retellings# Historical Fiction# Magic# Vampires# Young Adult Fantasy", "9780000000000", "English", 407, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1980, 1981, "The Statistical Probability of Love at First Sight", "The Statistical Probability of Love at First Sight", "Andrew Sullivan# Oliver# Hadley Sullivan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Chick Lit# Young Adult Contemporary# Teen# Young Adult Romance# Contemporary Romance", "9780000000000", "English", 236, 1981 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1981, 1982, "The Mysterious Benedict Society and the Perilous Journey", "The Mysterious Benedict Society and the Perilous Journey", "Mystery# Fiction# Young Adult# Adventure# Middle Grade# Childrens# Fantasy# Juvenile# Science Fiction# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.21", 0, 1982 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1982, 1983, "Memories of Ice", "Memories of Ice", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Epic Fantasy# Fiction# High Fantasy# Epic# Dark Fantasy# Science Fiction Fantasy# War# Magic# Audiobook", "9780000000000", "English", 925, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1983, 700, "Twenties Girl", "Twenties Girl", "Sadie# Lara Lington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Contemporary# Humor# Adult# Paranormal# Audiobook# Contemporary Romance# Adult Fiction", "9780000000000", "English", 435, 1871 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1984, 1985, "Kürk Mantolu Madonna", "Kürk Mantolu Madonna", "Raif Bey# Maria Puder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Turkish Literature# Fiction# Classics# Turkish# Novels# Literature# Roman# Romance# Historical Fiction# 20th Century", "9790000000000", "Turkish", 160, 1985 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1985, 863, "Grip of the Shadow Plague", "Grip of the Shadow Plague", "Seth Sorenson# Kendra Sorenson# Coulter Dixon# Stan Sorenson Grandpa# Dale# Doren# Newel# Hugo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Adventure# Magic# Childrens# Young Adult Fantasy# Juvenile# Science Fiction Fantasy", "9780000000000", "English", 477, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1986, 1987, "Life After Life", "Life After Life", "Ursula Todd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Fantasy# Historical# Time Travel# Audiobook# Literary Fiction# Adult# World War II# Adult Fiction", "9780000000000", "English", 531, 1438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1987, 1019, "The Black Prism", "The Black Prism", "Gavin Guile# Dazen Guile# Kip Guile# Olivia Liv Danavis# Orea Pullawr# Andross Guile# Karris White Oak# Corvan Danavis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Adult# Science Fiction Fantasy# Adventure# Audiobook# Epic", "9780000000000", "English", 629, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1988, 99, "Blackwood Farm", "Blackwood Farm", "Lestat de Lioncourt# Quinn Tyrrell# Mona Mayfair", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Horror# Fantasy# Fiction# Paranormal# Supernatural# Witches# Urban Fantasy# Gothic# Adult", "9780000000000", "English", 774, 1989 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1989, 1990, "Bet Me", "Bet Me", "Minerva Dobbs# Calvin Morrisey# David Fisk", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Chick Lit# Contemporary Romance# Contemporary# Fiction# Humor# Adult# Adult Fiction# Audiobook# Comedy", "9780000000000", "English", 391, 293 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1990, 1991, "\"Whitney", "\"Whitney", "Historical Romance# Romance# Historical# Historical Fiction# Fiction# Regency# Adult# Regency Romance# Chick Lit# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 1991 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1991, 1992, "Magyk", "Magyk", "Fantasy# Young Adult# Magic# Fiction# Middle Grade# Childrens# Adventure# Young Adult Fantasy# Audiobook# High Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 1992 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1992, 804, "The Secret Keeper", "The Secret Keeper", "Laurel Nicolson# Dorothy Smitham# Vivien Jenkins# Jimmy Metcalfe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Mystery# Historical# Romance# Book Club# Adult# Adult Fiction# Audiobook# British Literature", "9780000000000", "English", 484, 1314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1993, 1236, "Tithe", "Tithe", "Kaye Fierch# Ellen Fierch# Cornelius Stone# Rath Roiben Rye# Janet Stone", new DateTime(2022, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Urban Fantasy# Paranormal# Fiction# Fairies# Romance# Fae# Young Adult Fantasy# Magic", "9780000000000", "English", 332, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1994, 1995, "The Immortals of Meluha", "The Immortals of Meluha", "Shiva# Sati# Nandi# Veerbhadra# Bŗahaspati# Daksha# Kanakhla# Parvateshvar# Ayurvati# Suryavanshis# Chandravanshis# Naga", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Mythology# Indian Literature# India# Historical Fiction# Amish# Novels# Adventure# Historical", "10000000000000", "English", 436, 1995 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1995, 840, "Lust for Life", "Lust for Life", "Vincent van Gogh# Theo van Gogh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Art# Classics# Historical# Biography Memoir# Novels# Literature# Art History# American", "9780000000000", "English", 431, 516 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1996, 409, "Siege and Storm", "Siege and Storm", "Alina Starkov# Malyen Oretsev# Darkling# Genya Safin# Zoya Nazyalensky# Nikolai Lantsov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Magic# Young Adult Fantasy# Fiction# High Fantasy# Adventure# Audiobook# Paranormal", "10000000000000", "English", 435, 409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1997, 1998, "As a Man Thinketh", "As a Man Thinketh", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Self Help# Nonfiction# Philosophy# Personal Development# Psychology# Classics# Spirituality# Business# Inspirational# Leadership", "9780000000000", "English", 80, 1998 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1998, 1999, "When You Reach Me", "When You Reach Me", "Miranda Sinclair# Sal# Mirandas best friend# Marcus Heilbronner# Mirandas mother# Richard the lawyer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Middle Grade# Fiction# Science Fiction# Mystery# Fantasy# Childrens# Time Travel# Science Fiction Fantasy# Historical Fiction", "9780000000000", "English", 199, 1999 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 1999, 2000, "Hate List", "Hate List", "Valerie Leftman# Nick Levil# Jessica Campbell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Realistic Fiction# Teen# High School# Drama# Mental Health# Death# Young Adult Contemporary", "9780000000000", "English", 405, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2000, 2001, "A Tale for the Time Being", "A Tale for the Time Being", "Naoko Yasutani# Ruth Ozeki# Haruki Yasutani# Jiko Yasutani", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Japan# Magical Realism# Historical Fiction# Contemporary# Literary Fiction# Audiobook# Asia# Adult Fiction# Novels", "9780000000000", "English", 422, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2001, 2002, "Rosemary's Baby", "Rosemary's Baby", "Rosemary Woodhouse# Guy Woodhouse# Minnie Castevet# Roman Castevet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Classics# Thriller# Mystery# Fantasy# Paranormal# Supernatural# Suspense# Adult", "9780000000000", "English", 308, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2002, 2003, "V.", "V.", "Fiction# Classics# Literature# American# Novels# Contemporary# Literary Fiction# 20th Century# Modern# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "French", "3.96", 0, 2003 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2003, 244, "Fairest", "Fairest", "Areida# Aza# Prince Ijori# Queen Ivi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fairy Tales# Romance# Fiction# Middle Grade# Retellings# Childrens# Magic# Fairy Tale Retellings", "9780000000000", "English", 326, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2004, 1645, "The 13½ Lives of Captain Bluebear", "The 13½ Lives of Captain Bluebear", "Fantasy# Fiction# Humor# Young Adult# German Literature# Adventure# Childrens# Science Fiction Fantasy# Audiobook# Germany", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2005, 2006, "Darkly Dreaming Dexter", "Darkly Dreaming Dexter", "Harry Morgan# Deborah Morgan# Sergeant James Doakes# Rita Morgan# Brian Moser# Vince Masuka# Lieutenant María LaGuerta# Angel Batista# Dexter Morgan# Joey Quinn# Tom Matthews# Jamie Batista", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Thriller# Crime# Horror# Mystery Thriller# Suspense# Adult# Audiobook# Contemporary", "10000000000000", "English", 288, 313 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2006, 2007, "The Beagle and the Hare", "The Beagle and the Hare", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Epic# Drama# Novels# Contemporary", "9780000000000", "", 116, 762 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2007, 2008, "\"Guns", "\"Guns", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.03", "Jared Diamond", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2008, 157, "Nutshell", "Nutshell", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Mystery# Literary Fiction# Novels# Audiobook# Thriller# British Literature# Crime# Adult Fiction", "10000000000000", "English", 208, 2009 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2009, 679, "Death in Venice", "Death in Venice", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.73", " Michael Henry Heim (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2010, 2011, "A Hero of Our Time", "A Hero of Our Time", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.11", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2011, 2012, "Captive Prince: Volume Two", "Captive Prince: Volume Two", "Laurent# Damen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# LGBT# Romance# M M Romance# Adult# Fiction# Queer# Historical# Gay# New Adult", "10000000000000", "English", 216, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2012, 2013, "Peter and the Starcatchers", "Peter and the Starcatchers", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.03", " Greg Call (Illustrations)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2013, 915, "The Battle for Skandia", "The Battle for Skandia", "Will Treaty# Halt OCarrick# Horace Altman# Evanlyn# King Duncan# Erak Starfollower# Ragnak# Slagor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Childrens# Teen# Young Adult Fantasy# Medieval", "9780000000000", "English", 294, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2014, 88, "Silver Shadows", "Silver Shadows", "Sydney Sage# Vasilisa Lissa Dragomir# Edison Eddie Castile# Angeline Dawes# Marcus Finch# Rosemarie Rose Hathaway# Adrian Ivashkov# Jillian Mastrano# Daniella Ivashkov# Rowena Clark# Trey Juarez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Urban Fantasy# Magic# Supernatural# Paranormal Romance# Fiction", "9780000000000", "English", 380, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2015, 2016, "Reversione: Reset the Future", "Reversione: Reset the Future", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Adventure# Mystery# Fantasy# New Adult# Science Fiction# Fiction# Mystery Thriller# Adult# Novels", "9780000000000", "", 242, 2016 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2016, 2017, "Blood Song", "Blood Song", "Vaelin Al Sorna# Caenis# Princess Lyrna# Lord Vernier# Master Sollis# King Janus# Aspect", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Epic Fantasy# Fiction# High Fantasy# Magic# Adventure# Audiobook# Adult# Science Fiction Fantasy# War", "B0070NSPCU", "English", 591, 2017 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2017, 99, "Pandora", "Pandora", "Marius de Romanus# David Talbot# Pandora", new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Vampires# Horror# Fantasy# Fiction# Paranormal# Supernatural# Urban Fantasy# Historical Fiction# Gothic# Historical", "9790000000000", "Spanish", 383, 2018 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2018, 588, "The Ersatz Elevator", "The Ersatz Elevator", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.04", 0, 2019 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2019, 1709, "The Passion", "The Passion", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Magical Realism# LGBT# Queer# Historical# Fantasy# Literature# Novels# Romance", "9780000000000", "English", 176, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2020, 787, "Trinity", "Trinity", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Ireland# Historical# Irish Literature# Classics# Novels# Literature# War# Adult Fiction", "9780000000000", "", 912, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2021, 2022, "In the Woods", "In the Woods", "Cassie Maddox# Rob Ryan# Sam ONeill# Detective Quigley# Superintendent OKelly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Ireland# Suspense# Adult# Audiobook# Contemporary", "10000000000000", "English", 429, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2022, 39, "The Doors of Perception & Heaven and Hell", "The Doors of Perception & Heaven and Hell", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Philosophy# Nonfiction# Psychology# Classics# Essays# Spirituality# Religion# Science# Thriller# Literature", "9780000000000", "English", 187, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2023, 2024, "Between the World and Me", "Between the World and Me", "Ta-Nehisi Coates", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Race# Audiobook# History# Biography# Social Justice# Essays# Politics# African American", "9780000000000", "English", 152, 2024 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2024, 454, "An Echo in the Darkness", "An Echo in the Darkness", "Marcus Lucianus Valerian# Julia Valerian# Hadassah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian Fiction# Historical Fiction# Christian# Fiction# Romance# Historical# Christian Romance# Historical Romance# Christian Historical Fiction# Faith", "10000000000000", "English", 461, 2025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2025, 623, "Fear", "Fear", "Sam Temple# Astrid Ellison# Caine Soren# Diana Ladris# Quinn Gaither# Drake Merwin# Little Pete# Lana Lazar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Horror# Paranormal# Romance# Supernatural# Adventure", "9780000000000", "English", 509, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2026, 588, "The End", "The End", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 1162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2027, 2028, "لا تحزن", "لا تحزن", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Islam# Religion# Nonfiction# Self Help# Psychology# Inspirational# Philosophy# Spirituality# Unfinished# Indonesian Literature", "10000000000000", "Arabic", 584, 2028 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2028, 535, "The Blade Artist", "The Blade Artist", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Crime# Dark# Suspense# Drama# Psychological Thriller# Adult# Cult Classics", "9780000000000", "", 288, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2029, 2030, "The Love Song of J. Alfred Prufrock and Other Poems", "The Love Song of J. Alfred Prufrock and Other Poems", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Classics# Fiction# Literature# 20th Century# School# American# British Literature# Read For School# Nobel Prize", "9780000000000", "English", 44, 2030 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2030, 2031, "John Dies at the End", "John Dies at the End", "David Wong# John Cheese# Amy Sullivan# James Sullivan# Molly# The Fake Jamaican# Arnie Blondestone# Jennifer Lopez# Lawrence Morgan Freeman Appleton# Fred Chu# Albert Marconi# Justin Shitload White", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Humor# Fantasy# Science Fiction# Comedy# Urban Fantasy# Paranormal# Supernatural# Audiobook", "9780000000000", "English", 362, 2031 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2031, 385, "Sentinel", "Sentinel", "Aiden St. Delphi# Alexandria Alex Andros# Seth (Covenant Series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Mythology# Romance# Paranormal Romance# Greek Mythology# Urban Fantasy# Supernatural# Magic", "9780000000000", "English", 297, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2032, 2033, "A Mango-Shaped Space", "A Mango-Shaped Space", "Mia Winchell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Realistic Fiction# Fiction# Middle Grade# Contemporary# Childrens# Coming Of Age# Teen# School# Cats", "9780000000000", "English", 221, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2033, 2034, "The Name of This Book Is Secret", "The Name of This Book Is Secret", "Mystery# Fantasy# Middle Grade# Fiction# Young Adult# Adventure# Childrens# Humor# Magic# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 2034 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2034, 698, "Stillhouse Lake", "Stillhouse Lake", "Gina Royal/Gwen Proctor# Sam Cade# Javier Esparza# Kezia Claremont# Detective Prester# Lancel Graham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Mystery# Fiction# Mystery Thriller# Suspense# Crime# Audiobook# Adult# Contemporary# Horror", "B01MFGX5GI", "English", 301, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2035, 2036, "Team of Rivals: The Political Genius of Abraham Lincoln", "Team of Rivals: The Political Genius of Abraham Lincoln", "Abraham Lincoln# William H. Seward# Edwin McMasters Stanton# Salmon P. Chase# Edward Bates", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Biography# Politics# American History# Civil War# Presidents# Leadership# Historical# Audiobook", "9780000000000", "English", 916, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2036, 194, "The Plains of Passage", "The Plains of Passage", "Ayla# Jondalar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Romance# Prehistoric# Adventure# Adult# Adult Fiction# Novels", "9780000000000", "English", 784, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2037, 43, "The Hidden Oracle", "The Hidden Oracle", "Nico di Angelo# Apollo (Greek god)# Will Solace# Meg McCaffrey# Percy Jackson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Young Adult# Middle Grade# Fiction# Adventure# LGBT# Urban Fantasy# Audiobook# Childrens", "9780000000000", "English", 375, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2038, 2039, "Written in Red", "Written in Red", "Meg Corbyn# Vladimir Sanguinati# Simon Wolfgard# Henry Beargard# Crispin James Montgomery# Tess# Asia Crane# Blair Wolfgard# Elliot Wolfgard# Karl Kowalski# Nathan Wolfgard# Jester Coyotegard# Erebus Sanguinati# Winter# Jake Crowgard# Sam Wolfgard", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Paranormal# Vampires# Adult# Werewolves# Shapeshifters# Romance# Magic# Fiction", "9780000000000", "English", 433, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2039, 2040, "Special Topics in Calamity Physics", "Special Topics in Calamity Physics", "Blue van Meer# Victor Moats# Fayonette Harper# Smoke Wyannoch Harvey# Natasha Alicia Bridges van Meer# Pa Havermeyer# Howie Valerio# Frank Fletcher# Jefferson Whitestone# Ms. Simpson# Wilson Gnut# Norvel Owen# Arnie Sanderson# Ms. Gershon# Alfred Johnson# Roy Withers# Eugenia Sturds# Violet May Martinez# Lonny Felix# Andreo Verduga# Lee Sanjay Song", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Contemporary# Literary Fiction# Novels# Young Adult# Coming Of Age# Mystery Thriller# Adult# Adult Fiction", "9780000000000", "English", 514, 801 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2040, 2041, "Life Song", "Life Song", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "9780000000000", "", 338, 2041 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2041, 438, "9-Nov", "9-Nov", "Benton James Kessler# Fallon ONeil", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Fiction# Contemporary Romance# Audiobook# Chick Lit# Adult# Drama", "9780000000000", "English", 307, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2042, 36, "Tortilla Flat", "Tortilla Flat", "Danny# Pablo Soler# Pilon# Jesus Maria Corcoran# Pirate# Torelli", new DateTime(2022, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Classics# Literature# Novels# American# Historical Fiction# 20th Century# Literary Fiction# The United States Of America# Classic Literature", "9780000000000", "English", 256, 2043 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2043, 2044, "Harold and the Purple Crayon", "Harold and the Purple Crayon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Picture Books# Childrens# Fiction# Classics# Fantasy# Art# Kids# Adventure# Young Adult# Juvenile", "9780000000000", "English", 64, 447 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2044, 2045, "Dorothy Must Die", "Dorothy Must Die", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Retellings# Fiction# Magic# Fairy Tales# Adventure# Young Adult Fantasy# Audiobook# Teen", "9780000000000", "English", 452, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2045, 667, "Feet of Clay", "Feet of Clay", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Cut Me Own Throat Dibbler# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# Angua von Überwald# Fred Colon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Mystery# Audiobook# High Fantasy# Comic Fantasy# British Literature", "9780000000000", "English", 411, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2046, 2047, "Postmortem", "Postmortem", "Mystery# Crime# Fiction# Thriller# Mystery Thriller# Suspense# Murder Mystery# Detective# Adult# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 613 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2047, 224, "Tower of Dawn", "Tower of Dawn", "Chaol Westfall# Yrene Towers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# New Adult# Magic# Fiction# Young Adult Fantasy# High Fantasy# Fae# Paranormal", "9780000000000", "English", 660, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2048, 1436, "The Lions of Al-Rassan", "The Lions of Al-Rassan", "Ammar ibn Khairan# Rodrigo Belmonte# Jehane bet Ishak", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Historical Fiction# Fiction# Historical Fantasy# Historical# Science Fiction Fantasy# Epic Fantasy# High Fantasy# Alternate History# Romance", "9780000000000", "English", 528, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2049, 860, "The Bachman Books", "The Bachman Books", "Horror# Fiction# Thriller# Mystery# Suspense# Crime# Dark# Fantasy# Anthologies# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2050, 1740, "\"Fullmetal Alchemist", "\"Fullmetal Alchemist", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.5", " Akira Watanabe (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2051, 2052, "The Curse of Chalion", "The Curse of Chalion", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# High Fantasy# Epic Fantasy# Science Fiction Fantasy# Romance# Audiobook# Magic# Adult# Science Fiction", "9780000000000", "English", 490, 1238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2052, 1576, "The Book of Illusions", "The Book of Illusions", "David Zimmer# Hector Mann", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Contemporary# American# Literature# Novels# The United States Of America# Literary Fiction# Drama# Thriller", "9780000000000", "English", 288, 2053 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2053, 831, "Glass", "Glass", "Brad# Trey# Kristina Snow# Robyn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Realistic Fiction# Teen# Mental Health# Romance# Abuse# High School", "9780000000000", "English", 681, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2054, 2055, "\"South of the Border", "\"South of the Border", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.87", " Philip Gabriel (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2055, 343, "Steelheart", "Steelheart", "David (The Reckoners)# Steelheart# Thia# Cody", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction# Dystopia# Fiction# Urban Fantasy# Superheroes# Audiobook# Adventure# Science Fiction Fantasy", "9780000000000", "English", 386, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2056, 2057, "Utopia", "Utopia", "Classics# Philosophy# Fiction# Politics# Literature# Dystopia# School# Science Fiction# Utopia# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.54", 0, 2057 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2057, 85, "The Crossing", "The Crossing", "Billy Parham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Westerns# Literature# Novels# Historical Fiction# American# Literary Fiction# Contemporary# Classics# Adventure", "9780000000000", "English", 426, 2058 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2058, 95, "The Garden of Eden", "The Garden of Eden", "David Bourne# Catherine Bourne# Marita", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# Novels# American# Romance# France# Literary Fiction# 20th Century# Classic Literature", "9780000000000", "English", 248, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2059, 2060, "Kristin Lavransdatter", "Kristin Lavransdatter", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.29", " Brad Leithauser (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2060, 2061, "Angel", "Angel", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Angels# Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Urban Fantasy# Fiction# Teen", "9780000000000", "English", 507, 2061 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2061, 385, "White Hot Kiss", "White Hot Kiss", "Layla# Roth# Zayne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Paranormal# Young Adult# Romance# Demons# Paranormal Romance# Urban Fantasy# Supernatural# New Adult# Angels", "9780000000000", "", 400, 2062 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2062, 2063, "The Gift of the Magi", "The Gift of the Magi", "Classics# Short Stories# Fiction# Christmas# Romance# Literature# Holiday# Young Adult# School# Picture Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.09", 0, 2063 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2063, 2064, "Autobiography of a Yogi", "Autobiography of a Yogi", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Spirituality# Biography# Nonfiction# Philosophy# Religion# Autobiography# Memoir# India# Hinduism# Self Help", "9780000000000", "English", 448, 2064 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2064, 632, "The Baron in the Trees", "The Baron in the Trees", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.06", " Ana Goldstein (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2065, 744, "Golden Son", "Golden Son", "Darrow# Cassius au Bellona# Mustang# Sevro au Barca# Fitchner au Barca", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fantasy# Dystopia# Fiction# Young Adult# Audiobook# Science Fiction Fantasy# Adult# Adventure# Space", "9780000000000", "English", 430, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2066, 2067, "The Ghost Moth (The Red Grouse Tales)", "The Ghost Moth (The Red Grouse Tales)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Drama# Contemporary", "B08D6QNWWK", "English", 321, 1267 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2067, 2068, "Story of the Eye", "Story of the Eye", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.66", " Dovid Bergelson (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2068, 2069, "The Well House", "The Well House", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Drama# Contemporary# Novels# Epic", "9780000000000", "", 308, 1539 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2069, 2070, "Falling Kingdoms", "Falling Kingdoms", "Fantasy# Young Adult# Magic# Romance# High Fantasy# Young Adult Fantasy# Fiction# Adventure# Epic Fantasy# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 2070 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2070, 656, "Ship of Destiny", "Ship of Destiny", "Tintaglia# Althea Vestrit# Ronica Vestrit# Keffria Vestrit# Wintrow Vestrit# Malta Vestrit# Vivacia# Paragon# Brashen Trell# Amber (Liveship Traders)# Reyn Khuprus# Kennit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Dragons# High Fantasy# Science Fiction Fantasy# Adventure# Epic# Magic# Adult", "9780000000000", "English", 789, 656 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2071, 667, "Thief of Time", "Thief of Time", "The Four Horsemen of the Apocalypse# Nanny Ogg# DEATH# Susan Sto Helit# Death of Rats# The Auditors# Ronny Soak# Monks of History# Lu-Tze", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Time Travel# Science Fiction# High Fantasy# Novels", "9780000000000", "English", 378, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2072, 2073, "Children of Blood and Bone", "Children of Blood and Bone", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Audiobook# Romance# Adventure# High Fantasy# Africa", "9780000000000", "English", 544, 2073 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2073, 396, "Death Comes for the Archbishop", "Death Comes for the Archbishop", "Jean Marie Latour# Joseph Vaillant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Literature# Novels# Religion# American# Westerns# Historical# Literary Fiction", "9780000000000", "English", 297, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2074, 2075, "Coming Storm", "Coming Storm", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Adventure# Adult# Fantasy# New Adult# Science Fiction Fantasy# Novels# Science Fiction# Teen", "9780000000000", "", 208, 2075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2075, 2076, "The Richest Man in Babylon", "The Richest Man in Babylon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Finance# Business# Self Help# Nonfiction# Personal Finance# Money# Personal Development# Economics# Classics# Philosophy", "9780000000000", "English", 194, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2076, 969, "Furies of Calderon", "Furies of Calderon", "Bernard# Amara# Fade# Isana# Gaius Sextus# Aldrick# Fidelius# Odiana# Aquataine# Doroga# Tavi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Magic# Science Fiction Fantasy# Adventure# Audiobook# Adult# Young Adult", "9780000000000", "English", 504, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2077, 64, "Dune Messiah", "Dune Messiah", "Stilgar# Duncan Idaho# Scytale# Paul Atreides# Alia Atreides", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Classics# Space Opera# Audiobook# Novels# Speculative Fiction# Space", "9780000000000", "English", 337, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2078, 2079, "كليلة ودمنة", "كليلة ودمنة", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Arabic", "4.11", " عبد الوهاب عزام (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2079, 2080, "Moon Tiger", "Moon Tiger", "Claudia Hampton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Literary Fiction# Thriller# Suspense# Novels# Drama# War# Contemporary# British Literature", "9780000000000", "English", 224, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2080, 2081, "The Golden Notebook", "The Golden Notebook", "Anna Wulf# Max Wulf# Janet Wulf# Molly Jacobs# Richard Portmain", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Feminism# Literature# Novels# Nobel Prize# Womens# Literary Fiction# British Literature# 20th Century", "9780000000000", "English", 640, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2081, 2082, "Becoming", "Becoming", "Michelle Obama# Barack Obama# Valerie Jarrett", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Audiobook# Autobiography# Politics# Biography Memoir# Feminism# Adult# History", "10000000000000", "English", 426, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2082, 2083, "Elsewhere", "Elsewhere", "Elizabeth Marie Hall# Thandiwe Washington# Betty Bloom# Curtis Jest# Aldous Ghent# Olivia Bloom Hall# Lucy# Alvy Hall# Coco# Captain Welles# Florence# Doris# Myrna# Mrs. Early# Reginald Christopher Doral Monmount Harris the Third# Owen Welles# Emily Reilly Welles# Josh# Shelly# Dr. Frederick# Phyllis# Zooey Ann Brandon# Yetta Brown# Rowena Ghent# Sarah Miles# Esther# Arthur Hall# Edward# Dr. Fujiyama# Arnold# Amadou Bonamy# Josey Wu# Sadie# Jen# Paco# Pete# Beneatha# Allie Reilly# Joe# Owen# Dolly# Paul Scott Spencer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Fiction# Romance# Death# Teen# Paranormal# Contemporary# Supernatural# Audiobook", "10000000000000", "English", 277, 46 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2083, 848, "The Hero and the Crown", "The Hero and the Crown", "Aerin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Dragons# Adventure# Romance# Magic# Science Fiction Fantasy# Young Adult Fantasy# High Fantasy", "9780000000000", "English", 240, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2084, 2085, "The Analyst", "The Analyst", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Suspense# Crime# Mystery Thriller# Novels# Psychology# Contemporary# Adult", "9780000000000", "English", 491, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2085, 2086, "House of Spies", "House of Spies", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Espionage# Mystery Thriller# Suspense# Spy Thriller# Novels# Audiobook# Adult", "9780000000000", "English", 576, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2086, 2087, "The Goddess Test", "The Goddess Test", "Katherine Kate Winters# Henry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Mythology# Romance# Paranormal# Greek Mythology# Fiction# Paranormal Romance# Retellings# Supernatural", "9780000000000", "English", 293, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2087, 445, "The Lost Colony", "The Lost Colony", "Artemis Fowl II# Domovoi Butler# Captain Holly Short# Foaly# Mulch Diggums# No1# Leon Abbot (aka Nzall)# Minerva Paradizo# Billy Kong# Qwan# Doodah Day# Myles Fowl# Beckett Fowl# Ark Sool# Wing Commander Vinyáya# Qweffor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Adventure# Middle Grade# Childrens# Magic# Urban Fantasy# Audiobook", "10000000000000", "English", 385, 2088 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2088, 2089, "Bird Box", "Bird Box", "Malorie# Tom# Olympia# Gary# Don# Cheryl# Boy# Girl# Shannon# Jules# Felix# Rick# Constance# George (Bird Box)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Dystopia# Mystery# Science Fiction# Post Apocalyptic# Audiobook# Adult# Suspense", "10000000000000", "English", 262, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2089, 2090, "The Monk Who Sold His Ferrari: A Fable About Fulfilling Your Dreams and Reaching Your Destiny", "The Monk Who Sold His Ferrari: A Fable About Fulfilling Your Dreams and Reaching Your Destiny", "Julian Mantle# Yogi Raman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Self Help# Nonfiction# Philosophy# Spirituality# Personal Development# Inspirational# Psychology# Business# Unfinished# Audiobook", "9780000000000", "English", 208, 2090 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2090, 12, "Mostly Harmless", "Mostly Harmless", "Arthur Dent# Ford Prefect# Trillian# Thrashbarg# Random Frequent Flyer Dent", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Humor# Fantasy# Comedy# Science Fiction Fantasy# Classics# Audiobook# Adventure# Novels", "9780000000000", "English", 288, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2091, 2092, "A Merciful Truth", "A Merciful Truth", "Mercy Kilpatrick# Truman Daly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Romantic Suspense# Thriller# Crime# Fiction# Romance# Suspense# Contemporary# Mystery Thriller# Audiobook", "B01MQ2HAAJ", "English", 322, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2092, 2093, "Desert Solitaire", "Desert Solitaire", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Nature# Memoir# Travel# Environment# Adventure# Outdoors# Biography# Philosophy# Classics", "9780000000000", "English", 337, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2093, 2094, "Burr", "Burr", "Aaron Burr", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Politics# American History# Historical# Novels# American# Literature# American Revolution# Classics", "9780000000000", "English", 430, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2094, 1364, "Everblaze", "Everblaze", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Adventure# Fiction# Magic# Childrens# Young Adult Fantasy# Elves# Mystery", "9780000000000", "English", 624, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2095, 66, "Dreamcatcher", "Dreamcatcher", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "French", "3.63", " Maria Teresa Marenco (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2096, 1611, "Daisy Jones & The Six", "Daisy Jones & The Six", "Warren Raymond# Billy Dunne# Daisy Jones# Simone Jackson# Graham Dunne# Camila Dunne# Eddie Loving# Karen Karen# Teddy Price", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Audiobook# Adult# Contemporary# Music# Historical# Adult Fiction# Romance# Book Club", "9780000000000", "English", 355, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2097, 2098, "The Solitude of Prime Numbers", "The Solitude of Prime Numbers", "Fiction# Contemporary# Italian Literature# Romance# Italy# Novels# Literature# Young Adult# Drama# Roman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.61", 0, 2098 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2098, 2099, "Rubáiyát of Omar Khayyám", "Rubáiyát of Omar Khayyám", "Poetry# Classics# Philosophy# Literature# Fiction# Iran# Religion# Spirituality# Islam# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 993 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2099, 1364, "Exile", "Exile", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Adventure# Fiction# Magic# Childrens# Young Adult Fantasy# Elves# Mystery", "9780000000000", "English", 576, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2100, 123, "The Time Keeper", "The Time Keeper", "Sarah Lemon# Victor Delamonte# Dor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Inspirational# Contemporary# Adult Fiction# Adult# Time Travel# Novels# Science Fiction# Audiobook", "9780000000000", "English", 224, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2101, 343, "The Alloy of Law", "The Alloy of Law", "Waxillium Ladrian# Wayne# Miles Dagouter# Lady Marasi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Steampunk# Epic Fantasy# High Fantasy# Audiobook# Adult# Magic# Science Fiction Fantasy# Science Fiction", "9780000000000", "English", 332, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2102, 2103, "The Education of Little Tree", "The Education of Little Tree", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Young Adult# Classics# Childrens# Book Club# Coming Of Age# American# Historical# Education", "9780000000000", "English", 228, 2103 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2103, 2104, "The Woman in the Window", "The Woman in the Window", "Anna Fox", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Mystery# Fiction# Mystery Thriller# Suspense# Audiobook# Crime# Psychological Thriller# Adult# Adult Fiction", "10000000000000", "English", 455, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2104, 2105, "\"Ronia", "\"Ronia", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.28", " Patricia Crampton (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2105, 2106, "Alexander Crowley - A New King in Town", "Alexander Crowley - A New King in Town", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Novels# Fiction# Book Club# Drama# Epic# Adventure# Adult# Fantasy# New Adult", "B079GRVRN5", "", 182, 1156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2106, 2107, "Narrative of the Life of Frederick Douglass", "Narrative of the Life of Frederick Douglass", "Frederick Douglass", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Classics# Biography# Memoir# School# Autobiography# African American# American History# Historical", "9780000000000", "English", 158, 2107 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2107, 1, "Gregor the Overlander", "Gregor the Overlander", "Boots", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Middle Grade# Fiction# Adventure# Childrens# Juvenile# Audiobook# Science Fiction# Science Fiction Fantasy", "9780000000000", "English", 326, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2108, 368, "Lover Reborn", "Lover Reborn", "John Matthew# Xhexania# Qhuinn# Blaylock# Tohrment# Xcor# (Autumn) NoOne# Lassiter (Black Dagger)# Wellesandra# Wrath (Blind King)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Vampires# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Erotica# Supernatural", "9780000000000", "English", 572, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2109, 2092, "A Merciful Death", "A Merciful Death", "Mercy Kilpatrick# Truman Daly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Romantic Suspense# Thriller# Romance# Suspense# Crime# Mystery Thriller# Contemporary# Audiobook", "B01EN506CO", "English", 353, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2110, 1373, "Archangel's Kiss", "Archangel's Kiss", "Elena Deveraux# Raphael (Archangel)# Illium (Angel)# Sara Haziz# Dmitri (Vampire)# Jason (Angel)# Venom (Vampire)# Michaela (Archangel)# Aodhan (Angel)# Galen (Angel)# Naasir (Vampire)# Neha (Archangel)# Keir (Angel)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Urban Fantasy# Paranormal Romance# Romance# Angels# Fantasy# Vampires# Adult# Supernatural# Fiction", "9780000000000", "English", 323, 1373 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2111, 2041, "In and Out of Step", "In and Out of Step", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction", "9780000000000", "English", 482, 2041 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2112, 1713, "Torment", "Torment", "Lilith# Keira Jameson# Lily Tierney# Eligos# Lucian Turner# Tyler Rickman# Danny Goodwin# Jake Culver# Marley Roberts# Beth Roberts", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Fantasy# Paranormal# Horror# Young Adult# Romance# Witches# Demons# Angels# Paranormal Romance", "9780000000000", "English", 308, 2113 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2113, 1386, "Memories Of My Future", "Memories Of My Future", "Historical Fiction# Historical# India# Fiction# Pakistan# Medicine# Medical# Inspirational# Cultural# Doctors", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B01J67SEK0", "English", "4.31", 0, 459 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2114, 1713, "Revelations", "Revelations", "Lilith# Keira Jameson# Lily Tierney# Eligos# Lucian Turner# Tyler Rickman# Danny Goodwin# Jake Culver# Marley Roberts# Beth Roberts", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Horror# Fantasy# Paranormal# Angels# Romance# Witches# Demons# Paranormal Romance", "9780000000000", "English", 300, 2113 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2115, 2116, "The Clown", "The Clown", "Fiction# German Literature# Novels# Classics# Germany# Literature# Nobel Prize# 20th Century# Literary Fiction# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 17 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2116, 2117, "The Dark Is Rising Sequence", "The Dark Is Rising Sequence", "Will Stanton# Simon Drew# Merry Lyon# Jane Drew# Barnabas Drew# Bran Davies# The Lady# Farmer Dawson# John Wayland Smith# The Black Rider# The White Rider# The Walker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Arthurian# Classics# Science Fiction Fantasy# Adventure# Magic# Mythology", "9780000000000", "English", 1148, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2117, 2118, "Chess Story", "Chess Story", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.29", " Joel Rotenberg (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2118, 2119, "\"The Holy Bible: New American Standard Version", "\"The Holy Bible: New American Standard Version", "Christian# Religion# Nonfiction# Reference# Theology# Christianity# Classics# History# Spirituality# Christian Non Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.6", 0, 2119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2119, 2120, "The Cay", "The Cay", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Historical Fiction# Classics# Childrens# School# Adventure# Survival# Read For School# Middle Grade", "9780000000000", "English", 156, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2120, 1092, "Through the Ever Night", "Through the Ever Night", "Aria# Liv# Peregrine Perry# Roar# Cinder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Fantasy# Science Fiction# Post Apocalyptic# Fiction# Paranormal# Adventure# Teen", "9780000000000", "English", 341, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2121, 2122, "Nevernight", "Nevernight", "Tric# Mia Corvere# Lord Cassius# Mister Kindly# Ashlin# Mercurio# Jessamine# Mother Drusilla# Shahiid Mouser# Shahiid Solis# Shahiid Aalea# Naev# Carlotta Valdi# Diamo# Weaver Marielle# Justicus Remus# Osrik# Speaker Adonai# Julius Scaeva# Francesco Duomo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Adult# New Adult# High Fantasy# Audiobook# Young Adult Fantasy# Magic# Romance", "9780000000000", "English", 429, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2122, 2123, "Feed", "Feed", "Georgia Mason# Shaun Mason# Georgette Buffy Meissonier# Peter Ryman# Richard Cousins# Rebecca Atherton# Alaric Kwong# Mahir Gowda", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Zombies# Science Fiction# Fiction# Dystopia# Post Apocalyptic# Young Adult# Fantasy# Thriller# Audiobook", "9780000000000", "English", 599, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2123, 2124, "A Thousand Acres", "A Thousand Acres", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literary Fiction# Contemporary# Literature# Novels# Family# Adult Fiction# American# Classics# Book Club", "9780000000000", "English", 371, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2124, 35, "The Trumpet of the Swan 50th Anniversary", "The Trumpet of the Swan 50th Anniversary", "Classics# Childrens# Fiction# Animals# Fantasy# Young Adult# Middle Grade# Juvenile# Chapter Books# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 360 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2125, 2126, "The Bear and the Nightingale", "The Bear and the Nightingale", "Vasilisa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Historical Fiction# Fiction# Young Adult# Historical# Fairy Tales# Russia# Mythology# Adult# Audiobook", "9780000000000", "English", 323, 156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2126, 2127, "Pygmalion", "Pygmalion", "Henry Higgins# Eliza Doolittle# Colonel Pickering# Alfred P. Doolittle# Mrs. Pearce# Mrs. Higgins# Freddy Eynsford-Hill# Clara Eynsford-Hill# Mrs. Eynsford-Hill", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Plays# Fiction# Drama# Theatre# School# Literature# Romance# British Literature# Read For School", "9780000000000", "English", 82, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2127, 2128, "The Bookseller of Kabul", "The Bookseller of Kabul", "Nonfiction# Biography# Memoir# History# Travel# Books About Books# Asia# Islam# Biography Memoir# Womens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.77", 0, 59 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2128, 2129, "Miss Lonelyhearts / The Day of the Locust", "Miss Lonelyhearts / The Day of the Locust", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# American# Short Stories# 20th Century# Literary Fiction# Novella# College", "9780000000000", "English", 185, 2129 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2129, 623, "Hunger", "Hunger", "Sam Temple# Astrid Ellison# Little Pete# Caine Soren# Diana Ladris# Drake Merwin# Quinn Gaither# Lana Lazar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Paranormal# Horror# Adventure# Supernatural# Romance", "9780000000000", "English", 590, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2130, 2131, "Embrace", "Embrace", "Violet Eden# Lincoln Wood# Phoenix (an exile)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Angels# Fantasy# Paranormal# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Fiction# Magic", "9780000000000", "English", 382, 2131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2131, 1205, "Found", "Found", "Jonah Skidmore# Katherine Skidmore# Chip Winston# JB# Angela DuPre", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Young Adult# Mystery# Time Travel# Fantasy# Fiction# Middle Grade# Adventure# Childrens# Historical Fiction", "9780000000000", "English", 320, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2132, 2133, "Totto-chan: The Little Girl at the Window", "Totto-chan: The Little Girl at the Window", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.35", " Dorothy Britton (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2133, 645, "First Test", "First Test", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Adventure# High Fantasy# Teen# Childrens# Science Fiction Fantasy", "9780000000000", "English", 240, 599 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2134, 923, "Underworld", "Underworld", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literature# Novels# American# Literary Fiction# Classics# Contemporary# Historical Fiction# 20th Century# Americana", "9780000000000", "English", 827, 1559 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2135, 2136, "Undead and Unwed", "Undead and Unwed", "Tina# Elizabeth Betsy Taylor# Eric Sinclair# Alicia# Nostros# Nick Berry# Dr. Marc Spangler# Jessica Watson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal# Romance# Fantasy# Paranormal Romance# Urban Fantasy# Chick Lit# Humor# Fiction# Supernatural", "9780000000000", "English", 255, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2136, 2137, "Rule", "Rule", "Shaw Landon# Rule Archer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# College# Young Adult# Adult# Chick Lit# Fiction# Erotica", "B00AV8725C", "English", 369, 2137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2137, 1488, "Parable of the Sower", "Parable of the Sower", "Lauren Olamina", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Fantasy# Post Apocalyptic# Speculative Fiction# Science Fiction Fantasy# Classics# Novels# African American", "9780000000000", "English", 345, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2138, 2139, "My Side of the Mountain", "My Side of the Mountain", "Sam Gribley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Childrens# Classics# Adventure# Survival# Middle Grade# Realistic Fiction# Nature# Animals", "9780000000000", "English", 192, 122 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2139, 534, "UnWholly", "UnWholly", "Connor Lassiter# Risa Ward# Lev Calder# Camus Comprix# Mason Starkey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Fantasy# Teen# Horror# Thriller# Romance# Survival", "9780000000000", "English", 416, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2140, 2141, "The Winter King", "The Winter King", "King Arthur", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fantasy# Fiction# Arthurian# Historical# Mythology# Medieval# Adventure# War# British Literature", "9780000000000", "English", 433, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2141, 2142, "\"Thirst No. 1: The Last Vampire", "\"Thirst No. 1: The Last Vampire", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.83", "Christopher Pike", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2142, 2143, "Green Rider", "Green Rider", "Karigan Gladheon# King Zachary# Captain Laren Mapstone# Shawdell (Green Rider)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# High Fantasy# Adventure# Science Fiction Fantasy# Epic Fantasy# Adult# Romance", "9780000000000", "English", 471, 309 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2143, 2144, "Temple of the Winds", "Temple of the Winds", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.01", " Ferhan Ertürk (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2144, 49, "Lucky", "Lucky", "Alice Sebold", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# True Crime# Biography Memoir# Autobiography# Adult# Crime# Contemporary# Drama", "9780000000000", "English", 243, 2145 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2145, 2012, "Captive Prince", "Captive Prince", "Laurent# Damen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# LGBT# M M Romance# Adult# Fiction# Queer# Historical# Gay# Historical Fiction", "10000000000000", "English", 240, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2146, 1883, "Beneath This Man", "Beneath This Man", "Ava OShea# Jesse Ward", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# BDSM# Contemporary Romance# Contemporary# Erotic Romance# Adult# New Adult# Love# Fiction", "B00DB7RDR2", "English", 452, 1025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2147, 2148, "They Both Die at the End", "They Both Die at the End", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# LGBT# Fiction# Romance# Audiobook# Queer# Science Fiction# Fantasy# Young Adult Contemporary", "9780000000000", "English", 373, 2148 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2148, 2149, "Rooftops of Tehran", "Rooftops of Tehran", "Pasha Shahed# Zari# Ahmed# Faheemeh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Iran# Romance# Historical# Cultural# Novels# Asia# Coming Of Age# Drama", "9780000000000", "English", 348, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2149, 2150, "Blood and Chocolate", "Blood and Chocolate", "Vivian Gandillon# Aiden Blake# Rafe Lowell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Werewolves# Urban Fantasy# Fiction# Supernatural# Paranormal Romance# Teen", "9780000000000", "English", 264, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2150, 672, "Another Roadside Attraction", "Another Roadside Attraction", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Novels# Literature# Contemporary# Magical Realism# American# Philosophy# Literary Fiction# Classics", "9780000000000", "English", 366, 672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2151, 2152, "The Black Obelisk", "The Black Obelisk", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# German Literature# Historical Fiction# War# Germany# Novels# 20th Century# Historical# Drama", "9780000000000", "English", 448, 1551 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2152, 105, "The Bane Chronicles", "The Bane Chronicles", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.15", " Cassandra Jean (Goodreads Author) (Illustrator)\"", " Maureen Johnson (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2153, 2154, "Little Bee", "Little Bee", "Sarah ORourke# Pequena Abelha# Andrew ORourke# Little Bee", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Africa# Historical Fiction# Book Club# Contemporary# Adult Fiction# Adult# Nigeria# Literary Fiction# Audiobook", "9780000000000", "English", 275, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2154, 2155, "Eighth Grade Bites", "Eighth Grade Bites", "Young Adult# Vampires# Fantasy# Paranormal# Supernatural# Fiction# Horror# Teen# Urban Fantasy# Middle Grade", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 610 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2155, 2141, "The Last Kingdom", "The Last Kingdom", "Alfred the Great# Guthrum the Dane# Uhtred of Bebbanburg# Ubba Ragnarsson# Ivar the Boneless# Halfdan Ragnarsson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Medieval# Adventure# War# Audiobook# British Literature# Adult# Novels", "9780000000000", "English", 351, 2156 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2156, 2157, "Guess How Much I Love You", "Guess How Much I Love You", "Picture Books# Childrens# Fiction# Animals# Family# Classics# Love# Kids# Storytime# Rabbits", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.37", 0, 2157 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2157, 1835, "Heart-Shaped Box", "Heart-Shaped Box", "Judas Coyne# Marybeth Stacy Kimball# Daniel Wooten# Craddock James McDermott# Anna McDermott", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Paranormal# Fantasy# Ghosts# Supernatural# Mystery# Audiobook# Adult", "9780000000000", "English", 376, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2158, 2159, "Love Unscripted", "Love Unscripted", "Ryan Christensen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# New Adult# Adult# Chick Lit# Love# Erotica# Fiction# Young Adult", "9780000000000", "English", 668, 2075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2159, 851, "Junky", "Junky", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.84", " Allen Ginsberg (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2160, 522, "One Grave at a Time", "One Grave at a Time", "Denise MacGregor# Bones (Night Huntress series)# Catherine Crawfield-Russell# Spade (Night Huntress series)# Tate Bradley# Don Williams# Ian Flannery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Urban Fantasy# Paranormal# Paranormal Romance# Romance# Fantasy# Adult# Ghosts# Supernatural# Fiction", "9780000000000", "English", 358, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2161, 525, "King's Cage", "King's Cage", "Kilorn Warren# Gisa Barrow# Tiberias Calore Cal VII# Mare Molly Barrow# Maven Calore# Cameron Cole# Evangeline Samos# Diana Farley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Fiction# Young Adult Fantasy# Audiobook# Science Fiction# Magic# High Fantasy", "9780000000000", "English", 528, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2162, 2163, "My Soul to Take", "My Soul to Take", "Kaylee Cavanaugh# Nash Hudson# Emma Marshall# Tod Hudson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Urban Fantasy# Paranormal Romance# Supernatural# Mystery# Fiction# Ghosts", "9780000000000", "English", 279, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2163, 2164, "The Strange and Beautiful Sorrows of Ava Lavender", "The Strange and Beautiful Sorrows of Ava Lavender", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magical Realism# Fiction# Romance# Historical Fiction# Contemporary# Paranormal# Young Adult Fantasy# Historical", "9780000000000", "English", 301, 621 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2164, 385, "Apollyon", "Apollyon", "Aiden St. Delphi# Alexandria Alex Andros# Seth (Covenant Series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Mythology# Romance# Paranormal Romance# Greek Mythology# Urban Fantasy# Supernatural# Magic", "9780000000000", "English", 343, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2165, 2166, "\"Theory of People: Understanding Behaviors", "\"Theory of People: Understanding Behaviors", "4.11", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Jakub Lasak (Goodreads Author)", " and the Mind\"", " Feelings", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2166, 2167, "The Arctic Incident", "The Arctic Incident", "Fantasy# Young Adult# Fiction# Science Fiction# Childrens# Middle Grade# Adventure# Magic# Urban Fantasy# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.94", 0, 2167 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2167, 1248, "Tell Me Your Dreams", "Tell Me Your Dreams", "Alette Peters# Ashley Patterson# Toni Prescott# Steven Patterson# David Singer# Sandra Singer# Jesse Quiller# Gilbert Keller# Emily Quiller# Joseph Kincaid# Jim Cleary# Samuel Blake# Richard Melton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Mystery Thriller# Crime# Novels# Romance# Drama# Psychology", "9780000000000", "English", 384, 861 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2168, 2169, "Cloudstreet", "Cloudstreet", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Australia# Historical Fiction# Classics# Literature# Literary Fiction# Contemporary# Novels# Family# Historical", "9780000000000", "English", 426, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2169, 2170, "Musashi", "Musashi", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.46", " Edwin O. Reischauer (Foreword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2170, 36, "Travels with Charley: In Search of America", "Travels with Charley: In Search of America", "John Steinbeck# Charley (Travels with Charley)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Travel# Classics# Memoir# Biography# Literature# Biography Memoir# American# Adventure# History", "9780000000000", "English", 214, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2171, 535, "Filth", "Filth", "Bruce Robertson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Crime# Mystery# Novels# Thriller# Dark# Drama# British Literature# Scotland", "9780000000000", "English", 393, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2172, 77, "Danny the Champion of the World", "Danny the Champion of the World", "Childrens# Fiction# Classics# Young Adult# Fantasy# Middle Grade# Adventure# Humor# British Literature# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.09", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2173, 2174, "Vampire Origins - Project Ichorous", "Vampire Origins - Project Ichorous", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Vampires# Young Adult# Horror# Romance# Supernatural# Magic# Paranormal Romance# Paranormal", "9780000000000", "English", 377, 2174 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2174, 969, "Dead Beat", "Dead Beat", "Thomas Raith# Donald Morgan# Bob (Dresden Files)# Waldo Butters# Lasciel# Ebenezer McCoy# Queen Mab# Captain Anastasia Luccio# Karrin Murphy# Carlos Ramirez# Harry Dresden# Georgia Borden# Billy Borden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Urban Fantasy# Mystery# Paranormal# Magic# Audiobook# Supernatural# Vampires# Science Fiction Fantasy", "9780000000000", "English", 517, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2175, 2176, "Fifth Business", "Fifth Business", "Dunstan Ramsay# Boy Staunton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Canada# Classics# Historical Fiction# Literature# Literary Fiction# Novels# Canadian Literature# School# Historical", "9780000000000", "English", 252, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2176, 2177, "Spellbound in His Arms", "Spellbound in His Arms", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Romance# Romantic Suspense# Mystery Thriller# Thriller# Suspense# Contemporary Romance# Fiction# Action# Adventure", "9780000000000", "English", 194, 2177 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2177, 2178, "Forsaken", "Forsaken", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Suspense# Contemporary Romance# Contemporary# Romantic Suspense# Erotica# Mystery# New Adult# Adult# Chick Lit", "9780000000000", "English", 384, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2178, 1813, "Her Final Breath", "Her Final Breath", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Audiobook# Contemporary# Adult# Detective", "B00TEFTA80", "English", 426, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2179, 432, "Library of Souls", "Library of Souls", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Paranormal# Historical Fiction# Adventure# Audiobook# Horror# Time Travel# Supernatural", "B00RKX364M", "English", 465, 1250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2180, 623, "Plague", "Plague", "Sam Temple", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Horror# Paranormal# Supernatural# Romance# Adventure", "9780000000000", "English", 494, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2181, 915, "The Sorcerer of the North", "The Sorcerer of the North", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Medieval# Young Adult Fantasy# Childrens# Teen", "9780000000000", "English", 304, 368 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2182, 1885, "Complicated Moonlight", "Complicated Moonlight", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B08H1JHDJN", "English", 287, 2183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2183, 872, "Midnight", "Midnight", "Elena Gilbert# Stefan Salvatore# Damon Salvatore# Matt Honeycutt# Bonnie McCullough# Meredith Sulez# Princess Jessalyn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Magic", "9780000000000", "English", 567, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2184, 2094, "Lincoln", "Lincoln", "Abraham Lincoln# Walt Whitman# William H. Seward# John Wilkes Booth# Mary Todd Lincoln# Rose ONeal Greenhow# James Buchanan# David Herold# Mary Surratt# John Surratt# Jr.# Richard Lyons# James A. Garfield# Elizabeth Keckley# Salmon P. Chase# Robert Todd Lincoln# Tad Lincoln# Kate Chase# William Sprague IV# Irvin McDowell# Simon Cameron# John Hay# John George Nicolay# Thaddeus Stevens# William Howard Russell# Allan Pinkerton# Ward Hill Lamon# Elihu B. Washburne# Francis Preston Blair# Henry Wikoff# William Herndon# Daniel Sickles# William Wallace Lincoln# John Watt# John R. Goldsborough# John E. Wool# Egbert Ludovicus Viele# Henry D. Cooke# Henry Halleck# John Pope# Joseph Hooker# Adele Cutts Douglas# Frederick W. Seward# Ambrose Burnside# Benjamin Wade# George Meade# Edmund Spangler# Emilie Todd Helm# Montgomery Blair# William P. Fessenden# Ulysses S. Grant# John C. Breckinridge# Winfield Scott# Francis Preston Blair Jr.# George McClellan# Charles Sumner# Edwin Stanton# Gideon Welles", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Civil War# Historical# Politics# American History# Literature# Presidents# American# Novels", "9780000000000", "English", 672, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2185, 2186, "Lost Horizon", "Lost Horizon", "Chalmers Bryant# Consul Conway# Lo-Tsen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Fantasy# Adventure# Literature# Historical Fiction# Novels# Travel# Asia# Science Fiction", "B007JCZGOC", "English", 142, 2186 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2186, 2187, "In the Miso Soup", "In the Miso Soup", "Horror# Fiction# Japan# Japanese Literature# Thriller# Crime# Mystery# Contemporary# Novels# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.59", 0, 992 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2187, 397, "Destroy Me", "Destroy Me", "Aaron Warner Anderson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Romance# Novella# Paranormal# Short Stories# Science Fiction# Fiction# Post Apocalyptic", "9780000000000", "English", 111, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2188, 2189, "The Bone People", "The Bone People", "Joe Gillayley# Kerewin Holmes# Simon Holt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Literary Fiction# Contemporary# Literature# Novels# Historical Fiction# Fantasy# Book Club# 20th Century", "9780000000000", "English", 450, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2189, 1813, "Close to Home", "Close to Home", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Audiobook# Mystery Thriller# Suspense# Adult# Detective# Contemporary", "B01MU7ZZJV", "English", 362, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2190, 2191, "Virals", "Virals", "Young Adult# Mystery# Science Fiction# Fiction# Fantasy# Adventure# Paranormal# Crime# Teen# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 2191 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2191, 2192, "The Lincoln Lawyer", "The Lincoln Lawyer", "Mickey Haller# Lorna Taylor# Maggie McPherson# Louis Roulet# Ted Minton# Jesus Menendez# Dwayne Jeffery Corliss# Regina Campo# Raul Levin# Cecil Dobbs# Harold Casey# Fernando Valenzuela# Mary Alice Windsor# Gloria Dayton# Sam Scales# Robert Gillen# Martin Booker# Detective Lankford# Howard Kurlen# Heidi Sobel# Charles Talbot", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Suspense# Legal Thriller# Mystery Thriller# Audiobook# Drama# Detective", "B000FCKG1G", "English", 528, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2192, 2193, "The Tao of Pooh", "The Tao of Pooh", "Philosophy# Nonfiction# Religion# Spirituality# Self Help# Taoism# Audiobook# Humor# Classics# Inspirational", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2193, 1813, "The 7th Canon", "The 7th Canon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Crime# Mystery Thriller# Legal Thriller# Audiobook# Suspense# Contemporary# Adult", "9780000000000", "English", 334, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2194, 588, "The Austere Academy", "The Austere Academy", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 2195 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2195, 2196, "Prince of Thorns", "Prince of Thorns", "Jorg Ancrath", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Dark Fantasy# Epic Fantasy# High Fantasy# Adult# Dark# Young Adult# Post Apocalyptic# Science Fiction", "9780000000000", "English", 373, 1238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2196, 1509, "Go Tell It on the Mountain", "Go Tell It on the Mountain", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# African American# Literature# Religion# Race# Novels# American# Literary Fiction# Historical Fiction", "9780000000000", "English", 256, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2197, 2198, "Let it Snow", "Let it Snow", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.76", " Lauren Myracle\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2198, 2199, "Titus Groan", "Titus Groan", "Titus Groan# Steerpike# Dr. Alfred Prunesquallor# Irma Prunesquallor# Lord Sepulchrave# Mr. Flay# Abiatha Swelter# Gertrude Groan# Sourdust# Barquentine# Fuchsia Groan# Keda# Nannie Slagg# Cora Groan# Clarice Groan# Rottcodd# Rantel# Braigon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Classics# Gothic# Science Fiction Fantasy# Novels# Literature# British Literature# 20th Century# Audiobook", "9780000000000", "English", 396, 2199 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2199, 118, "The Complete Stories", "The Complete Stories", " Tania Stern (Translator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Edwin Muir (Translator)", " Willa Muir (Translator)", " John Updike (Foreword)", 0, 2200 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2200, 2201, "Perfect", "Perfect", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Epic# Novels# Drama", "B07XZC9Q7N", "English", 280, 2201 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2201, 1471, "The Beautiful and Damned", "The Beautiful and Damned", "Anthony Patch# Gloria Gilbert", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Literature# American# Novels# 20th Century# Romance# Historical Fiction# Literary Fiction# Classic Literature", "9780000000000", "English", 422, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2202, 1381, "Pale Blue Dot: A Vision of the Human Future in Space", "Pale Blue Dot: A Vision of the Human Future in Space", "Science# Nonfiction# Astronomy# Space# Philosophy# Physics# Popular Science# Technology# Reference# Engineering", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.31", 0, 2203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2203, 2204, "Novel with Cocaine", "Novel with Cocaine", "Fiction# Russia# Russian Literature# Classics# Drama# Novels# Thriller# Mystery# Literature# Suspense", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.56", 0, 255 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2204, 2205, "Out", "Out", "Fiction# Japan# Mystery# Thriller# Japanese Literature# Crime# Horror# Mystery Thriller# Asia# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 742 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2205, 2206, "The Demon", "The Demon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Horror# Suspense# Drama# Mystery# Novels# Dark# Contemporary# Psychological Thriller", "9780000000000", "English", 312, 2206 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2206, 2207, "The Raw Shark Texts", "The Raw Shark Texts", "Eric Sanderson# Dr. Randle", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Science Fiction# Mystery# Thriller# Horror# Novels# Contemporary# Literature# Science Fiction Fantasy", "9780000000000", "English", 427, 2207 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2207, 564, "River Secrets", "River Secrets", "Razo# Geric# Enna# Princess Anidori-Kiladra# Finn# Dasha", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Romance# Fairy Tales# Adventure# Young Adult Fantasy# Magic# Middle Grade# Teen", "9780000000000", "English", 290, 564 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2208, 1495, "Snow", "Snow", "Fiction# Literature# Contemporary# Turkish# Novels# Turkish Literature# Nobel Prize# Historical Fiction# Literary Fiction# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.59", 0, 2209 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2209, 2210, "Savvy Sage Online", "Savvy Sage Online", "", new DateTime(2022, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Drama# Epic# Contemporary# Fiction# Novels", "B08BF627Q9", "English", 372, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2210, 2211, "Pleasure Unbound", "Pleasure Unbound", "Shade# Tayla Mancuso# Eidolon# Wraith (Demonica series)# Kynan Morgan# Gemella Endri# Luc# Nancy Allen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Demons# Fantasy# Urban Fantasy# Vampires# Adult# Erotica# Supernatural", "9780000000000", "English", 389, 1025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2211, 2212, "\"The Trial and Death of Socrates (Euthyphro", "\"The Trial and Death of Socrates (Euthyphro", " John M. Cooper (Translator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " G.M.A. Grube (Translator)", "\"Plato", " Phaedo\"", 0, 2212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2212, 2213, "The Soldier's Wife", "The Soldier's Wife", "Vivienne de la Mare# Blanche de la Mare# Millie de la Mare# Gunther", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# World War II# Romance# Historical# War# Adult Fiction# Chick Lit# British Literature# Adult", "9780000000000", "English", 404, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2213, 1364, "Neverseen", "Neverseen", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Adventure# Fiction# Magic# Childrens# Young Adult Fantasy# Elves# Contemporary", "10000000000000", "English", 672, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2214, 2215, "The Man Who Was Thursday: A Nightmare", "The Man Who Was Thursday: A Nightmare", "Fiction# Classics# Mystery# Fantasy# Philosophy# Literature# Novels# British Literature# Thriller# Christian", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.83", 0, 610 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2215, 542, "Infinity", "Infinity", "Nicholas Ambrosius Gautier# Artemis (Goddess)# Kyrian of Thrace# Simi# Ambrose# demon Caleb# Archon# Adarian Malachai# Nekoda Kody Kennedy# Kyl Poitiers", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Urban Fantasy# Vampires# Zombies# Demons# Supernatural# Fiction# Romance", "9780000000000", "English", 464, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2216, 2217, "The Black Stallion", "The Black Stallion", "Classics# Fiction# Childrens# Horses# Young Adult# Animals# Adventure# Middle Grade# Juvenile# Historical Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 2217 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2217, 2218, "Ramonst", "Ramonst", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Contemporary# Drama# Book Club# Epic# Crime# Dark", "B01N8W8OFC", "English", 271, 2218 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2218, 429, "Isla and the Happily Ever After", "Isla and the Happily Ever After", "Joshua Wasserstein# Isla Martin# Kurt Donald Cobain Bacon# Hattie Martin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Fiction# Young Adult Contemporary# Realistic Fiction# Contemporary Romance# Young Adult Romance# Teen", "9780000000000", "English", 339, 578 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2219, 2220, "I Am Pilgrim", "I Am Pilgrim", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Crime# Mystery Thriller# Suspense# Espionage# Audiobook# Novels# Action", "9780000000000", "English", 612, 1379 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2220, 2221, "The Foxhole Court", "The Foxhole Court", "Neil Josten# Andrew Minyard# Aaron Minyard# Kevin Day", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# LGBT# Young Adult# Sports# M M Romance# Fiction# New Adult# Romance# Queer# College", "9780000000000", "English", 237, 2221 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2221, 1162, "Beartown", "Beartown", "Fiction# Contemporary# Audiobook# Sports# Adult# Adult Fiction# Literary Fiction# Book Club# Sweden# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B01LLXCGWY", "English", "4.25", 0, 1363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2222, 2223, "Taking Chances", "Taking Chances", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Young Adult# College# Contemporary Romance# Chick Lit# Fiction# Drama# Love", "B00951B4SC", "English", 432, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2223, 2224, "The Histories", "The Histories", "3.99", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Notes)", " Introduction", " John M. Marincola (Editor", 0, 2224 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2224, 2225, "\"The Oresteia: Agamemnon", "\"The Oresteia: Agamemnon", "4.02", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " William Bedell Stanford (Introduction)", " Robert Fagles (Translator)", "\"Aeschylus", 0, 2225 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2225, 2226, "The Winter Sea", "The Winter Sea", "Carrie McClelland# Sophia Paterson# John Moray# Graham Keith", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Fiction# Historical# Time Travel# Scotland# Historical Romance# Fantasy# Contemporary# Adult", "9780000000000", "English", 527, 2226 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2226, 15, "Origin", "Origin", "Robert Langdon# Ambra Vidal# Edmond Kirsch# Winston AI# Antonio Valdespino# Yehuda Köves# Syed al-Fadl# Admiral Ávila# Mónica Martín# Fonseca# Rafa Díaz# Suresh Bhalla# Beña# Julián", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Mystery Thriller# Audiobook# Suspense# Adventure# Novels# Crime# Adult", "9780000000000", "English", 456, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2227, 2228, "Playing for Keeps", "Playing for Keeps", "Jason Bradford# Haley Blaine", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Humor# Adult# New Adult# Chick Lit# Erotica# Fiction# Love", "9780000000000", "English", 330, 2228 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2228, 1865, "Travesuras de la niña mala", "Travesuras de la niña mala", "Ricardo Somocurcio# La niña mala# Paúl# Juan Barreto# Los Gravoski", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Novels# Latin American# Spanish Literature# Nobel Prize# Literature# Contemporary# Latin American Literature# Historical Fiction", "9790000000000", "Spanish", 384, 2229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2229, 588, "The Slippery Slope", "The Slippery Slope", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 1162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2230, 915, "The Icebound Land", "The Icebound Land", "Will Treaty# Halt OCarrick# Horace Altman# Tug# Abelard# Gilan# Evanlyn# Erak Starfollower# Deparnieux# Ragnak# Slagor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Teen# Childrens# Action# Medieval# Young Adult Fantasy", "9780000000000", "English", 266, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2231, 2012, "Kings Rising", "Kings Rising", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# LGBT# M M Romance# Adult# Fiction# Queer# Historical# New Adult# High Fantasy", "9780000000000", "English", 385, 2232 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2232, 2233, "Betrayal of Justice", "Betrayal of Justice", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Fiction# Novels# Contemporary", "9780000000000", "English", 348, 1213 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2233, 2234, "Lone Survivor: The Eyewitness Account of Operation Redwing and the Lost Heroes of SEAL Team 10", "Lone Survivor: The Eyewitness Account of Operation Redwing and the Lost Heroes of SEAL Team 10", "Nonfiction# Military Fiction# History# War# Biography# Memoir# Military History# Autobiography# Audiobook# Biography Memoir", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.33", 0, 2234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2234, 2235, "The 48 Laws of Power", "The 48 Laws of Power", "Nonfiction# Business# Psychology# Self Help# Philosophy# History# Politics# Leadership# Personal Development# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 2235 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2235, 118, "The Castle", "The Castle", "Fiction# Classics# Literature# German Literature# Novels# Philosophy# Czech Literature# 20th Century# Dystopia# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.96", 0, 519 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2236, 822, "The Killing Dance", "The Killing Dance", "Anita Blake# Jean-Claude (Anita Blake series)# Richard Zeeman# Edward Ted Forrester# Jason Schuyler# Damian (Anita Blake series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Horror# Fiction# Supernatural# Werewolves", "9780000000000", "English", 368, 2237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2237, 2238, "Killing Yourself to Live: 85% of a True Story", "Killing Yourself to Live: 85% of a True Story", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Music# Memoir# Humor# Pop Culture# Essays# Travel# Biography# Contemporary# Suspense", "9780000000000", "English", 245, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2238, 88, "Storm Born", "Storm Born", "Eugenie Markham# Dorian# Kiyo Marquez# Volusian# Jasmine Delaney# Maiwenn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Paranormal Romance# Fae# Adult# Magic# Fiction# Supernatural", "9780000000000", "English", 361, 2239 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2239, 2240, "Jesus' Son", "Jesus' Son", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Contemporary# Literature# Thriller# Literary Fiction# American# Mystery# Dark# Crime", "9780000000000", "English", 160, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2240, 2241, "13 Little Blue Envelopes", "13 Little Blue Envelopes", "Virginia Blackstone (Ginny)# Margaret Banister (Aunt Peg)# Richard Murphy# Keith Dobson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Travel# Chick Lit# Realistic Fiction# Teen# Adventure# Young Adult Contemporary", "9780000000000", "English", 322, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2241, 112, "Firestarter", "Firestarter", "Charlene Charlie  McGee# Andrew Andy  McGee# John Rainbird# Captain James Cap Hollester# Vicky Tomlinson# Patrick Hockstetter# Irv Manders# Norma Manders# Doctor Joseph Wanless# Doctor Herman Pynchot# Albert Steinowitz# Orv  OJ Jamieson# Orville Bates", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Science Fiction# Fantasy# Paranormal# Supernatural# Suspense# Adult# Audiobook", "9780000000000", "English", 403, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2242, 2243, "Tara Road", "Tara Road", "Ria Lynch# Marilyn Vine# Danny Lynch# Annie Lynch# Brian Lynch# Gertie# Jack Tenpenny# Rosemary (Maeve Binchy)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Chick Lit# Romance# Ireland# Contemporary# Irish Literature# Adult Fiction# Novels# Adult# Drama", "9780000000000", "English", 648, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2243, 2244, "Money", "Money", "John Self# Fielding Goodney", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Contemporary# Novels# Thriller# Mystery# British Literature# Literature# Dark# 20th Century", "9780000000000", "English", 394, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2244, 2245, "Enclave", "Enclave", "Silk# Deuce# Fade# Stalker# Tegan of the Staff", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Zombies# Science Fiction# Post Apocalyptic# Fantasy# Romance# Fiction# Horror# Adventure", "9780000000000", "English", 259, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2245, 2246, "The Complete Essays", "The Complete Essays", "Philosophy# Classics# Essays# Nonfiction# France# History# French Literature# Literature# Biography# 16th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 2246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2246, 534, "Everlost", "Everlost", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Fiction# Supernatural# Ghosts# Science Fiction# Adventure# Teen# Death", "9780000000000", "English", 320, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2247, 496, "The Infinite Sea", "The Infinite Sea", "Evan Walker# Cassie Sullivan# Sammy Sullivan# Ben Parish# Ringer/Marika Kimura# Teacup/Allison", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Aliens# Fiction# Post Apocalyptic# Fantasy# Romance# Audiobook# Apocalyptic", "B00E8OLIXM", "English", 320, 346 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2248, 2249, "Fruzzle's Mystery Talent: A Bed Time Fantasy Story for Children ages 3-10", "Fruzzle's Mystery Talent: A Bed Time Fantasy Story for Children ages 3-10", "B00FPR99QE", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.42", " Bryan Brueggeman (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2249, 667, "The Truth", "The Truth", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Cut Me Own Throat Dibbler# Foul Ole Ron# Havelock Vetinari# DEATH# William de Worde# The Bursar# Gaspode# Coffin Henry# Altogether Andrews# The Duck Man# Arnold Sideways# Gunilla Goodmountain# Sacharissa Cripslock# Rufus Drumknott# Mr Slant# Angua von Überwald# Cheery Littlebottom# Igor (Discworld)# Otto Chriek# Mr. Pin# Mr. Tulip# Fred Colon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Comic Fantasy# Novels# High Fantasy# British Literature", "9780000000000", "English", 336, 2250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2250, 2251, "Hotel on the Corner of Bitter and Sweet", "Hotel on the Corner of Bitter and Sweet", "Henry Lee# Keiko Okabe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Romance# World War II# Book Club# Adult Fiction# War# Adult# Audiobook", "9780000000000", "English", 290, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2251, 1740, "\"Saga", "\"Saga", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.18", " Fiona Staples (Artist)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2252, 2253, "The Sheltering Sky", "The Sheltering Sky", "Port Moresbury## Kit Moresbury", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Africa# Travel# Literature# Novels# Historical Fiction# Morocco# American# Literary Fiction", "9780000000000", "English", 342, 178 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2253, 43, "The Maze of Bones", "The Maze of Bones", "Amy Cahill# Dan Cahill# Grace Cahill# Alistair", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Adventure# Young Adult# Fiction# Middle Grade# Childrens# Fantasy# Juvenile# Audiobook# Action", "9780000000000", "English", 220, 1301 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2254, 2255, "The Book of Occult", "The Book of Occult", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Occult# Mystery# Thriller# Fantasy# Magic# Supernatural", "9780000000000", "English", 336, 2255 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2255, 588, "The Wide Window", "The Wide Window", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 2256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2256, 2257, "Mr. Penumbra's 24-Hour Bookstore", "Mr. Penumbra's 24-Hour Bookstore", "Clay Jannon# Ajax Penumbra# Kat Potente", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Fantasy# Books About Books# Contemporary# Audiobook# Adult# Adult Fiction# Adventure# Novels", "9780000000000", "English", 288, 274 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2257, 2258, "The Call to Serve", "The Call to Serve", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Young Adult# Historical Fiction# New Adult# Historical# Adult# Middle Grade# Romance# Adventure", "9780000000000", "English", 286, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2258, 2259, "We Are the Ants", "We Are the Ants", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# LGBT# Contemporary# Science Fiction# Fiction# Mental Health# Romance# Queer# Fantasy# Mental Illness", "9780000000000", "English", 455, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2259, 1825, "The Ways of Autumn", "The Ways of Autumn", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Epic# Contemporary", "9780000000000", "English", 337, 2260 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2260, 2261, "Independent People", "Independent People", "Fiction# Classics# Historical Fiction# Literature# Nobel Prize# Novels# Scandinavian Literature# Literary Fiction# 20th Century# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 584 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2261, 2262, "The Change in the Mirror", "The Change in the Mirror", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotic Romance# M M Romance# LGBT# Gay# College", "B088G282B5", "English", 209, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2262, 123, "Have a Little Faith: a True Story", "Have a Little Faith: a True Story", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Inspirational# Religion# Spirituality# Memoir# Faith# Biography# Christian# Adult# Contemporary", "9780000000000", "English", 249, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2263, 976, "Hourglass", "Hourglass", "Bianca Olivier# Balthazar More# Raquel Vargas# Lucas Ross# Vic Woodson# Charity More", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Paranormal# Fantasy# Romance# Supernatural# Paranormal Romance# Ghosts# Urban Fantasy# Fiction", "9780000000000", "English", 339, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2264, 2265, "Burial Rites", "Burial Rites", "Agnes Magnúsdóttir# Natan Ketilsson# Björn Blöndal# Reverend Jóhann Tómasson# Pétur Jónsson# Fridrik Sigurdsson# Sigrídur Gudmundsdóttir# Steina Jónsdóttir# Lauga Jónsdóttir# Margrét Jónsdóttir# District Officer Jón Jónsson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Mystery# Crime# Adult# Literary Fiction# Book Club# Adult Fiction# Audiobook", "9780000000000", "English", 336, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2265, 2266, "The Orphan Master's Son", "The Orphan Master's Son", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Asia# Literary Fiction# Contemporary# Literature# Novels# Audiobook# Book Club# Historical", "9780000000000", "English", 443, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2266, 2069, "The Well House III: The Redemption", "The Well House III: The Redemption", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Novels# Fiction# Epic# Drama", "B07ZZMJ7NZ", "English", 210, 2267 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2267, 29, "Clockwork Angel; Clockwork Prince; Clockwork Princess", "Clockwork Angel; Clockwork Prince; Clockwork Princess", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fiction# Steampunk# Urban Fantasy# Historical Fiction# Angels# Supernatural", "9780000000000", "English", 1520, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2268, 1730, "Demon from the Dark", "Demon from the Dark", "Malkom Slaine# Carrow Graie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Vampires# Fantasy# Demons# Witches# Adult# Urban Fantasy# Magic", "9780000000000", "English", 430, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2269, 1239, "The Moses Expedition", "The Moses Expedition", "Thriller# Fiction# Mystery# Adventure# Suspense# Mystery Thriller# Historical Fiction# Religion# Action# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.69", 0, 2270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2270, 2271, "The Archived", "The Archived", "Mackenzie Bishop", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Mystery# Fiction# Urban Fantasy# Romance# Young Adult Fantasy# Ghosts# Horror", "9780000000000", "English", 327, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2271, 2272, "To Dream the Blackbane", "To Dream the Blackbane", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Novels# Book Club# Drama# Epic", "10000000000000", "English", 261, 2272 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2272, 2041, "Song Bird: Matters of the Heart", "Song Bird: Matters of the Heart", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "9780000000000", "English", 304, 2041 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2273, 2274, "The Hero With a Thousand Faces", "The Hero With a Thousand Faces", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Mythology# Philosophy# Psychology# Writing# History# Religion# Classics# Anthropology# Spirituality", "9780000000000", "English", 416, 308 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2274, 2275, "Partials", "Partials", "Marcus Church# Kira Walker# Haru Sato# Madison Sato# Jayden Van Rijn# Senator Hobbs# Sam Pettigrew# Xochi Kessler# Owen Tovar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Post Apocalyptic# Fiction# Fantasy# Romance# Adventure# Teen# Audiobook", "9780000000000", "English", 468, 795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2275, 2276, "Say You're Sorry", "Say You're Sorry", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Suspense# Romance# Romantic Suspense# Crime# Mystery Thriller# Audiobook# Contemporary", "9780000000000", "English", 329, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2276, 2277, "Pride and Prejudice and Zombies", "Pride and Prejudice and Zombies", "Fiction# Horror# Fantasy# Zombies# Humor# Romance# Classics# Historical Fiction# Paranormal# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.3", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2277, 2278, "\"Sex", "\"Sex", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.74", "Chuck Klosterman", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2278, 1521, "Midnight Awakening", "Midnight Awakening", "Elise Chase# Gabrielle Maxwell# Brock# Lucan Thorne# Dante Malebranche# Tegan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Vampires# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Contemporary", "9780000000000", "English", 369, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2279, 1282, "Thief", "Thief", "Olivia Kaspen# Caleb Drake# Leah Smith# Noah Stein# Cammie Chase", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Adult# Drama# Dark# Chick Lit# Fiction# Love", "B00E2VJVGW", "English", 273, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2280, 2281, "All I Really Need to Know I Learned in Kindergarten", "All I Really Need to Know I Learned in Kindergarten", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Humor# Self Help# Philosophy# Essays# Inspirational# Short Stories# Memoir# Psychology# Classics", "9780000000000", "English", 240, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2281, 2282, "White Nights", "White Nights", "Nastenka", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Russian Literature# Russia# Short Stories# Literature# Romance# Novels# 19th Century# Novella", "10000000000000", "English", 82, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2282, 2283, "The Meat Market", "The Meat Market", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Dystopia# Cyberpunk# Pulp# Fiction# Space Opera# Mystery# Erotica# Science Fiction Fantasy# Adventure", "B00GFC8BPI", "English", 123, 2283 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2283, 76, "Plain Truth", "Plain Truth", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Contemporary# Chick Lit# Amish# Adult Fiction# Drama# Adult# Novels# Crime", "9780000000000", "English", 405, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2284, 2285, "The End of Everything", "The End of Everything", "Lizzie Hood# Evie Verver# Mr. Verver# Dusty Verver# Dr. Aiken# Detective Thernstrom# Harold Shaw# Pete Shaw# Annie Verver# Kitty Shaw# Ted Hood# Diane Hood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Young Adult# Thriller# Contemporary# Mystery Thriller# Crime# Suspense# Drama# Coming Of Age", "9780000000000", "English", 246, 1438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2285, 2286, "Born a Crime: Stories From a South African Childhood", "Born a Crime: Stories From a South African Childhood", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Audiobook# Humor# Autobiography# Africa# Biography Memoir# Race# South Africa", "9780000000000", "English", 289, 2286 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2286, 72, "Harry Potter Collection", "Harry Potter Collection", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Magic# Adventure# Childrens# Classics# Science Fiction Fantasy# Witches# Wizards", "9780000000000", "English", 3342, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2287, 555, "End of Days", "End of Days", "Penryn Young# Raffe# Dee-Dum# Paige Young# Belial# Josiah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Angels# Dystopia# Paranormal# Romance# Post Apocalyptic# Urban Fantasy# Demons# Fiction", "10000000000000", "English", 344, 555 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2288, 533, "The Book of Life", "The Book of Life", "Sarah Bishop# Diana Bishop# Matthew Clairmont# Emily Mather# Miriam Shephard# Hamish Osborne# Marcus Whitmore# Ysabeau de Clermont# Peter Knox# Agatha Wilson# Gallowglass de Clermont# Marthe (Vampire)# Philippe de Clermont# Verin de Clermont# Phoebe Taylor# Fernando Gonçalves# Chris Roberts", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Romance# Paranormal# Vampires# Witches# Magic# Urban Fantasy# Historical Fiction# Paranormal Romance", "9780000000000", "English", 561, 1323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2289, 2290, "Deliverance", "Deliverance", "Ed Gentry# Bobby Trippe# Drew Ballinger# Lewis Medlock", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Thriller# Horror# Adventure# Literature# Novels# Suspense# Southern# Literary Fiction", "9780000000000", "English", 288, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2290, 157, "On Chesil Beach", "On Chesil Beach", "Edward Mayhew# Florence Ponting", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Contemporary# Literary Fiction# British Literature# Literature# Romance# Novels# Adult Fiction# Adult", "9780000000000", "English", 166, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2291, 2292, "The Hollow", "The Hollow", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Paranormal Romance# Supernatural# Mystery# Fiction# Urban Fantasy", "9780000000000", "English", 544, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2292, 1425, "The Exiled Queen", "The Exiled Queen", "Fire Dancer# Han Alister# Princess Raisa ana’Marianna# Micah Bayar# Amon Byrne# Cat Tyburn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Romance# High Fantasy# Young Adult Fantasy# Fiction# Adventure# Epic Fantasy# Teen", "9780000000000", "English", 586, 177 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2293, 1046, "Dreamless", "Dreamless", "Helen Hamilton# Lucas Delos# Claire Aoki# Zach Brant# Matt Millis# Ariadne Delos# Jason Delos# Cassandra Delos", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mythology# Romance# Paranormal# Greek Mythology# Paranormal Romance# Urban Fantasy# Supernatural# Fiction", "9780000000000", "English", 487, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2294, 2295, "The Feast of the Goat", "The Feast of the Goat", "Fiction# Historical Fiction# Novels# Spanish Literature# Latin American# Literature# Nobel Prize# Latin American Literature# Historical# Politics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 2295 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2295, 2296, "Le Morte d'Arthur: King Arthur and the Legends of the Round Table", "Le Morte d'Arthur: King Arthur and the Legends of the Round Table", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.92", " Robert Graves (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2296, 2297, "Metro 2033", "Metro 2033", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Horror# Post Apocalyptic# Dystopia# Fantasy# Russia# Apocalyptic# Russian Literature# Audiobook", "9780000000000", "English", 458, 2297 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2297, 2298, "The Portable Dorothy Parker", "The Portable Dorothy Parker", "Poetry# Short Stories# Fiction# Classics# Humor# Essays# Literature# 20th Century# Womens# Anthologies", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.34", 0, 2298 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2298, 575, "If You Could See Me Now", "If You Could See Me Now", "Ivan# Benjamin# Luke# Elizabeth Egan# Saoirse", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Fantasy# Contemporary# Magical Realism# Adult# Ireland# Contemporary Romance# Adult Fiction", "9780000000000", "English", 306, 566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2299, 1982, "The Mysterious Benedict Society and the Prisoner's Dilemma", "The Mysterious Benedict Society and the Prisoner's Dilemma", "Mystery# Fiction# Young Adult# Middle Grade# Adventure# Childrens# Fantasy# Realistic Fiction# Audiobook# Science Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.3", 0, 2300 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2300, 297, "The Foundation Trilogy", "The Foundation Trilogy", "Hari Seldon# Salvor Hardin# Hober Mallow# Mule# Arkady Darell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Fantasy# Space Opera# Literature# Novels# Speculative Fiction# Space", "9780000000000", "English", 679, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2301, 2302, "\"The Absolute Sandman", "\"The Absolute Sandman", " Kelly Jones (Goodreads Author) (Artist)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Michael Zulli (Artist)", " Chris Bachalo (Artist)", " Mike Dringenberg (Artist)", 0, 2302 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2302, 2240, "Tree of Smoke", "Tree of Smoke", "Francis X. Sands# William Skip Sands# Private James Houston# Major Eddie Aguinaldo# Jimmy Storm# Dietrich Fest", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# War# Historical Fiction# Novels# Literature# Thriller# Suspense# Literary Fiction# Drama# Mystery", "9780000000000", "English", 614, 274 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2303, 2304, "\"Dancing with The Field: Bringing Joy", "\"Dancing with The Field: Bringing Joy", "Epic# Contemporary# Drama# Book Club", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.37", 0, 1430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2304, 2305, "Orphan Train", "Orphan Train", "Molly Ayer# Vivian Daly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Book Club# Adult Fiction# Adult# Young Adult# Audiobook# Adoption# Contemporary", "10000000000000", "English", 278, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2305, 672, "Fierce Invalids Home from Hot Climates", "Fierce Invalids Home from Hot Climates", "Switters", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Novels# Literature# Contemporary# Comedy# American# Modern# Literary Fiction# Magical Realism", "9780000000000", "English", 445, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2306, 2307, "Death with Interruptions", "Death with Interruptions", "Fiction# Fantasy# Magical Realism# Portugal# Literature# Portuguese Literature# Novels# Nobel Prize# Classics# Death", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 2307 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2307, 592, "Unaccustomed Earth", "Unaccustomed Earth", "Ruma", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Short Stories# India# Contemporary# Literary Fiction# Literature# Indian Literature# Book Club# Adult Fiction# Adult", "9780000000000", "English", 352, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2308, 863, "Keys to the Demon Prison", "Keys to the Demon Prison", "Kendra Sorenson# Seth Sorenson# Grandpa Sorenson# Grandma Sorenson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Adventure# Magic# Childrens# Dragons# Young Adult Fantasy# Juvenile", "9780000000000", "English", 593, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2309, 2310, "The Girl With All the Gifts", "The Girl With All the Gifts", "Melanie# Sergeant Eddie Parks# Miss Helen Justineau# Dr Caldwell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Science Fiction# Zombies# Dystopia# Post Apocalyptic# Fantasy# Audiobook# Thriller# Adult", "9780000000000", "English", 461, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2310, 2311, "Going Too Far", "Going Too Far", "Meg# Eric Ross# John After# Tiffany Hart# William Billingsley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# New Adult# Chick Lit# Contemporary Romance# Realistic Fiction# Young Adult Romance# Young Adult Contemporary# Fiction", "9780000000000", "English", 245, 2311 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2311, 2312, "The Bloody Chamber and Other Stories", "The Bloody Chamber and Other Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fantasy# Fiction# Horror# Fairy Tales# Gothic# Feminism# Classics# Retellings# Adult", "9780000000000", "English", 128, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2312, 1978, "Homeland", "Homeland", "Drizzt Do’Urden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Forgotten Realms# Fiction# High Fantasy# Epic Fantasy# Adventure# Science Fiction Fantasy# Dungeons and Dragons# Magic# Audiobook", "10000000000000", "English", 343, 1978 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2313, 2314, "Sundays at Tiffany's", "Sundays at Tiffany's", "Romance# Fiction# Chick Lit# Fantasy# Contemporary# Adult# Adult Fiction# Contemporary Romance# Paranormal# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.77", 0, 33 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2314, 2315, "Never Never", "Never Never", "Romance# Young Adult# Contemporary# New Adult# Mystery# Paranormal# Fiction# Fantasy# Suspense# Contemporary Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B00RZVNDSS", "English", "4.07", 0, 2315 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2315, 2316, "Pinocchio", "Pinocchio", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.86", " John Boyne (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2316, 2317, "ذاكرة الجسد", "ذاكرة الجسد", "Novels# Fiction# Romance# Algeria# Literature# Africa# Historical Fiction# Drama# Love# 20th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Arabic", "3.83", 0, 2317 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2317, 210, "Congo", "Congo", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Thriller# Adventure# Horror# Mystery# Suspense# Africa# Mystery Thriller# Novels", "9780000000000", "English", 442, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2318, 2319, "\"Rabbit", "\"Rabbit", "Fiction# Classics# Literature# Novels# American# Literary Fiction# Contemporary# 20th Century# Banned Books# The United States Of America", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B003WUYR5E", "English", "3.58", 0, 1162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2319, 2320, "\"Same Kind of Different as Me: A Modern-Day Slave", "\"Same Kind of Different as Me: A Modern-Day Slave", "4.22", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Lynn Vincent (Goodreads Author)", " Denver Moore", "\"Ron Hall", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2320, 2321, "Blankets", "Blankets", "Craig# Phil# Raina", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Comics# Fiction# Young Adult# Graphic Novels Comics# Romance# Coming Of Age# Religion# Contemporary# Comic Book", "9780000000000", "English", 592, 2321 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2321, 1086, "Froi of the Exiles", "Froi of the Exiles", "Lucian# Phaedra# Finnikin# Froi# Quintana# Beatriss", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# High Fantasy# Young Adult Fantasy# Fiction# Adventure# Magic# Teen# Epic Fantasy", "9780000000000", "English", 593, 1632 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2322, 2323, "Walden & Civil Disobedience", "Walden & Civil Disobedience", "Classics# Philosophy# Nonfiction# Essays# Literature# Nature# Politics# History# Memoir# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2323, 2324, "The Deal", "The Deal", "Hannah Wells# Garrett Graham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Sports# College# Contemporary Romance# Sports Romance# Humor# Hockey# Abuse", "10000000000000", "English", 342, 2324 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2324, 2325, "War Horse", "War Horse", "Joey# Albert# Sir Nicholls# Emily", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Young Adult# Animals# War# Historical# Horses# Childrens# Adventure# Classics", "9780000000000", "English", 165, 1 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2325, 2326, "Confessions of an Ugly Stepsister", "Confessions of an Ugly Stepsister", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fairy Tales# Historical Fiction# Fiction# Retellings# Adult Fiction# Historical# Adult# Young Adult# Science Fiction Fantasy", "9780000000000", "English", 372, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2326, 1521, "Kiss of Crimson", "Kiss of Crimson", "Gabrielle Maxwell# Tess Culver# Sterling Chase# Lucan Thorne# Dante Malebranche# Tegan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Vampires# Paranormal# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Contemporary", "9780000000000", "English", 387, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2327, 2276, "Midnight Sacrifice", "Midnight Sacrifice", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romantic Suspense# Mystery# Suspense# Romance# Fiction# Thriller# Contemporary# Crime# Drama# Novels", "B009EWCLHA", "English", 315, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2328, 178, "The Bonesetter's Daughter", "The Bonesetter's Daughter", "Ruth Young# LuLing# Bibi Tersayang# GaoLing", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# China# Historical# Asia# Contemporary# Asian Literature# Adult# Novels# Adult Fiction", "9780000000000", "English", 387, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2329, 2330, "Slated", "Slated", "Kyla Davis# Ben Nix# Amy Davis# Jazz MacKenzie# Sandra Armstrong-Davis# David Davis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Romance# Fiction# Fantasy# Mystery# Thriller# Teen# Adventure", "9780000000000", "English", 439, 2330 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2330, 1528, "His Majesty's Dragon", "His Majesty's Dragon", "Temeraire# Captain Will Laurence# John Granby# Emily Roland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Dragons# Historical Fiction# Fiction# Historical# Alternate History# Historical Fantasy# Adventure# Science Fiction Fantasy# War", "9780000000000", "English", 356, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2331, 2332, "The Nanny Diaries", "The Nanny Diaries", "Chick Lit# Fiction# Contemporary# Humor# Romance# Adult Fiction# Adult# Novels# New York# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.43", 0, 252 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2332, 2333, "Lies My Teacher Told Me: Everything Your American History Textbook Got Wrong", "Lies My Teacher Told Me: Everything Your American History Textbook Got Wrong", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# Education# Politics# American History# Historical# Teaching# Social Justice# Reference# Sociology", "9780000000000", "English", 383, 2333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2333, 2334, "Crashing Down to Earth", "Crashing Down to Earth", "", new DateTime(2022, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# Angels", "10000000000000", "English", 0, 2334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2334, 2335, "Miecz przeznaczenia", "Miecz przeznaczenia", "Dandelion# Yennefer# Ciri (Cirilla Fiona Elen Riannon)# Visenna# Eithné# Braenn# Essi Daven# Geralt of Rivia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Short Stories# Polish Literature# Audiobook# High Fantasy# Adventure# Magic# Adult# Epic Fantasy", "9790000000000", "Polish", 343, 2335 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2335, 64, "God Emperor of Dune", "God Emperor of Dune", "Leto Atreides II# Duncan Idaho", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Space Opera# Classics# Philosophy# Novels# Speculative Fiction# Religion", "9780000000000", "English", 587, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2336, 2337, "The Robe", "The Robe", "Demetrius# Marcellus", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Classics# Christian Fiction# Christian# Religion# Historical# Biblical Fiction# Christianity# Adult Fiction", "9780000000000", "English", 528, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2337, 2338, "Einstein's Dreams", "Einstein's Dreams", "Besso# Albert Einstein", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Short Stories# Philosophy# Science Fiction# Historical Fiction# Fantasy# Physics# Literature# Novels# Time Travel", "9780000000000", "English", 144, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2338, 2339, "Olive Kitteridge", "Olive Kitteridge", "Olive Kitteridge# Henry Kitteridge# Kevin Coulson# Angela OMeara", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Short Stories# Literary Fiction# Contemporary# Book Club# Adult Fiction# Adult# Novels# Literature# Audiobook", "10000000000000", "English", 270, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2339, 672, "Skinny Legs and All", "Skinny Legs and All", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Literature# Novels# Magical Realism# Contemporary# Fantasy# American# Literary Fiction# Comedy", "9780000000000", "English", 422, 672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2340, 679, "Death in Venice and Other Tales", "Death in Venice and Other Tales", "Fiction# Classics# Short Stories# German Literature# Literature# LGBT# Germany# 20th Century# Italy# Queer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 2203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2341, 2342, "Little Fires Everywhere", "Little Fires Everywhere", "Mia Warren# Pearl Warren# Elena Richardson# Izzy Richardson# Moody Richardson# Trip Richardson# Lexie Richardson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Audiobook# Adult# Adult Fiction# Literary Fiction# Book Club# Novels# Family# Realistic Fiction", "9780000000000", "English", 368, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2342, 656, "Fool's Errand", "Fool's Errand", "The Fool# FitzChivalry Farseer# Chade Fallstar# Nighteyes# Kettricken# Dutiful Farseer", new DateTime(2022, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Magic# Epic# Adult# Dragons", "10000000000000", "English", 661, 1238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2343, 2344, "\"Everything Is Always Gonna Be Alright", "\"Everything Is Always Gonna Be Alright", "Epic# Drama# Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.36", 0, 2344 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2344, 623, "Light", "Light", "Sam Temple# Astrid Ellison# Caine Soren# Diana Ladris# Quinn Gaither", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fantasy# Fiction# Horror# Paranormal# Romance# Supernatural# Adventure", "9780000000000", "English", 411, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2345, 99, "Blood And Gold", "Blood And Gold", "Thorne# Akasha# Enkil# Mael# Khayman# Marius de Romanus# Daniel Molloy# Bianca Solderini# Santino# Armand# Pandora", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Horror# Fantasy# Fiction# Paranormal# Supernatural# Urban Fantasy# Gothic# Historical Fiction# Adult", "9780000000000", "English", 752, 516 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2346, 2347, "Columbine", "Columbine", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# True Crime# History# Crime# Audiobook# Psychology# Journalism# Sociology# Adult# Biography", "9780000000000", "English", 417, 1607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2347, 2348, "My Man Jeeves", "My Man Jeeves", "Reginald Jeeves# Bertram Wilberforce Wooster# Monty Byng# Bruce Corcoran# Alexander Worple# Muriel Singer# Sam Patterson# Lady Malvern# Wilmot Malvern# Rocky Todd# Francis Bickersteth# Duke of Chiswick# Reggie Foljambe# Reggie Pepper# Bobbie Cardew# Mary Anthony# Freddie Meadows# Jimmy Pinkerton# Angela West# Tootles Medwin# Mr. Medwin# Elizabeth Schoolbred# George Lattaker# Harold Volues# Mrs. Vanderley# Stella Vanderley# Emma Pilbeam# Augustus Arbutt# Mr. Marshall# Prince of Saxburg-Liegnitz# Denman Sturgis# Count Fritz von Coslin# Bill Schoolbred# Clarence Yeardsley# Mathew Yeardsley# Rockmetteller Todd# Isabel Rockmetteller# Jimmy Mundy# Oliver Randolph Sipperley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Classics# Short Stories# Comedy# Audiobook# British Literature# Historical Fiction# 20th Century# Literature", "9780000000000", "English", 256, 2348 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2348, 542, "Night Embrace", "Night Embrace", "Speirr of the Morrigantes (Talon)# Sunshine Runningwolf# Nicholas Ambrosius Gautier# Wren Tigarian# Kyrian of Thrace# Valerius Magnus# Zarek of Moesia# Vane Kattalakis# Bride McTierney# Styxx of Didymos# Apollymi# Fang Kattalakis# Artemis Agrotera# Cherise Nicole Gautier# Archon# Devereaux Aubert Peltier# Etienne Peltier# Tripper Diomedes# Teddy “Slasher” Arkis# Colt Theodorakopolis# Eros (Hunter Legends series)# Psyche (Hunter Legends series)# Camulus (Hunter Legends series)# Marissa Hunter# Acheron Ash Parthenopaeus# Julian of Macedonia (Hunter Legends series)# Selena Devereaux Laurens# Dionysus (Hunter Legends series)# The Morrigan (Hunter Legends series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Adult# Mythology# Fiction# Supernatural", "10000000000000", "English", 408, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2349, 588, "The Miserable Mill", "The Miserable Mill", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.85", 0, 326 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2350, 2192, "The Black Echo", "The Black Echo", "Hieronymus Harry Bosch# Eleanor Wish# Jerry Edgar# John H. Rourke# Irvin Irving# Pierce Lewis# Don Clarke# Harvey Ninety Eight Pounds# Edward Sharkey Niese# Billy Meadows# Joel Bremmer# Larry Sakai# Jesus Salazar# Ngo Van Binh", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Thriller# Mystery Thriller# Detective# Suspense# Audiobook# Murder Mystery# Adult", "9780000000000", "English", 482, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2351, 2352, "Dragon Slippers", "Dragon Slippers", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Dragons# Young Adult# Middle Grade# Adventure# Fiction# Childrens# Romance# Magic# Fairy Tales", "9780000000000", "English", 324, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2352, 2353, "The Couple Next Door", "The Couple Next Door", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Mystery Thriller# Suspense# Audiobook# Crime# Adult# Contemporary# Adult Fiction", "9780000000000", "English", 308, 2353 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2353, 244, "The Two Princesses of Bamarre", "The Two Princesses of Bamarre", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Fairy Tales# Middle Grade# Childrens# Romance# Adventure# Magic# Dragons", "9780000000000", "English", 304, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2354, 2355, "The Snow Child", "The Snow Child", "Mabel# Jack# Snegurochka", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Fantasy# Magical Realism# Historical# Fairy Tales# Adult# Adult Fiction# Book Club# Literary Fiction", "B004RD856M", "English", 404, 1438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2355, 2356, "The V Girl: A Coming Of Age Story", "The V Girl: A Coming Of Age Story", "Lila Velez# Aleksey Fürst# Azalea Velez# Olmo Velez# Tristan Froh# Ethan Velez", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Coming Of Age# Young Adult# Dystopia# Love# War# Fiction# Science Fiction# New Adult# Post Apocalyptic", "B00L6MFXWG", "English", 340, 2356 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2356, 2187, "Almost Transparent Blue", "Almost Transparent Blue", "Fiction# Japan# Japanese Literature# Contemporary# Literature# Asia# Horror# Novels# Classics# Dark", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.26", 0, 2357 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2357, 2358, "The House at Pooh Corner and Now We Are Six", "The House at Pooh Corner and Now We Are Six", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Classics# Poetry# Juvenile# Fiction# Animals", "9780000000000", "", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2358, 2359, "Circle of Friends", "Circle of Friends", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.03", " Frans Thomése (translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2359, 22, "The Transfer", "The Transfer", "Marcus Eaton# Lauren# Tobias Eaton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Short Stories# Fiction# Science Fiction# Fantasy# Novella# Romance# Teen# Adventure", "9780000000000", "English", 55, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2360, 2361, "Night School", "Night School", "Jo# Gabriel Gabe Anderson# Ruth Jansen# Phil# Carter West# Alyson (Allie) Sheridan# Sylvain# Isabelle le Fanult# Eloise Derleth# Mr Ellison# August Zelazny# Katie Gilmore# Christopher Sheridan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Fantasy# Romance# Paranormal# Boarding School# Fiction# Contemporary# Thriller# Vampires", "9780000000000", "English", 454, 477 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2361, 2362, "The Luminaries", "The Luminaries", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Mystery# Historical# Literary Fiction# Literature# Novels# Contemporary# Adult# Unfinished", "9780000000000", "English", 848, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2362, 1081, "Best Served Cold", "Best Served Cold", "Monza Murcatto# Caul Shivers# Shylo Vitari# Nicomo Cosca# Carlot dan Eider# Ishri# Friendly# Castor Morveer# Benna Murcatto# Mauthis# General Ganmark# Shenkt# Yoru Sulfur", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Dark Fantasy# Adventure# High Fantasy# Audiobook# Science Fiction Fantasy# War# Epic", "9780000000000", "English", 534, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2363, 1559, "Cocaine Nights", "Cocaine Nights", "Charles Prentice# Frank Prentice", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Crime# Thriller# Novels# Suspense# Drama# Contemporary# British Literature# Literature", "9780000000000", "English", 336, 2364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2364, 2365, "The Sound of Suffering", "The Sound of Suffering", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Fiction# Contemporary# Novels# Drama", "9780000000000", "English", 326, 2365 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2365, 1469, "Einstein: His Life and Universe", "Einstein: His Life and Universe", "Bertrand Russell# Dwight D. Eisenhower# Franklin D. Roosevelt# Niels Bohr# Albert Einstein", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Biography# Nonfiction# Science# History# Physics# Biography Memoir# Audiobook# Autobiography# Historical# Memoir", "9780000000000", "English", 675, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2366, 574, "Radiant Shadows", "Radiant Shadows", "Devlin# Ani", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Fairies# Romance# Urban Fantasy# Fae# Fiction# Paranormal Romance# Magic", "9780000000000", "English", 340, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2367, 2368, "Raised by Wolves", "Raised by Wolves", "Bronwyn Bryn Alessia St. Vincent Clare# Chase (Raised by Wolves)# Callum (Raised by Wolves)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Werewolves# Paranormal# Fantasy# Romance# Urban Fantasy# Supernatural# Shapeshifters# Paranormal Romance# Wolves", "9780000000000", "English", 432, 2368 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2368, 2369, "Diya aur baati hum", "Diya aur baati hum", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B085W9DRKK", "", 0, 2369 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2369, 2370, "My Wolf's Bane", "My Wolf's Bane", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Werewolves# Paranormal# Young Adult# Romance# Shapeshifters# Paranormal Romance# Fantasy# Supernatural# Wolves# Urban Fantasy", "9780000000000", "English", 389, 2370 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2370, 2371, "Rainbow Six", "Rainbow Six", "Fiction# Thriller# Military Fiction# Action# Espionage# Adventure# Suspense# Mystery# Crime# War", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.09", 0, 1923 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2371, 2372, "Aztec", "Aztec", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Adventure# Novels# Fantasy# Thriller# Cultural# Unfinished# Historical Romance", "9780000000000", "English", 754, 600 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2372, 1110, "Sweet Peril", "Sweet Peril", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Romance# Angels# Paranormal Romance# Demons# Supernatural# Urban Fantasy# Young Adult Fantasy", "9780000000000", "English", 375, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2373, 2374, "Suvashun", "Suvashun", "Novels# Iran# Fiction# Literature# Historical Fiction# Classics# 20th Century# Romance# Unfinished# Womens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Spanish", "3.92", 0, 1284 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2374, 2369, "Bestowed", "Bestowed", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance", "B07XJ2DBZV", "", 292, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2375, 2376, "Believing Christ: The Parable of the Bicycle and Other Good News", "Believing Christ: The Parable of the Bicycle and Other Good News", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Religion# Lds# Nonfiction# Church# Spirituality# Inspirational# Christian# Lds Non Fiction# Faith# Self Help", "9780000000000", "English", 125, 1876 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2376, 891, "Illusions", "Illusions", "Laurel Sewell# David Lawson# Tamani", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fairies# Fae# Magic# Fiction# Paranormal Romance# Urban Fantasy", "9780000000000", "English", 375, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2377, 667, "The Amazing Maurice and His Educated Rodents", "The Amazing Maurice and His Educated Rodents", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Humor# Childrens# Comedy# Animals# Science Fiction Fantasy# Audiobook# Magic", "9780000000000", "English", 256, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2378, 1419, "The Enchantress Returns", "The Enchantress Returns", "Fantasy# Middle Grade# Fiction# Childrens# Young Adult# Fairy Tales# Adventure# Magic# Audiobook# Retellings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.49", 0, 2379 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2379, 2380, "Entwined", "Entwined", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Retellings# Fairy Tales# Magic# Fiction# Fairy Tale Retellings# Young Adult Fantasy# Teen", "9780000000000", "English", 472, 1533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2380, 2381, "Heir to the Empire", "Heir to the Empire", "Luke Skywalker# Lando Calrissian# Mara Jade# Thrawn# Gilad Pellaeon# Wedge Antilles# Talon Karrde# Leia Organa# Khabarakh# Joruus Cbaoth# Borsk Feylya# Han Solo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Star Wars# Science Fiction# Fiction# Fantasy# Space Opera# Science Fiction Fantasy# Audiobook# Adventure# Space# Novels", "B00513HX7Y", "English", 434, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2381, 2382, "Behind Closed Doors", "Behind Closed Doors", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Suspense# Mystery Thriller# Psychological Thriller# Audiobook# Crime# Adult# Adult Fiction", "9780000000000", "English", 293, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2382, 2383, "Magic's Pawn", "Magic's Pawn", "Vanyel Ashkevron# Yfandes# Savil Ashkevron# Tylendel Frelennye# Starwind kTreva# Moondance kTreva", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# LGBT# Romance# M M Romance# Magic# Science Fiction Fantasy# High Fantasy# Young Adult# Gay", "9780000000000", "English", 349, 2383 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2383, 2384, "The Bridge of San Luis Rey", "The Bridge of San Luis Rey", "Esteban# Don Jaime# Brother Juniper# The Marquesa de Montemayor# Pepita# Uncle Pio# Camila Perichole# Madre María del Pilar# Captain Alvarado", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# Literature# Novels# American# 20th Century# Literary Fiction# Religion# Classic Literature", "9780000000000", "English", 160, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2384, 969, "Summer Knight", "Summer Knight", "Donald Morgan# Toot-toot# Leanansidhe# Elaine Mallory# Karrin Murphy# Harry Dresden# Billy Borden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Fiction# Mystery# Paranormal# Magic# Audiobook# Supernatural# Science Fiction Fantasy# Vampires", "9780000000000", "English", 446, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2385, 2386, "The Slow Regard of Silent Things", "The Slow Regard of Silent Things", "Fantasy# Fiction# Short Stories# High Fantasy# Novella# Epic Fantasy# Science Fiction Fantasy# Audiobook# Adult# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.9", 0, 1016 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2386, 2387, "Narcopolis", "Narcopolis", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# India# Historical Fiction# Indian Literature# Asia# Novels# Literary Fiction# Drama# Contemporary# Cult Classics", "9780000000000", "English", 292, 428 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2387, 297, "Foundation and Empire", "Foundation and Empire", "Hari Seldon# Mule# Bel Riose# Toran Darell# Bayta Darell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Science Fiction Fantasy# Space Opera# Fantasy# Novels# Space# Speculative Fiction# Audiobook", "9780000000000", "English", 256, 656 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2388, 2389, "Theft of Swords", "Theft of Swords", "Royce Melborn# Hadrian Blackwater# Alric Essendon# Esrahaddon# Myron Lanaklin# Arista Essendon# Percy Braga# Thrace Wood# Gwen Delancy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Adventure# High Fantasy# Audiobook# Adult# Magic# Science Fiction Fantasy# Epic", "9780000000000", "English", 649, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2389, 2390, "Secrets of the Realm", "Secrets of the Realm", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Middle Grade# Coming Of Age# Historical# Pirates# Action# Fiction# Fantasy# Adventure", "10000000000000", "English", 0, 2390 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2390, 667, "Moving Pictures", "Moving Pictures", "Cut Me Own Throat Dibbler# Havelock Vetinari# DEATH# The Bursar# Gaspode# The Librarian# Windle Poons# Victor Tugelbend# Theda Withel# Mustrum Ridcully# Detritus# Ruby the Troll# Lecturer in Recent Runes# Chair of Indefinite Studies# The Dean", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Adventure# Magic# Science Fiction# Novels", "9780000000000", "English", 396, 667 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2391, 2392, "Fallen Crest High", "Fallen Crest High", "Logan Kade# Mason Kade# Samantha", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# High School# Contemporary# Contemporary Romance# Sports# Drama# Fiction# Young Adult Romance", "10000000000000", "English", 375, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2392, 2383, "Arrows of the Queen", "Arrows of the Queen", "Talia Sensdaughter# Queen Selenay of Valdemar# Herald Skif# Herald Keren# Herald Sherrill# Herald Teren# Hulda (Valdemar)# Herald Kris# Herald Dirk# Alberich# Lord Orthallen# Herald Jadus# Princess Elspeth of Valdemar# Companion Rolan# Firstwife Keldar# Underwife Isrel# Dean Elcarth# Levand (Valdemar)# The Provost Marshall (Valdemar)# Housekeeper Gaytha# Herald Jeri# Herald Nerrissa# Davan (Valdemar)# Griffon (Valdemar)# Drake (Valdemar)# Edric (Valdemar)# Mero (Valdemar)# Corec (Valdemar)# Herald Werda# Herald Sylvan# Medren (Valdemar)# Herald Ylsa# Healer Devan# Melidy (Valdemar)# Kyril (Valdemar)# Neave (Valdemar)# Christa (Valdemar)# Wulf (Valdemar)# Vestel (Valdemar)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Science Fiction Fantasy# High Fantasy# Magic# Adventure# Epic Fantasy# Adult# Romance", "9780000000000", "English", 320, 309 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2393, 67, "The Lost World", "The Lost World", "Professor Challenger# Ed Malone# Lord John Roxton# Professor Summerlee# Zambo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Science Fiction# Fiction# Adventure# Fantasy# Audiobook# Dinosaurs# Novels# Literature# Mystery", "9780000000000", "English", 272, 161 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2394, 274, "Fever 1793", "Fever 1793", "Mattie Cook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Fiction# Historical# Middle Grade# Childrens# Teen# School# Survival# Audiobook", "9780000000000", "English", 252, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2395, 1878, "Colorless Tsukuru Tazaki and His Years of Pilgrimage", "Colorless Tsukuru Tazaki and His Years of Pilgrimage", "Tsukuru Tazaki# Sara Kimito# Yuzuki Shirane# Eri Kurono Haatainen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Japan# Japanese Literature# Contemporary# Magical Realism# Literature# Novels# Literary Fiction# Asia# Audiobook", "B00IHMEAYK", "English", 308, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2396, 488, "Maurice", "Maurice", "Maurice Hall# Alec Scudder# Clive Durham# Mr Borenius# Archie London# Mr Lasker Jones# Mrs Durham# Simcox# Mrs Wetherall# Miss Tonks# Mr Fetherstonhaugh# Mr Ayres# Ada Hall# Kitty Hall# Aunt Ida# Anne Woods# Risley# Ben Ducie# Fred Scudder# Mrs Ducie# Mr Scudder# Mrs Scudder# Dr Barry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# LGBT# Fiction# Queer# Romance# Gay# Historical Fiction# Historical# Novels# 20th Century", "9780000000000", "English", 256, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2397, 514, "Going Bovine", "Going Bovine", "Dulcie# Balder# Cameron Smith# Jena Smith# Paul Ignacio “Gonzo” Gonzales", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Fiction# Humor# Contemporary# Teen# Adventure# Audiobook# Realistic Fiction# Death", "9780000000000", "English", 480, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2398, 2285, "The Fever", "The Fever", "Tom Nash# Eli Nash# Deenie Nash# Lise Daniels# Skye Osbouurne# Gabby Bishop# Kim Court# Sheila Daniels# Sean Lurie# Brooke Campos# Nat Dubow# Jaymie Hurwich# Dave Hurwich# Billy Gaughan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Mystery# Thriller# Contemporary# Horror# Mystery Thriller# Suspense# Audiobook# Adult Fiction", "9780000000000", "", 307, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2399, 1358, "What Alice Forgot", "What Alice Forgot", "", new DateTime(2022, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Chick Lit# Contemporary# Romance# Adult# Audiobook# Adult Fiction# Book Club# Mystery# Australia", "9780000000000", "English", 476, 2400 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2400, 2401, "Millennium Approaches", "Millennium Approaches", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Plays# Drama# Fiction# LGBT# Theatre# Queer# Classics# School# Fantasy# Gay", "9780000000000", "English", 119, 2401 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2401, 1638, "Eona: The Last Dragoneye", "Eona: The Last Dragoneye", "Dillon Walsh# Eona# Rilla# Chart# Lord Ido# Lady Dela# Ryko# Kygo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dragons# Romance# Magic# High Fantasy# Adventure# Fiction# Young Adult Fantasy# Mythology", "9780000000000", "English", 637, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2402, 2403, "The Message for the Last Days", "The Message for the Last Days", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Epic# Book Club# Christian# Drama", "578530805", "English", 372, 2403 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2403, 2404, "Sempre", "Sempre", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# Dark# Abuse# Crime# Suspense# Mystery", "9780000000000", "English", 518, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2404, 2405, "Of Love and Other Demons", "Of Love and Other Demons", "Sierva María# Cayetano Delaura# don Ignacio# Bernarda Cabrera# Abrenuncio# Dulce Olivia# Martina Laborde# don Toribio de Cáceres y Virtudes# Josefa Miranda", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Classics# Historical Fiction# Literature# Romance# Latin American# Novels# Spanish Literature# Latin American Literature", "9780000000000", "English", 160, 368 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2405, 680, "My Name Is Memory", "My Name Is Memory", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Fantasy# Young Adult# Historical Fiction# Time Travel# Chick Lit# Paranormal# Contemporary# Adult", "9780000000000", "English", 324, 2406 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2406, 907, "Tiger's Destiny", "Tiger's Destiny", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Mythology# Paranormal# Magic# Adventure# Fiction# Time Travel# Paranormal Romance", "9780000000000", "English", 464, 2407 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2407, 2408, "A Gallery of Mothers", "A Gallery of Mothers", "Epic# Contemporary# Drama# Fiction# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B089G941HX", "English", "4.31", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2408, 351, "Glamorama", "Glamorama", "Victor Ward# F. Fred Palakon# Chloe Byrnes# Bobby Hughes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Thriller# Novels# American# Literature# Horror# The United States Of America# Literary Fiction# Mystery", "9780000000000", "English", 546, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2409, 2410, "Smile", "Smile", "Raina Telgemeier", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Middle Grade# Young Adult# Comics# Realistic Fiction# Childrens# Fiction# Humor# Coming Of Age# Graphic Novels Comics", "9780000000000", "English", 224, 2410 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2410, 431, "Nevermore", "Nevermore", "Maximum Ride# Jeb Batchelder# Iggy# Nudge# Gasman# Angel (Maximum Ride)# Fang", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Romance# Fiction# Adventure# Paranormal# Dystopia# Action# Teen", "9780000000000", "English", 368, 2411 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2411, 522, "Eternal Kiss of Darkness", "Eternal Kiss of Darkness", "Mencheres# Vlad Tepesh# Kira Graceling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Urban Fantasy# Fantasy# Vampires# Adult# Supernatural# Magic# Fiction", "9780000000000", "English", 361, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2412, 822, "The Laughing Corpse", "The Laughing Corpse", "Anita Blake# Jean-Claude (Anita Blake series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Horror# Paranormal Romance# Romance# Fiction# Supernatural# Mystery", "9780000000000", "English", 301, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2413, 46, "A Swiftly Tilting Planet", "A Swiftly Tilting Planet", "Meg Murry# Charles Wallace Murry# Mrs. OKeefe# Mad Dog Branzillo# Gaudior# Echthroi# Harcels# Madoc Gywnedd# Brandon Llawcae# Matthew Maddox# Chuck Maddox# Sandy Murry# Dennys Murry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Childrens# Classics# Science Fiction Fantasy# Time Travel# Middle Grade# Adventure", "9780000000000", "English", 278, 2414 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2414, 2415, "The Storyteller", "The Storyteller", "Anna Leemann# Abel Tannatek", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Mystery# Romance# Fantasy# Fiction# Realistic Fiction# Dark# Abuse# Drama", "9780000000000", "English", 402, 1197 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2415, 614, "Shades of Grey", "Shades of Grey", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Dystopia# Science Fiction# Humor# Mystery# Adult# Science Fiction Fantasy# Audiobook# Adult Fiction", "9780000000000", "English", 400, 2416 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2416, 2187, "Coin Locker Babies", "Coin Locker Babies", "Fiction# Japan# Japanese Literature# Horror# Thriller# Contemporary# Novels# Mystery# Drama# Suspense", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.69", 0, 2417 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2417, 25, "The Witch of Portobello", "The Witch of Portobello", "Fiction# Philosophy# Novels# Spirituality# Contemporary# Fantasy# Inspirational# Literature# Religion# Magical Realism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.54", 0, 2418 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2418, 2052, "The Warrior's Apprentice", "The Warrior's Apprentice", "Miles Vorkosigan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Space Opera# Fiction# Fantasy# Science Fiction Fantasy# Audiobook# Adventure# Military Fiction# Space# Speculative Fiction", "9780000000000", "English", 372, 2419 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2419, 2420, "True Grit", "True Grit", "Mattie Ross# Tom Chaney# Rooster Cogburn# Ned Pepper", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Westerns# Historical Fiction# Classics# Adventure# Historical# Audiobook# Novels# American# Literature", "9780000000000", "English", 224, 2348 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2420, 2421, "An Inquiry into the Nature and Causes of the Wealth of Nations", "An Inquiry into the Nature and Causes of the Wealth of Nations", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Economics# Nonfiction# Philosophy# Classics# History# Politics# Business# Finance# Political Science# Sociology", "9780000000000", "English", 1264, 2421 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2421, 2422, "The Autobiography of Malcolm X", "The Autobiography of Malcolm X", "Nonfiction# Biography# History# Memoir# Autobiography# Race# Classics# Politics# African American# Biography Memoir", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.32", 0, 2422 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2422, 2244, "Time's Arrow", "Time's Arrow", "Odilo Unverdorben# Reverend Nicholas Kreditor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Novels# Literature# Literary Fiction# Contemporary# Thriller# Fantasy# Holocaust# British Literature", "9780000000000", "English", 165, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2423, 202, "King Rat", "King Rat", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# War# Historical# Classics# Asia# Japan# World War II# Adventure# Novels", "9780000000000", "English", 368, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2424, 797, "Gabriel's Redemption", "Gabriel's Redemption", "Gabriel Emerson# Julianne Mitchell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Erotica# Contemporary# Adult# New Adult# Erotic Romance# Fiction# College# Chick Lit", "9780000000000", "English", 477, 833 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2425, 2342, "Everything I Never Told You", "Everything I Never Told You", "Lydia Lee# Marilyn Lee# James Lee# Nath Lee# Hannah Lee# Jack Wolff", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Mystery# Historical Fiction# Audiobook# Adult# Literary Fiction# Adult Fiction# Family# Book Club", "9780000000000", "English", 292, 2426 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2426, 1178, "These Broken Stars", "These Broken Stars", "Young Adult# Science Fiction# Romance# Fantasy# Dystopia# Fiction# Space# Aliens# Adventure# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.91", 0, 2427 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2427, 1121, "The Sugar Queen", "The Sugar Queen", "Josey Cirrini# Della Lee Baker# Chloe Finley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Romance# Chick Lit# Fantasy# Contemporary# Adult# Magic# Adult Fiction# Southern", "B00125MK78", "English", 290, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2428, 1433, "الطنطورية", "الطنطورية", "Novels# Fiction# Historical Fiction# Literature# Egypt# Politics# War# Unfinished# Historical# Egyptian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "Arabic", "4.33", 0, 2209 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2429, 1559, "Concrete Island", "Concrete Island", "Robert Maitland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Thriller# Drama# Novels# Suspense# Mystery# Contemporary# Literature# British Literature", "9780000000000", "English", 176, 1559 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2430, 927, "A Fistful of Charms", "A Fistful of Charms", "Rachel Morgan# Ivy Tamwood# Jenks# Brett Jacobs# Kisten Felps# Nick Sparagmos# Marshal# David Hue# Ceri# Jax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Fiction# Demons# Romance# Supernatural", "9780000000000", "English", 510, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2431, 700, "Remember Me?", "Remember Me?", "Eric Ross# Jon# Lexi Smart# sister Amy# Fi", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Fiction# Contemporary# Adult# Humor# Contemporary Romance# Adult Fiction# Audiobook# British Literature", "9780000000000", "English", 352, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2432, 667, "Carpe Jugulum", "Carpe Jugulum", "Nanny Ogg# DEATH# Magrat Garlick# Verence the Fool# Agnes Nitt# Igor (Discworld)# Great God Om# Jason Ogg# Mightily Oats# Nac Mac Feegle# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Vampires# Science Fiction Fantasy# Witches# Magic# Audiobook# Comic Fantasy", "9780000000000", "English", 296, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2433, 1216, "Abarat", "Abarat", "Candy Francesca Quackenbush# Malingo# Christopher Carrion# Rojo Pixler# Otto Houlihan# Kaspar Wolfswinkel# John Mischief# Bill Quackenbush# Melissa Quackenbush# Samuel Hastrim Klepp the Fifth# Mendelson Shape# Norma Lipnik# Jimothi Tarrie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Horror# Adventure# Science Fiction Fantasy# Magic# Teen# Childrens# Young Adult Fantasy", "9780000000000", "English", 393, 2434 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2434, 1077, "The Chrysalids", "The Chrysalids", "David Strorm# Sophie Wender# Rosalind Morton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Classics# Dystopia# Fantasy# Post Apocalyptic# Young Adult# Science Fiction Fantasy# School# Novels", "9780000000000", "English", 200, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2435, 2436, "The Red Hand", "The Red Hand", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Book Club# Drama# Epic", "B07TV94SKZ", "English", 298, 2436 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2436, 968, "Bloodrose", "Bloodrose", "Calla Tor# Ren Laroche# Ansel Tor# Seamus Doran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Werewolves# Romance# Supernatural# Paranormal Romance# Magic# Shapeshifters# Wolves", "9780000000000", "English", 406, 968 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2437, 2117, "The Dark Is Rising", "The Dark Is Rising", "Will Stanton# Merry Lyon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Childrens# Middle Grade# Adventure# Magic# Classics# Arthurian# Science Fiction Fantasy", "9780000000000", "English", 272, 2438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2438, 2439, "The Fan Man", "The Fan Man", "Horse Badorties", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Literature# Novels# Comedy# Contemporary# New York# Adult# American# The United States Of America", "9780000000000", "English", 191, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2439, 2440, "Queer", "Queer", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# LGBT# Classics# Queer# American# Literature# Novels# Thriller# Drama# Gay", "9780000000000", "English", 160, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2440, 438, "Finding Cinderella", "Finding Cinderella", "Daniel# Six", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Novella# Contemporary Romance# Fiction# Short Stories# High School# Humor", "B00FNWRSCI", "English", 176, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2441, 2040, "Night Film", "Night Film", "Scott McGrath# Stanislas Cordova# Ashley Cordova# Hopper Cole# Nora Halliday# Irene Gallo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Horror# Mystery Thriller# Adult# Crime# Suspense# Contemporary# Adult Fiction", "9780000000000", "English", 640, 1551 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2442, 2443, "The Elementary Particles", "The Elementary Particles", "Fiction# France# Literature# French Literature# Novels# Contemporary# Philosophy# Roman# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.8", 0, 17 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2443, 2444, "The Golem and the Jinni", "The Golem and the Jinni", "Ahmad Al-Hadid# Chava# Yehudah Schaalman# Rabbi Avram Meyer# Boutros Arbeely# Maryam Faddoul# Michael Levy# Mahmoud Saleh# Sayeed Faddoul# Moe Radzin# Thea Radzin# Anna Blumberg# Sophia Winston# Fadwa al-Hadid", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Historical Fiction# Fiction# Magical Realism# Historical# Audiobook# Urban Fantasy# Mythology# Adult# Magic", "9780000000000", "English", 486, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2444, 2187, "Piercing", "Piercing", "Horror# Fiction# Japanese Literature# Japan# Thriller# Mystery# Drama# Suspense# Contemporary# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.53", 0, 517 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2445, 671, "Red Seas Under Red Skies", "Red Seas Under Red Skies", "Locke Lamora# Jean Tannen", new DateTime(2022, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Adventure# Epic Fantasy# High Fantasy# Audiobook# Adult# Pirates# Science Fiction Fantasy# Crime", "B000UDNBS0", "English", 578, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2446, 542, "Styxx", "Styxx", "Styxx of Didymos# Simi# Bethany (Styxx)# Goddess Themis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Mythology# Vampires# Urban Fantasy# Adult# Demons# Supernatural", "9780000000000", "English", 836, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2447, 2448, "Evoke", "Evoke", "Book Club# Fiction# Contemporary# Drama# Novels# Romance# New Adult# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.5", 0, 2315 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2448, 2022, "The Likeness", "The Likeness", "Cassie Maddox# Lexie Madison# Sam ONeill# Frank Mackey# Jackie Mackey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Thriller# Mystery Thriller# Ireland# Audiobook# Suspense# Adult# Contemporary", "9780000000000", "English", 466, 178 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2449, 588, "The Grim Grotto", "The Grim Grotto", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 577 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2450, 1310, "The Woods", "The Woods", "Paul Copeland# Cingle Shaker# Loren Muse", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Crime# Suspense# Mystery Thriller# Drama# Novels# Audiobook# Adult", "9780000000000", "English", 404, 2451 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2451, 365, "Beautiful Redemption", "Beautiful Redemption", "Fantasy# Young Adult# Paranormal# Romance# Magic# Fiction# Supernatural# Witches# Paranormal Romance# Urban Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 2452 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2452, 377, "The Yiddish Policemen's Union", "The Yiddish Policemen's Union", "Meyer Landsman# Berko Shemets# Bina Gelbfish# Ester-Malke Shemets# Hertz Shemets# Alter Litvak# Mendel Shpilman# Itzik Zimbalist# Naomi Landsman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Science Fiction# Alternate History# Crime# Jewish# Fantasy# Novels# Literature# Literary Fiction", "9780000000000", "English", 414, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2453, 2454, "The Tortilla Curtain", "The Tortilla Curtain", "Delany Mossbacher# Candido Rincon# America Rincon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Book Club# School# Literature# Novels# Literary Fiction# American# Audiobook# Adult Fiction", "9780000000000", "English", 355, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2454, 1167, "The City & the City", "The City & the City", "Tyador Borlú", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Science Fiction# Mystery# Crime# Urban Fantasy# Speculative Fiction# Science Fiction Fantasy# New Weird# Weird Fiction", "9780000000000", "English", 312, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2455, 1071, "March", "March", "Marmee# Henry David Thoreau# Ralph Waldo Emerson# Grace Clement# Mr. March# John Brooke", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Civil War# War# Book Club# Literary Fiction# Adult Fiction# Adult# Novels", "9780000000000", "English", 280, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2456, 32, "Emily of New Moon", "Emily of New Moon", "Emily Starr# Ilse Burnley# Teddy Kent# Perry Miller# Dean Priest# Jimmy Murray# Elizabeth Murray# Laura Murray", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Canada# Historical# Middle Grade# Romance# Coming Of Age", "9780000000000", "English", 339, 1616 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2457, 2458, "The Lover", "The Lover", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.74", " Maxine Hong Kingston (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2458, 2459, "The Child Thief", "The Child Thief", "Peter Duchene# Nick McKenna", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Horror# Retellings# Fiction# Young Adult# Fairy Tales# Adult# Dark Fantasy# Dark# Urban Fantasy", "9780000000000", "English", 476, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2459, 2460, "\"Little", "\"Little", "Fantasy# Fiction# Magical Realism# Science Fiction Fantasy# Novels# Science Fiction# Unfinished# Literature# Magic# Speculative Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 2460 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2460, 2461, "Wolf Brother", "Wolf Brother", "Fantasy# Young Adult# Fiction# Adventure# Historical Fiction# Middle Grade# Historical# Childrens# Animals# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 1938 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2461, 2462, "Driven", "Driven", "Rylee Thomas# Colton Donavan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Erotica# Sports# Contemporary# New Adult# Adult# Sports Romance# Erotic Romance# BDSM", "10000000000000", "English", 327, 2462 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2462, 1620, "The Winner's Crime", "The Winner's Crime", "Kestrel# Arin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Young Adult Fantasy# Dystopia# High Fantasy# Fiction# Historical Fiction# Adventure# War", "9780000000000", "English", 416, 363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2463, 2464, "\"Collected Poems", "\"Collected Poems", "Poetry# Classics# Literature# 20th Century# Fiction# American# British Literature# Classic Literature# Nobel Prize# Anthologies", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2464, 338, "In a Sunburned Country", "In a Sunburned Country", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Travel# Nonfiction# Humor# Australia# Memoir# Audiobook# History# Adventure# Biography# Travelogue", "9780000000000", "English", 335, 289 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2465, 2285, "Dare Me", "Dare Me", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Mystery# Contemporary# Thriller# Mystery Thriller# Crime# Audiobook# Suspense# Adult", "9780000000000", "English", 290, 1438 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2466, 409, "Ruin and Rising", "Ruin and Rising", "Alina Starkov# Malyen Oretsev# Darkling# Genya Safin# Zoya Nazyalensky# Nikolai Lantsov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Young Adult Fantasy# Magic# Fiction# High Fantasy# Adventure# Audiobook# Paranormal", "10000000000000", "English", 422, 409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2467, 2468, "\"Elon Musk: Tesla", "\"Elon Musk: Tesla", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.22", "Ashlee Vance (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2468, 2276, "Midnight Exposure", "Midnight Exposure", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romantic Suspense# Mystery# Romance# Thriller# Suspense# Fiction# Contemporary# Crime# Mystery Thriller# Audiobook", "10000000000000", "English", 315, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2469, 2470, "Princess: A True Story of Life Behind the Veil in Saudi Arabia", "Princess: A True Story of Life Behind the Veil in Saudi Arabia", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Biography# Memoir# Biography Memoir# Womens# History# Religion# Islam# Feminism# Autobiography", "9780000000000", "English", 286, 2470 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2470, 1107, "The Sorceress", "The Sorceress", "Nicholas Flamel# Perenelle Flamel# Josh Newman# Sophie Newman# Sgàthach# the Warrior Maid# Dr. John Dee# William Shakespeare", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Mythology# Adventure# Urban Fantasy# Young Adult Fantasy# Teen# Audiobook", "9780000000000", "English", 502, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2471, 590, "Children of the Mind", "Children of the Mind", "Jane Whitefield# Andrew Wiggin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Young Adult# Space# Audiobook# Novels# Aliens# Space Opera", "9780000000000", "English", 370, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2472, 968, "Wolfsbane", "Wolfsbane", "Calla Tor# Ren Laroche# Seamus Doran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Werewolves# Romance# Paranormal Romance# Supernatural# Urban Fantasy# Magic# Shapeshifters", "9780000000000", "English", 390, 977 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2473, 2474, "The One and Only Ivan", "The One and Only Ivan", "Middle Grade# Fiction# Animals# Childrens# Young Adult# Fantasy# Juvenile# Audiobook# Realistic Fiction# Chapter Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 356 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2474, 2475, "One of Us Is Lying", "One of Us Is Lying", "Bronwyn Rojas# Nate Macaulay# Addy Prentiss# Cooper Clay# Simon Kelleher# Maeve Rojas# Jake Riordan# Ashton Prentiss# TJ Forrester", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Contemporary# Fiction# Thriller# Mystery Thriller# Audiobook# Romance# Crime# LGBT", "10000000000000", "English", 360, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2475, 2476, "The Woman in Black", "The Woman in Black", "Horror# Fiction# Gothic# Classics# Mystery# Historical Fiction# Ghosts# Paranormal# Ghost Stories# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.72", 0, 2476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2476, 667, "Men at Arms", "Men at Arms", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Cut Me Own Throat Dibbler# Foul Ole Ron# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# Gaspode# Angua von Überwald# The Librarian# Detritus# Fred Colon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Mystery# Audiobook# British Literature# High Fantasy# Comic Fantasy", "9780000000000", "English", 377, 1949 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2477, 427, "Shanghai Girls", "Shanghai Girls", "Pearl Chin# May Chin# Sam Louie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# China# Historical# Asia# Asian Literature# Adult Fiction# Adult# Audiobook# Book Club", "9780000000000", "English", 309, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2478, 2479, "Lights on the Sea", "Lights on the Sea", "Fiction# Fantasy# Magical Realism# Adventure# Spanish Literature# Contemporary# Family# Audiobook# Spain# Drama", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 17 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2479, 2480, "Is Everyone Hanging Out Without Me? (And Other Concerns)", "Is Everyone Hanging Out Without Me? (And Other Concerns)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Humor# Memoir# Biography# Audiobook# Comedy# Autobiography# Biography Memoir# Essays# Adult", "9780000000000", "English", 222, 2480 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2480, 2481, "Dreams of Winter", "Dreams of Winter", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Epic# Drama", "B0794D68MX", "English", 424, 1481 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2481, 2482, "يوتوبيا", "يوتوبيا", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Dystopia# Fiction# Literature# Science Fiction# Egypt# Fantasy# Politics# Horror# Egyptian Literature", "9790000000000", "Arabic", 192, 2482 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2482, 1451, "The Guns of August", "The Guns of August", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "History# Nonfiction# War# World War I# Military Fiction# Military History# Historical# Politics# European History# World History", "B002TXZS8A", "English", 658, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2483, 112, "The Body", "The Body", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Short Stories# Coming Of Age# Audiobook# Thriller# Young Adult# Mystery# Novella# Classics", "9780000000000", "English", 80, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2484, 2485, "Life... Love... Kumbh...", "Life... Love... Kumbh...", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Love# Mythology# Philosophy# India# Humor# Literature# Spirituality# Contemporary# Inspirational", "9790000000000", "English", 290, 2485 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2485, 2486, "The Strain", "The Strain", "Horror# Fiction# Vampires# Fantasy# Science Fiction# Thriller# Paranormal# Supernatural# Audiobook# Post Apocalyptic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 307 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2486, 588, "The Complete Wreck", "The Complete Wreck", "Fiction# Young Adult# Fantasy# Childrens# Mystery# Middle Grade# Adventure# Humor# Novels# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.32", 0, 2487 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2487, 71, "Ariel", "Ariel", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Classics# Feminism# Fiction# American# 20th Century# Literature# Womens# Mental Health# Mental Illness", "9780000000000", "English", 105, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2488, 2489, "100 Bible Facts About Jesus: The Exciting way to Learn", "100 Bible Facts About Jesus: The Exciting way to Learn", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B07XGFCBJX", "", 161, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2489, 2490, "\"God Bless You", "\"God Bless You", "Fiction# Classics# Humor# Science Fiction# Literature# Novels# American# Literary Fiction# 20th Century# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B005IHWBSY", "English", "3.95", 0, 1017 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2490, 193, "Grey", "Grey", "Anastasia Steele# Christian Grey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# BDSM# Fiction# Adult# Contemporary# Contemporary Romance# Erotic Romance# Chick Lit# New Adult", "9780000000000", "English", 576, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2491, 2492, "Слънце недосегаемо", "Слънце недосегаемо", "4.09", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Ангѣлъ Петровъ (Goodreads Author) (Introduction)", " Kalin M. Nenov (Goodreads Author) (Introduction)", " Бранимир Събев (Goodreads Author) (Introduction)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2492, 2493, "Wool", "Wool", "Science Fiction# Fiction# Dystopia# Post Apocalyptic# Fantasy# Short Stories# Science Fiction Fantasy# Apocalyptic# Young Adult# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B005FC52L0", "English", "4.12", 0, 2493 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2493, 2494, "I Have Never", "I Have Never", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Romance# Contemporary# Humor# Contemporary Romance# Love# Fiction# Clean Romance# Womens Fiction# British Literature", "9780000000000", "English", 224, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2494, 109, "The Myth of Sisyphus and Other Essays", "The Myth of Sisyphus and Other Essays", "Philosophy# Nonfiction# Essays# Classics# France# Literature# French Literature# 20th Century# Unfinished# Mythology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.2", 0, 2495 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2495, 667, "Maskerade", "Maskerade", "Nobby Nobbs# Nanny Ogg# DEATH# Agnes Nitt# The Librarian# Death of Rats# Detritus# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Witches# Audiobook# Magic# High Fantasy# Comic Fantasy", "9780000000000", "English", 285, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2496, 645, "Emperor Mage", "Emperor Mage", "Veralidaine Sarrasri# Numair Salmalín# Alanna of Trebond# Rikash Moonsword# Ozorne# Skysong (Kitten)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Adventure# High Fantasy# Dragons# Science Fiction Fantasy# Teen", "9780000000000", "English", 358, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2497, 2498, "The Merchant of Death", "The Merchant of Death", "Bobby Pendragon# Andy Mitchell# Press Tilton# Shannon Pendragon# Courtney Chetwynde# Mark Dimond# Saint Dane# Traveler Alder", new DateTime(2022, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Adventure# Middle Grade# Childrens# Young Adult Fantasy# Teen# Magic", "9780000000000", "English", 375, 1205 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2498, 2499, "The School for Good and Evil", "The School for Good and Evil", "Fantasy# Middle Grade# Young Adult# Fairy Tales# Magic# Fiction# Romance# Childrens# Adventure# Audiobook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.02", 0, 1427 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2499, 822, "Narcissus in Chains", "Narcissus in Chains", "Anita Blake# Jean-Claude (Anita Blake series)# Richard Zeeman# Asher (Anita Blake series)# Jason Schuyler# Nathaniel Graison# Damian (Anita Blake series)# Micah Callahan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Fiction# Horror# Supernatural# Werewolves", "9780000000000", "English", 644, 1261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2500, 2501, "12 Rules for Life: An Antidote to Chaos", "12 Rules for Life: An Antidote to Chaos", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.94", " Ethan Van Sciver (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2501, 2502, "\"Born to Run: A Hidden Tribe", "\"Born to Run: A Hidden Tribe", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.29", "Christopher McDougall", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2502, 1081, "Last Argument of Kings", "Last Argument of Kings", "Logen Ninefingers# Jezal dan Luthar# Ferro Maljinn# The Dogman# Caul Shivers# Shylo Vitari# Nicomo Cosca# Bayaz# Ardee West# Collem West# Black Dow# Brother Longfoot# Arch Lector Sult# Pike (2)# Carlot dan Eider# Practical Frost# Practical Severard# Bremer dan Gorst# Mauthis# Sand dan Glokta# Bethod", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Dark Fantasy# High Fantasy# Audiobook# Adventure# Science Fiction Fantasy# Magic# War", "9780000000000", "English", 536, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2503, 293, "All Creatures Great and Small / All Things Bright and Beautiful", "All Creatures Great and Small / All Things Bright and Beautiful", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Classics# Animals# Biography# Memoir# Humor# Adult# Nature# Short Stories# Biography Memoir", "9780000000000", "English", 820, 2504 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2504, 1236, "The Queen of Nothing", "The Queen of Nothing", "Madoc# Taryn Duarte# Jude Duarte# Cardan Greenbriar# Vivienne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Fae# Young Adult Fantasy# Fiction# Magic# Audiobook# Fairies# Urban Fantasy", "9780000000000", "English", 300, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2505, 2506, "\"Many Lives", "\"Many Lives", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.15", "Brian L. Weiss", " and the Past Life Therapy That Changed Both Their Lives\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2506, 2163, "Stray", "Stray", "Marc Ramos# Faythe Sanders# Jace Hammond# Abby Wade", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Shapeshifters# Romance# Paranormal Romance# Adult# Supernatural# Fiction# Werewolves", "9780000000000", "English", 618, 2507 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2507, 2508, "\"Sex in the Title: A Comedy about Dating", "\"Sex in the Title: A Comedy about Dating", "B00G2JM0D8", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.45", "Zack Love (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2508, 2509, "Revenge of the Witch", "Revenge of the Witch", "Fantasy# Young Adult# Horror# Fiction# Magic# Paranormal# Middle Grade# Witches# Supernatural# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 2509 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2509, 969, "Fool Moon", "Fool Moon", "Susan Rodriguez# Bob (Dresden Files)# Gentleman John Marcone# Karrin Murphy# Harry Dresden# Georgia Borden# Billy Borden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Mystery# Fiction# Paranormal# Magic# Audiobook# Supernatural# Science Fiction Fantasy# Werewolves", "9780000000000", "English", 401, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2510, 607, "Touch of Power", "Touch of Power", "Avry of Kazan# Kerrick# Belen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Romance# High Fantasy# Fiction# Adventure# Paranormal# Young Adult Fantasy# Fantasy Romance", "9780000000000", "English", 390, 607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2511, 2512, "Before We Were Yours", "Before We Were Yours", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Audiobook# Book Club# Adult# Adult Fiction# Family# Adoption# Contemporary", "9780000000000", "English", 342, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2512, 2489, "100 Fun Bible Facts: The Exciting way to Learn (100 Bible Facts Book 1)", "100 Fun Bible Facts: The Exciting way to Learn (100 Bible Facts Book 1)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B07QJD68WQ", "", 33, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2513, 650, "The Lathe of Heaven", "The Lathe of Heaven", "George Orr# dreamer# Dr. Haber# psychiatrist# Heather Lelache# lawyer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Dystopia# Science Fiction Fantasy# Classics# Speculative Fiction# Novels# Audiobook# American", "9780000000000", "English", 176, 3 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2514, 728, "The Aleph and Other Stories", "The Aleph and Other Stories", "Short Stories# Fiction# Classics# Fantasy# Magical Realism# Literature# Spanish Literature# Latin American# Philosophy# Latin American Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.38", 0, 2515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2515, 990, "The Caine Mutiny", "The Caine Mutiny", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# War# World War II# Military Fiction# Literature# Historical# Novels# Literary Fiction", "9780000000000", "English", 537, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2516, 535, "The Bedroom Secrets of the Master Chefs", "The Bedroom Secrets of the Master Chefs", "Danny Skinner# Brian Kibby", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Scotland# Dark# Thriller# Adult# Drama# Cult Classics# Novels# Adult Fiction", "9780000000000", "English", 400, 131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2517, 522, "Once Burned", "Once Burned", "Bones (Night Huntress series)# Catherine Crawfield-Russell# Vlad Tepesh# Leila Dalton# Marty (Night Huntress series)# Maximus (Night Huntress series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Vampires# Paranormal Romance# Romance# Urban Fantasy# Fantasy# Adult# Supernatural# Fiction# Magic", "9780000000000", "English", 373, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2518, 2519, "Raw", "Raw", "Alexa Ballentine# Antonio Falco", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Romance# BDSM# Contemporary# Erotica# Abuse# New Adult# Adult# Contemporary Romance# Erotic Romance", "B00HNG4AB4", "English", 359, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2519, 261, "Time Enough for Love", "Time Enough for Love", "Lazarus Long# Maureen Johnson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Science Fiction Fantasy# Time Travel# Fantasy# Classics# Speculative Fiction# Novels# Audiobook# Space", "10000000000000", "English", 589, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2520, 548, "The Retribution of Mara Dyer", "The Retribution of Mara Dyer", "Mara Dyer# Noah Shaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Mystery# Fiction# Supernatural# Horror# Contemporary# Thriller", "9780000000000", "English", 470, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2521, 2522, "The Ancestor", "The Ancestor", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Fiction# Epic# Science Fiction# Historical Fiction# Drama", "9780000000000", "English", 348, 2522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2522, 2523, "The Tale of Peter Rabbit", "The Tale of Peter Rabbit", "Peter Rabbit# Peter Rabbit# Flopsy Rabbit# Mopsy Rabbit# Cotton-tail Rabbit# Mrs. Rabbit# Mr. McGregor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Classics# Picture Books# Fiction# Animals# Fantasy# Juvenile# Kids# Childrens Classics# Young Adult", "9780000000000", "English", 72, 2523 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2523, 822, "Bloody Bones", "Bloody Bones", "Anita Blake# Dolph Storr# Jean-Claude (Anita Blake series)# Richard Zeeman# Jason Schuyler# Larry Kirkland# Bradley Bradford", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Horror# Paranormal Romance# Fiction# Supernatural# Mystery", "9780000000000", "English", 336, 2237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2524, 1730, "No Rest for the Wicked", "No Rest for the Wicked", "Kaderin the Cold Hearted# Myst# the Coveted# Bowen MacRieve# Phenïx Nïx# The Ever-Knowing# King Kristoff# Sebastian Wroth# Nikolai Wroth", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Vampires# Fantasy# Urban Fantasy# Adult# Supernatural# Fiction# Magic", "10000000000000", "English", 356, 1730 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2525, 2526, "Ten Tiny Breaths", "Ten Tiny Breaths", "Kacey Cleary# Trent Emerson# Nora Matthews# Dan Ryder", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Romance# Contemporary# Contemporary Romance# Young Adult# Fiction# Chick Lit# Drama# Adult# Realistic Fiction", "9780000000000", "English", 262, 2526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2526, 2489, "Jubal's Field Trip To Heaven: Jubal and Chanan Enter Through the Narrow Gate (Jubal's Divine Adventures #1)", "Jubal's Field Trip To Heaven: Jubal and Chanan Enter Through the Narrow Gate (Jubal's Divine Adventures #1)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B07RK1ZQL6", "English", 25, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2527, 112, "Mr. Mercedes", "Mr. Mercedes", "Bill Hodges# Jerome Robinson# Brady Hartsfield# Janey Trelawney# Holly Gibney", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Horror# Mystery# Crime# Audiobook# Mystery Thriller# Suspense# Adult# Detective", "9780000000000", "English", 437, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2528, 2529, "Half Bad", "Half Bad", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Magic# Witches# Fiction# Urban Fantasy# LGBT# Supernatural# Young Adult Fantasy", "9780000000000", "English", 394, 924 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2529, 368, "Black Dagger Brotherhood: Boxed Set #1-6", "Black Dagger Brotherhood: Boxed Set #1-6", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Vampires# Romance# Fantasy# Adult# Urban Fantasy# Contemporary# Erotica# Fiction", "9780000000000", "English", 0, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2530, 2531, "The Swiss Family Robinson", "The Swiss Family Robinson", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.92", " Arthur Pober (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2531, 2532, "Memórias Póstumas de Brás Cubas", "Memórias Póstumas de Brás Cubas", "Brás Cubas# Virgília# Lobo Neves# Quincas Borba", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Brazil# Literature# Novels# Portuguese Literature# Romance# 19th Century# Latin American# Literary Fiction", "9780000000000", "Portuguese", 176, 2532 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2532, 2533, "Flat-Out Love", "Flat-Out Love", "Julie Seagle# Matthew Watkins# Flat Finn# Celeste Watkins# Erin Watkins# Roger Watkins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# New Adult# Contemporary# Chick Lit# Fiction# Contemporary Romance# College# Humor# Realistic Fiction", "B008DZTE60", "English", 355, 555 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2533, 224, "A Court of Frost and Starlight", "A Court of Frost and Starlight", "Feyre Archeron# Rhysand", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Young Adult# New Adult# Fiction# Fae# Young Adult Fantasy# Magic# Paranormal# Novella", "9780000000000", "English", 229, 1418 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2534, 1055, "L'Assommoir", "L'Assommoir", "Classics# Fiction# France# French Literature# 19th Century# Literature# Novels# Historical Fiction# Roman# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 1403 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2535, 2536, "Tail of the Devil", "Tail of the Devil", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Thriller# Supernatural# Adventure# Magic# Teen# Paranormal# Horror", "B00CJHO7D8", "English", 230, 2536 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2536, 2537, "Psycho", "Psycho", "Norman Bates# Mary Crane# Lila Crane# Sam Loomis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Classics# Thriller# Mystery# Crime# Audiobook# Suspense# Mystery Thriller# Novels", "9780000000000", "English", 208, 448 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2537, 748, "We'll Always Have Summer", "We'll Always Have Summer", "Jeremiah Fisher# Conrad Fisher# Isabel Belly Conklin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Young Adult Contemporary# Teen# Young Adult Romance# Contemporary Romance", "9780000000000", "English", 291, 2538 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2538, 1248, "The Other Side of Midnight", "The Other Side of Midnight", "Noelle Page# Lawrence Larry Douglas# Catherine Alexander# Constantin Costa Demiris# Napoleon Chotas", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Romance# Suspense# Mystery Thriller# Novels# Crime# Drama# Contemporary", "9780000000000", "English", 462, 2414 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2539, 2540, "On a Pale Horse", "On a Pale Horse", "Parry# Luna Kaftan# Magician Kaftan# Zane (Incarnations of Immortality)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Science Fiction# Science Fiction Fantasy# Urban Fantasy# Magic# Paranormal# Death# Supernatural# Mythology", "9780000000000", "English", 325, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2540, 2233, "Betrayal of Faith", "Betrayal of Faith", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Epic# Fiction# Novels", "9780000000000", "", 496, 2541 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2541, 2542, "The Moviegoer", "The Moviegoer", "Binx Bolling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Southern# American# Literary Fiction# 20th Century# Philosophy# Audiobook", "9780000000000", "English", 242, 16 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2542, 822, "Burnt Offerings", "Burnt Offerings", "Anita Blake# Dolph Storr# Zerbrowski (Anita Blake series)# Jean-Claude (Anita Blake series)# Richard Zeeman# Malcolm (Anita Blake series)# Asher (Anita Blake series)# Gregory (Anita Blake series)# Padma (Anita Blake series)# Jason Schuyler# Nathaniel Graison# Damian (Anita Blake series)# Larry Kirkland# Raina (Anita Blake series)# Zane (Anita Blake series)# Rafael (Anita Blake series)# Fernando  (Anita Blake series)# The Traveler# Warrick (Anita Blake series)# Veronica Ronnie Sims# Gwen (Anita Blake series)# Tammie Reynolds# Stephen (Anita Blake series)# Sylvie (Anita Blake series)# Hannah (Anita Blake series)# Balthazar (Anita Blake series)# Yvette (Anita Blake series)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Horror# Fiction# Supernatural# Werewolves", "9780000000000", "English", 392, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2543, 2544, "An Elephant Is On My House: And Other Poems", "An Elephant Is On My House: And Other Poems", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Poetry# Childrens", "B00J9VBI9I", "English", 41, 2544 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2544, 2545, "Casino Royale", "Casino Royale", "James Bond# M# Felix Leiter# Vesper Lynd# Le Chiffre# René Mathis# Head of S.# Miss Moneypenny# Charles DaSilva# Monsieur et Madame Muntz# Two men in straw hats# Chief of Staff Bill# The Greek# Le Chiffres gunmen# The Smersh agent# The French doctor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Classics# Espionage# Crime# Adventure# Novels# Audiobook# Mystery Thriller", "9780000000000", "English", 192, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2545, 1736, "Evil Among Us", "Evil Among Us", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fantasy# Aliens# Dystopia# Horror# Paranormal", "B00CVB4RD2", "English", 190, 1736 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2546, 2547, "Gorky Park", "Gorky Park", "Irina Asanova# Major Pribluda# Zoya Renko# Pasha Pavlovich# John Osborne# Feodor Golodkin# Andrei Iamskoy# Misha Mikoyan# Natasha Mikoyan# Sergei Fet# James Kirwill# William Kirwill# Yuri Viskov# Hans Unmann# Kostia Borodin# Valerya Davidova# Ilya Nikitin# Arkady Renko", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Russia# Suspense# Mystery Thriller# Drama# Novels# Detective", "9780000000000", "English", 433, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2547, 2548, "Dash & Lily's Book of Dares", "Dash & Lily's Book of Dares", "Young Adult# Romance# Contemporary# Christmas# Fiction# Realistic Fiction# Young Adult Contemporary# Teen# Holiday# Humor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.78", 0, 632 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2548, 2549, "Tropic of Capricorn", "Tropic of Capricorn", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Erotica# American# Thriller# Suspense# Mystery# The United States Of America", "9780000000000", "English", 348, 359 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2549, 1455, "The Dragonriders of Pern", "The Dragonriders of Pern", "Lessa# Flar# Jaxom# Ruth (The White Dragon)# Masterharper Robinton# Fnor# Brekke", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Fiction# Dragons# Science Fiction Fantasy# Young Adult# Epic Fantasy# Adventure# High Fantasy# Novels", "9780000000000", "English", 864, 2550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2550, 2551, "Kiss of Death", "Kiss of Death", "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Paranormal Romance# Fiction# Teen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.21", 0, 2551 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2551, 2552, "Tiger and the Robot (Chandler Gray #1)", "Tiger and the Robot (Chandler Gray #1)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Contemporary# Epic", "9780000000000", "English", 250, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2552, 2553, "The Paris Wife", "The Paris Wife", "F. Scott Fitzgerald# Gertrude Stein# Ernest Hemingway# Hadley Richardson Hemingway", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Romance# France# Book Club# Adult Fiction# Audiobook# Adult# Novels", "9780000000000", "English", 314, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2553, 2554, "The Body Farm", "The Body Farm", "Kay Scarpetta# Pete Marino# Lucy Farinelli# Benton Wesley# Emily Steiner# Denesa Steiner# James Jenrette# Max Ferguson# Wren Maxwell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Thriller# Suspense# Mystery Thriller# Drama# Murder Mystery# Novels# Adult Fiction", "9780000000000", "English", 351, 515 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2554, 2555, "Jessica's Guide to Dating on the Dark Side", "Jessica's Guide to Dating on the Dark Side", "Lucius Vladescu# (Anatasia) Jessica Packwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Romance# Paranormal# Fantasy# Paranormal Romance# Supernatural# Urban Fantasy# Fiction# Teen", "9780000000000", "English", 351, 294 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2555, 2556, "Big Sur", "Big Sur", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.82", " Grover Gardner (Translation)\"", " Tom Parker (Narrator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2556, 2557, "The Distance Between Us", "The Distance Between Us", "Caymen Meyers# Xander Spence", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Realistic Fiction# Young Adult Contemporary# Fiction# Contemporary Romance# High School# Young Adult Romance", "9780000000000", "English", 320, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2557, 297, "The Gods Themselves", "The Gods Themselves", "Frederick Hallam# Selene Lindstrom# Dua# Odeen# Tritt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Science Fiction Fantasy# Classics# Hugo Awards# Fantasy# Novels# Aliens# Space# Audiobook", "9780000000000", "English", 288, 2558 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2558, 2559, "The Cabinet of Curiosities", "The Cabinet of Curiosities", "Mystery# Thriller# Fiction# Horror# Suspense# Mystery Thriller# Crime# Drama# Novels# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.24", 0, 1953 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2559, 2560, "Into the Wilderness", "Into the Wilderness", "Chingachgook# Elizabeth Middleton# Nathaniel Bonner# Danl Bonner# Julian Middleton# Hannah Bonner# Runs-from-Bears# Many-Doves# Robbie MacLachlan# Falling-Day# Alfred Middleton# Richard Todd# Kitty Witherspoon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Fiction# Historical# Historical Romance# Adventure# Adult# Audiobook# 18th Century# Adult Fiction", "9780000000000", "English", 876, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2560, 1484, "Mercy", "Mercy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Erotica# BDSM# Romance# Adult Fiction# Contemporary# Abuse# Erotic Romance# Adult# Suspense", "B00VARSN7Y", "English", 233, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2561, 588, "The Penultimate Peril", "The Penultimate Peril", "Fiction# Young Adult# Childrens# Fantasy# Mystery# Middle Grade# Adventure# Humor# Audiobook# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.05", 0, 1889 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2562, 901, "Boy Meets Boy", "Boy Meets Boy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# LGBT# Romance# Contemporary# Fiction# Queer# Gay# Realistic Fiction# Teen# M M Romance", "9780000000000", "English", 185, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2563, 257, "The Essential Calvin and Hobbes: A Calvin and Hobbes Treasury", "The Essential Calvin and Hobbes: A Calvin and Hobbes Treasury", "Calvin# Hobbes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Comics# Humor# Graphic Novels# Fiction# Comedy# Childrens# Graphic Novels Comics# Comic Book# Comic Strips# Classics", "9780000000000", "English", 256, 257 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2564, 391, "The Thousand Autumns of Jacob de Zoet", "The Thousand Autumns of Jacob de Zoet", "Jacob de Zoet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Japan# Historical# Literary Fiction# Asia# Novels# Literature# Contemporary# British Literature", "9780000000000", "English", 479, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2565, 2566, "Krabat", "Krabat", "Krabat# Müllermeister# Tonda# Kantorka", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Classics# German Literature# Fiction# Young Adult# Childrens# School# Magic# Horror# Read For School", "9780000000000", "German", 296, 2566 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2566, 2276, "Midnight Obsession", "Midnight Obsession", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romantic Suspense# Mystery# Fiction# Suspense# Adult# Novels# Drama# Thriller# Contemporary# Crime", "9780000000000", "English", 329, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2567, 368, "The Black Dagger Brotherhood: An Insider's Guide", "The Black Dagger Brotherhood: An Insider's Guide", "Zsadist# Bella Soang# Vishous (Black Dagger)# Phury# Rhage# Wrath (Blind King)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal Romance# Paranormal# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Erotica", "9780000000000", "English", 467, 717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2568, 2569, "Hinds' Feet on High Places", "Hinds' Feet on High Places", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Fiction# Christian Fiction# Classics# Faith# Christianity# Spirituality# Religion# Christian Living# Inspirational", "9780000000000", "English", 317, 2569 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2569, 192, "The Strange Case of Dr. Jekyll and Mr. Hyde and Other Tales of Terror", "The Strange Case of Dr. Jekyll and Mr. Hyde and Other Tales of Terror", "Classics# Horror# Fiction# Gothic# Science Fiction# Short Stories# Fantasy# Literature# Mystery# 19th Century", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.96", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2570, 2571, "\"Why They Stay: Sex Scandals", "\"Why They Stay: Sex Scandals", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.4", "Anne Michaud (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2571, 1128, "Magic Slays", "Magic Slays", "Kate Daniels# Curran Lennart# Beatrice Aunt B# Derek Gaunt# Jim Shrapshire# Saiman# Dr. George Doolittle# Andrea Nash# Raphael Medrano# Roman Semionovich# Mahon Delany# Ghastek# Rowena (People)# Julie Olsen# Ascanio Ferara# Barabas Gilliam# Evdokia Ivanovna", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Magic# Vampires# Paranormal Romance# Shapeshifters# Adult# Werewolves", "9780000000000", "English", 308, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2572, 804, "The Distant Hours", "The Distant Hours", "Edith Burchill# Meredith Baker# Juniper Blythe# Seraphina Blythe# Persephone Blythe# Raymond Blythe# Thomas Cavill# Lucy Middleton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Mystery# Historical# Gothic# Romance# British Literature# Adult# Adult Fiction# Audiobook", "9780000000000", "English", 562, 1314 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2573, 371, "Knife of Dreams", "Knife of Dreams", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Min Farshaw# Elayne Trakand# Aviendha# Siuan Sanche", new DateTime(2022, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 860, 803 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2574, 2575, "Forever Amber", "Forever Amber", "Charles II of England# Scotland and Ireland# Barbara Villiers# Amber St. Clare", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Romance# Historical# Classics# Historical Romance# British Literature# 17th Century# Banned Books# Chick Lit", "9780000000000", "English", 972, 229 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2575, 2576, "Alcoholics Anonymous", "Alcoholics Anonymous", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Self Help# Nonfiction# Psychology# Reference# Spirituality# Health# Philosophy# Religion# Inspirational# Mental Health", "9780000000000", "English", 576, 2576 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2576, 509, "The Ancestor's Tale: A Pilgrimage to the Dawn of Evolution", "The Ancestor's Tale: A Pilgrimage to the Dawn of Evolution", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science# Nonfiction# Evolution# Biology# History# Popular Science# Anthropology# Natural History# Atheism# Philosophy", "9780000000000", "English", 688, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2577, 2578, "The Known World", "The Known World", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# African American# Historical# Literature# Novels# Literary Fiction# Book Club# American# Race", "9780000000000", "English", 388, 160 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2578, 29, "Lord of Shadows", "Lord of Shadows", "Livia Blackthorn# Arthur Blackthorn# Helen Blackthorn# Tiberius Blackthorn# Emma Cordelia Carstairs# Julian Atticus Blackthorn# Mark Blackthorn# Cristina Rosales", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Urban Fantasy# Paranormal# Young Adult Fantasy# Fiction# Magic# Angels# Audiobook", "9780000000000", "English", 701, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2579, 293, "The Lord God Made Them All", "The Lord God Made Them All", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Animals# Biography# Memoir# Classics# Humor# Autobiography# Biography Memoir# British Literature# Short Stories", "9780000000000", "", 384, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2580, 2581, "Harry Potter and the Methods of Rationality", "Harry Potter and the Methods of Rationality", "Draco Malfoy# Severus Snape# Quirinus Quirrell# Minerva McGonagall# Neville Longbottom# Fred Weasley# George Weasley# Cedric Diggory# Harry James Potter-Evans-Verres# Bellatrix Black# Lesath Lestrange# Albus Dumbledore# Hermione Granger", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Fan Fiction# Philosophy# Science Fiction# Magic# Young Adult# Humor# Unfinished# Adventure", "10000000000000", "English", 2184, 2581 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2581, 2582, "Primed For Revenge", "Primed For Revenge", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Epic# Fiction", "B07ND3CFXM", "English", 210, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2582, 1112, "The Constant Gardener", "The Constant Gardener", "Tessa Quayle# Justin Quayle# Sandy Woodrow# Arnold Bluhm", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Africa# Espionage# Crime# Mystery Thriller# Suspense# Contemporary# Novels", "9780000000000", "English", 496, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2583, 2584, "A House Without Windows", "A House Without Windows", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Mystery Thriller# Fiction# Suspense# Dark# Abuse# Crime# Adult# Psychological Thriller", "10000000000000", "English", 0, 2584 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2584, 645, "Lioness Rampant", "Lioness Rampant", "Alanna of Trebond# Thom of Trebond# Coram Smythesson# George Cooper# Jonathan of Conte# Raoul of Goldenlake# Gareth of Naxen the Second (Gary)# Alex of Tirrigan# Duke Roger of Conte# Myles of Olau", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Young Adult Fantasy# Romance# High Fantasy# Childrens# Teen", "9780000000000", "English", 384, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2585, 2586, "The Island", "The Island", "Alexis Fielding# Sofia Fielding", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Greece# Historical# Romance# Drama# Contemporary# Book Club# Novels# Chick Lit", "9780000000000", "English", 473, 2586 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2586, 37, "Her Fearful Symmetry", "Her Fearful Symmetry", "Elspeth Noblin# Edwina Noblin# Julia Poole# Valentina Poole# Robert Fanshawe# Jack Poole# Martin Wells# Marijke Wells# Jessica Bates# James Bates", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Paranormal# Mystery# Ghosts# Contemporary# Adult Fiction# Supernatural# Adult# Magical Realism", "9780000000000", "English", 406, 2587 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2587, 131, "Snuff", "Snuff", "Cassie Wright# Sheila# Mr. 72# Mr. 137# Mr. 600", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Adult# American# Humor# Literature# Drama# Adult Fiction# Erotica", "9780000000000", "English", 208, 212 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2588, 2240, "The Largesse of the Sea Maiden", "The Largesse of the Sea Maiden", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Literary Fiction# Literature# Adult Fiction# Dark# Audiobook# Mystery# Adult# Drama", "9780000000000", "English", 207, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2589, 2590, "Altered Carbon", "Altered Carbon", "Takeshi Kovacs# Laurens Bancroft# Miriam Bancroft# Oumou Prescott# Lt. Kristen Ortega# Reileen Kawahara# Trepp# Curtis# Elias Ryker# Bautista# Irene Elliot", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Cyberpunk# Mystery# Noir# Crime# Science Fiction Fantasy# Thriller# Audiobook# Fantasy", "B000FBFMZ2", "English", 544, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2590, 2591, "The Emperor of All Maladies: A Biography of Cancer", "The Emperor of All Maladies: A Biography of Cancer", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Science# History# Medicine# Medical# Health# Biology# Audiobook# Biography# Popular Science", "10000000000000", "English", 571, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2591, 2592, "The Perfect Storm: A True Story of Men Against the Sea", "The Perfect Storm: A True Story of Men Against the Sea", "Bobby Shatford# Capt. Billy Tyne# Dale Murphy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Adventure# Biography# Nature# Survival# Historical# Science# Audiobook# Travel", "9780000000000", "English", 248, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2592, 2593, "Lord Foul's Bane", "Lord Foul's Bane", "Thomas Covenant", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Science Fiction Fantasy# Epic Fantasy# Science Fiction# Adventure# High Fantasy# Epic# Unfinished# Young Adult", "9780000000000", "English", 480, 2593 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2593, 2594, "The Declaration", "The Declaration", "Anna Covey# Mrs. Margaret Pincent# Peter Tomlinsin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Fiction# Romance# Fantasy# Teen# Futuristic# Post Apocalyptic# Adventure", "9780000000000", "English", 320, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2594, 2595, "Fatherland", "Fatherland", "Xavier March# Max Jaeger# Charlotte Maguire# Hermann Jost# Odilo Globocnik# Wilhelm Stuckart# Pili March# Karl Krebs# Artur Nebe# Rudolf Halder# Henry Nightingale# Josef Bühler", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Thriller# Alternate History# Mystery# Crime# Science Fiction# Historical# Dystopia# War", "9780000000000", "English", 380, 392 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2595, 2596, "A Princess of Mars", "A Princess of Mars", "Science Fiction# Fantasy# Classics# Fiction# Adventure# Science Fiction Fantasy# Pulp# Romance# Audiobook# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 2596 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2596, 2597, "Stalking Jack the Ripper", "Stalking Jack the Ripper", "Historical Fiction# Young Adult# Mystery# Historical# Horror# Romance# Fiction# Audiobook# Thriller# Mystery Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 909 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2597, 157, "The Children Act", "The Children Act", "Fiona Maye# Adam Henry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# British Literature# Novels# Audiobook# Adult Fiction# Book Club# Religion# Adult", "9780000000000", "English", 221, 2009 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2598, 542, "Devil May Cry", "Devil May Cry", "Sin of Sumeria# Katra Agrotera# Xypher Oneroi Skotos# Xirena# Simi# Artemis Agrotera# Acheron Ash Parthenopaeus# Zakar of Sumeria# Goddess Themis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Mythology# Adult# Demons# Fiction", "9780000000000", "English", 320, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2599, 698, "Ghost Town", "Ghost Town", "Claire Danvers# Monica Morrell# Michael Glass# Eve Rosser", new DateTime(2022, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Urban Fantasy# Romance# Supernatural# Paranormal Romance# Fiction# Teen", "9780000000000", "English", 335, 1409 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2600, 982, "Tipping the Velvet", "Tipping the Velvet", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# LGBT# Romance# Historical# Queer# Lesbian# Adult# Victorian# Adult Fiction", "10000000000000", "English", 472, 2601 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2601, 645, "Squire", "Squire", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Adventure# High Fantasy# Childrens# Teen# Science Fiction Fantasy", "10000000000000", "English", 400, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2602, 969, "Changes", "Changes", "Thomas Raith# Molly Carpenter# Susan Rodriguez# Bob (Dresden Files)# Toot-toot# Ebenezer McCoy# Sanya# Captain Anastasia Luccio# Karrin Murphy# Harry Dresden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Fiction# Mystery# Paranormal# Magic# Vampires# Audiobook# Supernatural# Science Fiction Fantasy", "9780000000000", "English", 438, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2603, 2604, "Syrian Brides", "Syrian Brides", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Contemporary# Cultural# Literary Fiction# Asia# Chick Lit# Womens", "9780000000000", "English", 134, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2604, 2605, "The Day Jesus Rode Into Croydon", "The Day Jesus Rode Into Croydon", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Mystery", "9780000000000", "English", 440, 2605 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2605, 2606, "Bel-Ami", "Bel-Ami", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.85", " Alev Özgüner\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2606, 2607, "Batman: Year One", "Batman: Year One", "4.22", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Dennis ONeil (Introduction)", " Todd Klein (Letterer)", " Richmond Lewis (Colorist)", 0, 2607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2607, 667, "Wintersmith", "Wintersmith", "Tiffany Aching# Nac Mac Feegle# Granny Weatherwax# DEATH", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Humor# Magic# Comedy# Science Fiction Fantasy# Witches# Childrens# Audiobook", "9780000000000", "English", 325, 2608 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2608, 2609, "حول العالم في 200 يوم", "حول العالم في 200 يوم", "Dalai Lama XIV# أحمد عرابي", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Travel# Nonfiction# Literature# History# Adventure# Unfinished# Biography# Egypt# Memoir# Short Stories", "10000000000000", "Arabic", 604, 1526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2609, 2610, "رباعيات صلاح جاهين", "رباعيات صلاح جاهين", "Poetry# Literature# Classics# Anthologies# Egypt# Nonfiction# Short Stories# Inspirational# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "Arabic", "4.41", 0, 1890 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2610, 2611, "Blood in the Skies", "Blood in the Skies", "Wing Commander Elizabeth Steele# Amartya Ray# Lord Burkhalter# Nakaaya Molekane# Mwai# Sarah Wren# Gentleman Jack Wolfe# Herr Krueger# Herr Vanderberg# Herr Hewes# Professor Djebar# Group Captain Giyorgis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Steampunk# Fantasy# Science Fiction# Adventure# Fiction# Post Apocalyptic# Young Adult# Zombies# Dystopia", "9780000000000", "English", 266, 2611 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2611, 2612, "الأسود يليق بك", "الأسود يليق بك", "Novels# Romance# Fiction# Romantic# Literature# Love# Drama# Algeria", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "Arabic", "3.66", 0, 57 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2612, 1953, "The Mote in God's Eye", "The Mote in God's Eye", "Science Fiction# Fiction# Science Fiction Fantasy# Space Opera# Aliens# Fantasy# Audiobook# Classics# Space# Speculative Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 2613 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2613, 2614, "North of Beautiful", "North of Beautiful", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Realistic Fiction# Fiction# Teen# Chick Lit# High School# Coming Of Age# Young Adult Contemporary", "9780000000000", "English", 373, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2614, 2615, "Calvin and Hobbes", "Calvin and Hobbes", "Comics# Humor# Graphic Novels# Fiction# Childrens# Comedy# Graphic Novels Comics# Comic Book# Classics# Comic Strips", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.6", 0, 597 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2615, 2616, "The Drowned World", "The Drowned World", "Science Fiction# Fiction# Post Apocalyptic# Dystopia# Fantasy# Apocalyptic# Novels# Speculative Fiction# Thriller# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.4", 0, 583 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2616, 2617, "The Rise of Mallory", "The Rise of Mallory", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# New Adult# Amazon# Time Travel# Paranormal# Adventure", "9780000000000", "English", 242, 2617 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2617, 2618, "Mack", "Mack", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Fantasy# Dark# Contemporary# Mystery# Ghosts# Supernatural# Erotica", "9780000000000", "English", 0, 2618 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2618, 2485, "The Chronicle of Sapta Sindhu", "The Chronicle of Sapta Sindhu", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "War# Iran# India# Romance# Pakistan# Love# Mythology# Historical Fiction# Fiction# Historical", "B00AGUR6FG", "English", 489, 1481 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2619, 645, "The Woman Who Rides Like a Man", "The Woman Who Rides Like a Man", "Alanna of Trebond# Coram Smythesson# George Cooper# Jonathan of Conte# Myles of Olau# Ali Mukhtab# Ishak# Halef Seif", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Young Adult Fantasy# Romance# High Fantasy# Childrens# Teen", "9780000000000", "English", 284, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2620, 2621, "The Killer Inside Me", "The Killer Inside Me", "Lou Ford# Joyce Lakeland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Crime# Mystery# Noir# Thriller# Horror# Classics# Mystery Thriller# Novels# Suspense", "9780000000000", "English", 244, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2621, 2622, "Pilgrim at Tinker Creek", "Pilgrim at Tinker Creek", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Nature# Memoir# Essays# Classics# Philosophy# Science# Environment# Spirituality# Biography", "9780000000000", "English", 288, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2622, 1805, "الفيل الأزرق", "الفيل الأزرق", "مايا# عوني# يحيي راشد# د.سامح# د.كيلاني# عم سيد# شريف الكردي# نائل# لبني# خديجة# نيجوزي# د.صفاء", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Horror# Mystery# Literature# Fantasy# Psychology# Crime# Thriller# Suspense", "9790000000000", "Arabic", 385, 1526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2623, 2624, "\"The Walking Dead", "\"The Walking Dead", " Charles Adlard", new DateTime(2022, 4, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, " Frank Darabont (Teleplay)", " Andreas Mergenthaler", " Tony Moore (Illustrator)", 0, 2302 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2624, 2625, "A Fraction of the Whole", "A Fraction of the Whole", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Australia# Novels# Contemporary# Humor# Literature# Literary Fiction# Family# Philosophy# Unfinished", "9780000000000", "English", 530, 2024 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2625, 1364, "Lodestar", "Lodestar", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Fiction# Adventure# Childrens# Young Adult Fantasy# Magic# Action# Contemporary", "10000000000000", "English", 688, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2626, 914, "The Darkest Hour", "The Darkest Hour", "Graystripe# Sandstorm# Whitestorm# Dustpelt# Darkstripe# Longtail# Willowpelt# Mousefur# Frostfur# Goldenflower# Speckletail# One-eye# Dappletail# Runningnose# Tallstar# Blackfoot# Boulder# Smallear# Brackenfur# Cinderpelt# Littlecloud# Deadfoot# Barkface# Onewhisker# Mudfur# Blackclaw# Stonefur# Mistyfoot# Loudbelly# Firestar# Tigerstar# Brightpaw# Thornpaw# Tallpoppy# Fernpaw# Ashpaw# Russetfur# Jaggedtooth# Cedarpaw# Rowanpaw# Heavystep# Dawnpaw# Shadepelt# Mosspelt# Bramblepaw# Cloudtail# Tawnypaw# Brightheart# Oakfur# Leopardstar# Stormpaw# Featherpaw# Scourge# Bone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Animals# Fiction# Middle Grade# Childrens# Young Adult# Adventure# Cats# Animal Fiction# Action", "9780000000000", "English", 315, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2627, 2628, "Pachinko", "Pachinko", "Daisuke Totoyama# Hoonie Kim# Yangjin Kim# Sunja Kim# Baek Isak# Koh Hansu# Yoseb Baek# Kyunghee Baek# Noa Baek# Mozasu Baek# Kim# Tamaguchi# Goro# Akiko# Yumi# Mieko# Bingo# Hideo Takano# Solomon Baek# Risa Iwamura# Koichi# Ume# Haruki Totoyama# Ayame", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Japan# Asia# Audiobook# Literary Fiction# Adult# Novels# Asian Literature", "10000000000000", "English", 496, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2628, 2629, "Ordinary People", "Ordinary People", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Contemporary# Psychology# Young Adult# Novels# Literature# Family# School# Read For School", "10000000000000", "English", 263, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2629, 7, "Homage to Catalonia", "Homage to Catalonia", "History# Nonfiction# Politics# Classics# War# Memoir# Biography# Spain# Literature# Autobiography", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 2630 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2630, 1030, "My Blood Approves", "My Blood Approves", "Alice Bonham# Milo Bonham# Peter Townsend# Jack Townsend (My Blood Approves)# Ezra Townsend# Mae Townsend# Jane (My Blood Approves)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Romance# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Teen", "9780000000000", "English", 278, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2631, 2632, "Beneath a Scarlet Sky", "Beneath a Scarlet Sky", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# World War II# Historical# War# Italy# Audiobook# Book Club# Adult# Holocaust", "9780000000000", "English", 513, 1873 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2632, 2633, "Ocean Sea", "Ocean Sea", "Fiction# Italian Literature# Italy# Contemporary# Novels# Magical Realism# Literature# Literary Fiction# Drama# Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 183 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2633, 2634, "Notice Me", "Notice Me", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Young Adult# Fiction# New Adult# Adult# Novels# Love Story# Teen# Middle Grade# Music", "9780000000000", "English", 266, 2075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2634, 2635, "An Instance of the Fingerpost", "An Instance of the Fingerpost", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Mystery# Historical# Crime# Historical Mystery# Mystery Thriller# British Literature# Thriller# Novels", "9780000000000", "English", 691, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2635, 2636, "Sobre héroes y tumbas", "Sobre héroes y tumbas", "Martín Castillo# Alejandra Vidal Olmos# Fernando Vidal Olmos# Bruno# Pancho# tío Bebe# Humberto J. DArcángelo# Buchich# Chichín", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Latin American# Spanish Literature# Novels# Literature# Latin American Literature# 20th Century# Contemporary# Literary Fiction", "9790000000000", "Spanish", 547, 2636 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2636, 351, "The Informers", "The Informers", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Short Stories# Thriller# Mystery# Dark# Contemporary# American# Literature# Crime# Novels", "9780000000000", "English", 240, 2637 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2637, 2638, "You", "You", "Joe Goldberg# Guinevere Beck", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Contemporary# Mystery Thriller# Adult# Audiobook# Suspense# Horror# Crime", "9780000000000", "English", 422, 1379 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2638, 2206, "The Room", "The Room", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Thriller# Dark# Drama# Mystery# Novels# Contemporary# Adult# Psychological Thriller", "9780000000000", "English", 288, 2206 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2639, 2640, "La catedral del mar", "La catedral del mar", "Joan# Arnau# Guillem# Aladis# Mar (Ildefonso Falcones)", new DateTime(2022, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Spain# Spanish Literature# Medieval# Roman# Novels# Romance# Audiobook", "9790000000000", "Spanish", 672, 2640 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2640, 2641, "\"Y: The Last Man", "\"Y: The Last Man", "4.08", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " José Marzán Jr. (Illustrator)", " Goran Sudžuka (Illustrator)", " Pia Guerra (Illustrator)", 0, 2641 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2641, 2642, "Kiss an Angel", "Kiss an Angel", "Daisy Devreaux# Alex Markov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Chick Lit# Humor# Adult# Fiction# New Adult# Love# Marriage", "9780000000000", "English", 384, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2642, 2643, "பொன்னியின் செல்வன்", "பொன்னியின் செல்வன்", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Classics# Indian Literature# Historical# Novels# India# Fantasy# Mystery# Adventure", "10000000000000", "Tamil", 1452, 2643 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2643, 960, "Shades of Earth", "Shades of Earth", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Romance# Fantasy# Fiction# Space# Mystery# Aliens# Adventure", "9780000000000", "English", 369, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2644, 346, "The Rose Society", "The Rose Society", "Adelina Amouteru# Teren Santoro# Enzo Valenciano# Magiano# Violetta# Sergio# Queen Maeve# Raffaele Laurent", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Magic# Young Adult Fantasy# Fiction# High Fantasy# Science Fiction# Paranormal", "9780000000000", "English", 398, 496 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2645, 1141, "United We Spy", "United We Spy", "Macey McHenry# Cammie Morgan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Romance# Contemporary# Espionage# Fiction# Adventure# Action# Teen# Chick Lit", "9780000000000", "English", 296, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2646, 1550, "Twice Bitten", "Twice Bitten", "Luc (Chicagoland Vampires)# Caroline Merit Merit# Morgan Greer# Ethan Sullivan# Mallory Carmichael# Catcher Bell# Jeff Christopher# Celina Desaulniers# Lindsey# Jonah# Chuck Merit# Noah Beck# Nicholas Brickenridge# Lacey Sheridan# Gabriel Keen# Fallon Keene# Malik Washington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Adult# Magic# Supernatural# Shapeshifters", "9780000000000", "English", 355, 2647 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2647, 2648, "Wir Kinder vom Bahnhof Zoo", "Wir Kinder vom Bahnhof Zoo", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "German", "4.21", " Horst Rieck\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2648, 2649, "Paradise", "Paradise", "Meredith Bancroft# Matthew Farrell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Fiction# Historical Romance# Chick Lit# Adult# Historical# Romantic Suspense# Historical Fiction", "9780000000000", "English", 709, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2649, 1133, "Airhead", "Airhead", "Emerson Watts# Nikki Howard# Lulu Collins# Gabriel Luna# Christopher Maloney# Whitney Robertson# Frida Watts# Brandon Stark# Lindsey Jacobs# Robert Stark# Justin Bay# Rebecca Lowell# Kelly Foster-Fielding", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Chick Lit# Contemporary# Fiction# Science Fiction# Teen# Fantasy# Realistic Fiction# Mystery", "9780000000000", "English", 337, 2650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2650, 1008, "The Dovekeepers", "The Dovekeepers", "Aziza# Yael# Revka# Shirah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Magical Realism# Book Club# Adult Fiction# Jewish# Adult# Israel# Audiobook", "9780000000000", "English", 504, 514 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2651, 2559, "Relic", "Relic", "Horror# Thriller# Mystery# Fiction# Science Fiction# Mystery Thriller# Suspense# Adventure# Crime# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 484 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2652, 2653, "No Longer Human", "No Longer Human", "Fiction# Japan# Japanese Literature# Classics# Literature# Novels# Asia# Asian Literature# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2653, 1751, "Revolution", "Revolution", "Andi Alpers# Alexandrine Paradis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Historical# Fiction# Time Travel# Fantasy# Contemporary# Romance# Teen# France", "9780000000000", "English", 512, 62 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2654, 153, "The First Man in Rome", "The First Man in Rome", "Gaius Marius# Lucius Cornelius Sulla", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Italy# Roman# Ancient History# Novels# War# Ancient# Audiobook", "9780000000000", "English", 1076, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2655, 1995, "The Secret of the Nagas", "The Secret of the Nagas", "Shiva# Sati# Nandi# Veerbhadra# Bŗahaspati# Daksha# Parvateshvar# Ayurvati# Ganesh# Bhagirath", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mythology# Fantasy# Indian Literature# Historical Fiction# India# Amish# Novels# Adventure# Thriller", "B008593PQO", "English", 398, 1995 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2656, 2657, "Unwifeable: A Memoir", "Unwifeable: A Memoir", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Memoir# Nonfiction# Humor# Biography Memoir# Womens# Biography# Feminism# Autobiography# Relationships# New York", "9780000000000", "English", 321, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2657, 88, "Succubus on Top", "Succubus on Top", "Georgina Kincaid# Jerome# Doug Sato# Cody# Seth Mortensen# Hugh Mitchell# Carter# Bastien Moreau# Maddie Sato# Sol# Peter Gwel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Romance# Paranormal Romance# Vampires# Demons# Adult# Angels# Supernatural", "9780000000000", "English", 314, 2658 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2658, 969, "Grave Peril", "Grave Peril", "Thomas Raith# Susan Rodriguez# Bob (Dresden Files)# Michael Carpenter# Leanansidhe# Charity Carpenter# Justine# Karrin Murphy# Harry Dresden# Father Anthony Forthill# Bianca St. Claire# Mavra (Dresden Files)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Mystery# Fiction# Paranormal# Magic# Audiobook# Vampires# Supernatural# Science Fiction Fantasy", "9780000000000", "English", 378, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2659, 1197, "Rodrick Rules", "Rodrick Rules", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Childrens# Realistic Fiction# Middle Grade# Graphic Novels# Young Adult# Comedy# Comics# Contemporary", "9780000000000", "English", 224, 1197 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2660, 2661, "Growth of the Soil", "Growth of the Soil", "Isak# Inger# Brede Olsen# Geissler", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Novels# Scandinavian Literature# Nobel Prize# Drama# 20th Century# Mystery# Thriller", "9780000000000", "English", 435, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2661, 131, "Adjustment Day", "Adjustment Day", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Contemporary# Dystopia# Adult# Adult Fiction# Dark# Thriller# Cult Classics# Drama", "9780000000000", "English", 316, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2662, 2663, "Undeniable", "Undeniable", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Dark# Contemporary# Erotica# Contemporary Romance# Adult# Abuse# New Adult# Erotic Romance# Drama", "10000000000000", "English", 219, 2663 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2663, 2664, "The Hating Game", "The Hating Game", "Lucy Hutton# Joshua Templeman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Chick Lit# Contemporary Romance# Adult# Fiction# New Adult# Audiobook# Humor# Adult Fiction", "10000000000000", "English", 387, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2664, 1027, "Fool", "Fool", "Regan# Pocket# Drool# Cordelia# Goneril# Leir of Britain", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Humor# Fiction# Fantasy# Comedy# Historical Fiction# Audiobook# Historical# Adult# Adult Fiction# Retellings", "9780000000000", "English", 311, 2665 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2665, 2666, "Earth Abides", "Earth Abides", "Isherwood Williams# Emma Williams# Joey Williams", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Post Apocalyptic# Apocalyptic# Dystopia# Classics# Science Fiction Fantasy# Speculative Fiction# Fantasy# Survival", "9780000000000", "English", 345, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2666, 103, "The Invention of Wings", "The Invention of Wings", "Hetty Handful” Grimke# Sarah Moore Grimké# Charlotte Grimke# Angelina Grimké", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Book Club# Audiobook# Adult Fiction# Adult# Novels# African American# Southern", "9780000000000", "English", 384, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2667, 2668, "\"The Dark Tower Series Collection: The Gunslinger", "\"The Dark Tower Series Collection: The Gunslinger", " The Dark Tower", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Song of Susannah", " Wolves of the Calla", " Wizard and Glass", 0, 230 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2668, 2669, "The Watsons Go to Birmingham - 1963", "The Watsons Go to Birmingham - 1963", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Fiction# Middle Grade# Childrens# Historical# School# African American# Family# Classics", "9780000000000", "English", 224, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2669, 2670, "Daemon", "Daemon", "Matthew Sobol", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Thriller# Cyberpunk# Mystery# Audiobook# Technology# Crime# Science Fiction Fantasy# Fantasy", "9780000000000", "English", 632, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2670, 512, "The Confusion", "The Confusion", "Eliza# Jack Shaftoe# Enoch Root# Gottfried Wilhelm Leibniz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Science Fiction# Fantasy# Historical# Adventure# Literature# Science Fiction Fantasy# Speculative Fiction# Alternate History", "9780000000000", "English", 815, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2671, 2672, "\"White Witch", "\"White Witch", "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Fiction# Demons# Supernatural# Paranormal Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.34", 0, 2672 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2672, 2673, "Tarzan of the Apes", "Tarzan of the Apes", "Tarzan# Jane Porter# Archimedes Q. Porter# Samuel T. Philander# William Cecil Clayton# Esmeralda (Jane Porters governess)# John Clayton# Lord Greystoke# Alice Rutherford Clayton# Lady Greystoke# Black Michael# Captain Billings# Kerchak# Kala# Tantor# Tublat# Neeta# Histah# Bolgani# Numa# Sheeta# Horta# Pisah# Kulonga# Mbonga# Bara# Arn# Dango# Monu# Terkoz# Thaka# Mungo# Tana# Gunto# Mirando# Munango-Keewati# Snipes# Porky Evans# Jane Porter# Sr.# King# Peter# Tom# Bill# Tarrant# Hazel Strong# Robert Canler# Lieutenant DArnot# Lieutenant Charpentier# Captain Dufranne# Sabor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Adventure# Fantasy# Africa# Pulp# Science Fiction# Action# Novels# Literature", "9780000000000", "English", 324, 2611 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2673, 2241, "The Name of the Star", "The Name of the Star", "Jerome# Aurora Rory Deveaux# Julianne Jazza Benton# Stephen Dene# Bhuvana “Boo” Chodhari# Callum Mitchell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Fantasy# Paranormal# Ghosts# Fiction# Horror# Supernatural# Historical Fiction# Urban Fantasy", "9780000000000", "English", 372, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2674, 2675, "\"Farewell", "\"Farewell", "Mystery# Fiction# Crime# Noir# Classics# Detective# Mystery Thriller# American# Thriller# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 1191 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2675, 434, "Petals on the Wind", "Petals on the Wind", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Young Adult# Romance# Gothic# Drama# Thriller# Mystery# Adult# Classics", "9780000000000", "English", 439, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2676, 927, "For a Few Demons More", "For a Few Demons More", "Rachel Morgan# Ivy Tamwood# Jenks# Trent Kalamack# Algaliarept# Kisten Felps# Piscary# David Hue# Detective Glenn# Ceri# Newt# Saladan# Tom Bansen# Minias# Quen# Captain Edden", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Fiction# Demons# Romance# Supernatural", "9780000000000", "English", 456, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2677, 1306, "The Island of Doctor Moreau", "The Island of Doctor Moreau", "Dr. Moreau# Dr. Montgomery# Edward Prendick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Science Fiction# Fiction# Horror# Fantasy# Literature# Science Fiction Fantasy# 19th Century# Novels# Adventure", "9780000000000", "English", 153, 285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2678, 1836, "In Her Shoes", "In Her Shoes", "Rose Feller# Maggie Feller# Simon Stein# Ella Hirsch# Lewis Feldman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Fiction# Romance# Contemporary# Adult Fiction# Adult# Humor# Womens Fiction# Family# Novels", "9780000000000", "", 537, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2679, 2680, "The Boxcar Children", "The Boxcar Children", "Childrens# Fiction# Mystery# Classics# Young Adult# Middle Grade# Chapter Books# Adventure# Juvenile# Realistic Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 1192 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2680, 667, "Making Money", "Making Money", "Moist von Lipwig# Sam Vimes# Cut Me Own Throat Dibbler# Havelock Vetinari# Adora Belle Dearheart# Mr. Fusspot# Cosmo Lavish# Heretofore# Mavolio Bent# Hubert Turvy# Igor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Comic Fantasy# Adult# Novels# High Fantasy", "9780000000000", "English", 394, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2681, 2682, "Genghis: Birth of an Empire", "Genghis: Birth of an Empire", "Genghis Khan# Börte Üjin# Yesugei# Bekter# Khasar# Kachiun# Temüge# Hoelun", new DateTime(2022, 3, 8, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Historical Fiction# Fiction# Historical# Fantasy# Asia# War# Adventure# Audiobook# Military Fiction# Action", "9780000000000", "English", 528, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2682, 2683, "The Leopard", "The Leopard", "Fiction# Classics# Historical Fiction# Italy# Italian Literature# Literature# Novels# Historical# 20th Century# Literary Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.01", 0, 663 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2683, 2684, "Mrs. Mike", "Mrs. Mike", "Historical Fiction# Fiction# Romance# Canada# Classics# Historical# Young Adult# Adventure# Adult Fiction# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2684, 656, "The Mad Ship", "The Mad Ship", "Althea Vestrit# Ronica Vestrit# Keffria Vestrit# Kyle Haven# Wintrow Vestrit# Malta Vestrit# Vivacia# Paragon# Brashen Trell# Amber (Liveship Traders)# Reyn Khuprus# Kennit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Dragons# High Fantasy# Science Fiction Fantasy# Adventure# Magic# Epic# Pirates", "9780000000000", "English", 906, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2685, 2686, "Out of the Dust", "Out of the Dust", "Billie Jo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Poetry# Young Adult# Fiction# Middle Grade# Childrens# Historical# School# Classics# Juvenile", "9780000000000", "English", 227, 106 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2686, 375, "Maus II: A Survivor's Tale: And Here My Troubles Began", "Maus II: A Survivor's Tale: And Here My Troubles Began", "Vladek Spiegelman# Anja Spiegelman# Art Spiegelman# Mala Spiegelman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Comics# Nonfiction# History# Memoir# Holocaust# Biography# Historical# War# Graphic Novels Comics", "9780000000000", "English", 144, 2687 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2687, 1330, "Blood of Elves", "Blood of Elves", "Fantasy# Fiction# Audiobook# High Fantasy# Polish Literature# Adult# Magic# Adventure# Epic Fantasy# Science Fiction Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.11", 0, 1811 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2688, 2689, "UnEnchanted", "UnEnchanted", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fairy Tales# Urban Fantasy# Teen# Fiction# Retellings# Romance# Adventure# Contemporary", "10000000000000", "English", 235, 2689 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2689, 2690, "Persona normal", "Persona normal", "", new DateTime(2022, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Young Adult# Contemporary# Spanish Literature# Fiction# Coming Of Age# Drama", "9790000000000", "Spanish", 216, 2690 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2690, 2691, "The Audacity of Hope: Thoughts on Reclaiming the American Dream", "The Audacity of Hope: Thoughts on Reclaiming the American Dream", "Barack Obama", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Politics# Biography# Memoir# Autobiography# Audiobook# History# Biography Memoir# Presidents# African American", "9780000000000", "English", 375, 320 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2691, 2692, "The Tombs of Atuan", "The Tombs of Atuan", "Fantasy# Fiction# Young Adult# Science Fiction Fantasy# Classics# Magic# High Fantasy# Science Fiction# Adventure# Epic Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 1069 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2692, 2693, "\"That Was Then", "\"That Was Then", "Young Adult# Fiction# Classics# Coming Of Age# Teen# Contemporary# Realistic Fiction# School# Childrens# High School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 1016 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2693, 112, "Cell", "Cell", "Johnny# Clayton Riddell# Tom McCourt# Alice Maxwell# Jordan# American Law Enforcement# Charles Ardai", new DateTime(2022, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Horror# Fiction# Zombies# Thriller# Science Fiction# Post Apocalyptic# Fantasy# Apocalyptic# Dystopia# Suspense", "9780000000000", "English", 449, 2694 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2694, 2695, "Of Poseidon", "Of Poseidon", "Emma McIntosh# Galen Forza# Rayna Samantha Forza# Rachel# Grom# Toraf# Dr. Milligan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Mermaids# Paranormal# Mythology# Paranormal Romance# Fiction# Supernatural# Young Adult Fantasy", "9780000000000", "English", 324, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2695, 2696, "Tampa", "Tampa", "Celeste Price# Jack Patrick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Crime# Adult# Dark# Thriller# Mystery# Adult Fiction# Literary Fiction# Novels", "9780000000000", "", 272, 844 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2696, 2697, "Dueling Fates", "Dueling Fates", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B08BTH488Q", "", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2697, 2698, "\"Sherlock Holmes: The Complete Novels and Stories", "\"Sherlock Holmes: The Complete Novels and Stories", "Classics# Mystery# Fiction# Short Stories# Crime# Detective# Literature# Historical Fiction# Mystery Thriller# British Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.47", 0, 2698 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2698, 901, "Two Boys Kissing", "Two Boys Kissing", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# LGBT# Contemporary# Romance# Fiction# Queer# Realistic Fiction# Gay# M M Romance# Teen", "9780000000000", "English", 200, 367 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2699, 454, "Mark of the Lion Trilogy", "Mark of the Lion Trilogy", "Atretes# Rizpah# Marcus Lucianus Valerian# Julia Valerian# Hadassah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian Fiction# Christian# Historical Fiction# Fiction# Romance# Historical# Christianity# Christian Historical Fiction# Biblical Fiction# Religion", "9780000000000", "English", 1468, 2700 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2700, 512, "The System of the World", "The System of the World", "Isaac Newton# Eliza# Jack Shaftoe# Enoch Root# Daniel Waterhouse# Mr. Orney# Damba# Peter Hoxton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Science Fiction# Fantasy# Historical# Speculative Fiction# Science Fiction Fantasy# Alternate History# Literature# Adventure", "9780000000000", "English", 908, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2701, 530, "Keeping the Moon", "Keeping the Moon", "Morgan Gatewood# Isabel# Colie Sparks# Mira Sparks# Norman Carswell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Chick Lit# Realistic Fiction# Teen# Young Adult Contemporary# Coming Of Age# High School", "9780000000000", "English", 228, 119 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2702, 497, "The Eternity Cure", "The Eternity Cure", "Allison Sekemoto# Stick# Kanin# Jackal# Zeke Crosse", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Paranormal# Dystopia# Romance# Urban Fantasy# Post Apocalyptic# Supernatural# Fiction", "9780000000000", "English", 434, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2703, 530, "What Happened to Goodbye", "What Happened to Goodbye", "Opal# David Wade# McLean Sweet# Gus Sweet", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Fiction# Realistic Fiction# Chick Lit# Teen# Young Adult Contemporary# High School# Young Adult Romance", "9780000000000", "English", 416, 2704 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2704, 2705, "Sweet Dreams", "Sweet Dreams", "Tatum Tate Jackson# Lauren Grahame", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Romantic Suspense# Suspense# Adult# Mystery# Erotica# Chick Lit# Fiction", "B004XTTSG6", "English", 657, 1481 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2705, 157, "The Comfort of Strangers", "The Comfort of Strangers", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Contemporary# British Literature# Literature# Suspense# Literary Fiction# Novels# Mystery# Italy", "9780000000000", "English", 128, 15 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2706, 1419, "A Grimm Warning", "A Grimm Warning", "Fantasy# Middle Grade# Fairy Tales# Fiction# Childrens# Young Adult# Adventure# Magic# Audiobook# Retellings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.52", 0, 256 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2707, 564, "Austenland", "Austenland", "Jane Hayes# Great-Aunt Carolyn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Fiction# Chick Lit# Contemporary# Adult# Adult Fiction# Humor# Audiobook# Young Adult# Contemporary Romance", "9780000000000", "English", 197, 448 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2708, 915, "Erak's Ransom", "Erak's Ransom", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Medieval# Teen# Childrens# High Fantasy", "9780000000000", "English", 441, 2709 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2709, 2092, "A Merciful Secret", "A Merciful Secret", "Mercy Kilpatrick# Truman Daly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Romantic Suspense# Fiction# Thriller# Crime# Suspense# Romance# Contemporary# Mystery Thriller# Drama", "B06Y5MTNMQ", "English", 332, 2092 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2710, 2711, "Slow Brewing Tea", "Slow Brewing Tea", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Drama# Novels# Epic", "B08CTPV2J9", "", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2711, 1425, "The Crimson Crown", "The Crimson Crown", "Fire Dancer# Han Alister# Princess Raisa ana’Marianna# Micah Bayar# Amon Byrne# Cat Tyburn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Romance# High Fantasy# Young Adult Fantasy# Fiction# Adventure# Epic Fantasy# Science Fiction Fantasy", "9780000000000", "English", 598, 918 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2712, 2713, "The Shock Doctrine: The Rise of Disaster Capitalism", "The Shock Doctrine: The Rise of Disaster Capitalism", "Augusto Pinochet# Milton Friedman# Ewen Cameron# Margaret Thatcher# Lech Wałęsa# Boris Yeltsin# Vladimir Lenin# Mikhail Gorbachev# Hajji Suharto# Nelson Mandela# Thabo Mbeki# Jeffrey Sachs", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Politics# Economics# History# Sociology# Philosophy# Business# Political Science# Society# Social Justice", "9780000000000", "English", 558, 2713 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2713, 506, "Blood of the Fold", "Blood of the Fold", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Magic# Romance# Adventure# Epic# Adult", "9780000000000", "English", 623, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2714, 1687, "City of Golden Shadow", "City of Golden Shadow", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Fiction# Cyberpunk# Science Fiction Fantasy# Speculative Fiction# Epic Fantasy# Adventure# Audiobook# Epic", "9780000000000", "English", 780, 309 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2715, 2716, "The Motorcycle Diaries: Notes on a Latin American Journey", "The Motorcycle Diaries: Notes on a Latin American Journey", "Nonfiction# Travel# Biography# History# Memoir# Politics# Autobiography# Adventure# Biography Memoir# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.79", 0, 2716 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2716, 2717, "A Constellation of Vital Phenomena", "A Constellation of Vital Phenomena", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# War# Russia# Literary Fiction# Historical# Contemporary# Adult Fiction# Novels# Literature", "9780000000000", "English", 416, 2717 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2717, 64, "Children of Dune", "Children of Dune", "Leto Atreides II# Muaddib# Stilgar# Vladimir Harkonnen# Duncan Idaho# Paul Atreides# Alia Atreides# Lady Jessica# Gurney Halleck", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Science Fiction Fantasy# Classics# Space Opera# Novels# Audiobook# Speculative Fiction# Epic", "9780000000000", "English", 408, 64 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2718, 87, "'Tis", "'Tis", "Frank McCourt", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Autobiography# Ireland# Biography Memoir# Irish Literature# History# Historical# New York", "9780000000000", "English", 495, 2719 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2719, 2720, "The Power of Habit: Why We Do What We Do in Life and Business", "The Power of Habit: Why We Do What We Do in Life and Business", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Self Help# Business# Personal Development# Productivity# Science# Audiobook# Leadership# Sociology", "9780000000000", "English", 375, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2720, 2721, "The Death of Bunny Munro", "The Death of Bunny Munro", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Contemporary# Novels# Drama# Music# Suspense# Literature# Mystery# Australia", "9780000000000", "English", 288, 1944 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2721, 343, "Mistborn Trilogy Boxed Set", "Mistborn Trilogy Boxed Set", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# Magic# High Fantasy# Science Fiction# Epic# Adventure# Adult", "9780000000000", "English", 2176, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2722, 833, "Without Remorse", "Without Remorse", "John Kelly# Emmet Ryan# John Clark", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Action# Espionage# Military Fiction# Suspense# Mystery# Adventure# Mystery Thriller# War", "9780000000000", "English", 750, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2723, 700, "Finding Audrey", "Finding Audrey", "Audrey Turner# Linus (divers)# Frank Turner# Felix Turner# Chris Turner# Ann Turner# Dr. Sarah", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Romance# Fiction# Mental Health# Chick Lit# Mental Illness# Audiobook# Realistic Fiction# Young Adult Contemporary", "9780000000000", "English", 286, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2724, 1949, "Use of Weapons", "Use of Weapons", "Cheradenine Zakalwe# Diziet Sma# Skaffen-Amstikaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Science Fiction Fantasy# Cultural# Fantasy# Space# War# Audiobook# Novels", "9780000000000", "English", 411, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2725, 2726, "Reunion", "Reunion", "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Supernatural# Fiction# Teen# Mystery# Chick Lit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 1643 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2726, 588, "The Hostile Hospital", "The Hostile Hospital", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Audiobook# Humor# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.97", 0, 17 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2727, 1730, "Poison Princess", "Poison Princess", "Evie Greene# Jackson Deveaux# Matthew Mat Zero Matto# Selena Lua# Finneas# Ogen# Death# Vincent and Violet# Joules# Gabriel (Arcana Chronicles)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Dystopia# Paranormal Romance# Urban Fantasy# Post Apocalyptic# Magic# Supernatural", "9780000000000", "English", 369, 21 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2728, 1067, "Forever Too Far", "Forever Too Far", "Rush Finlay# Blaire Wynn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Romance# Contemporary# Contemporary Romance# Young Adult# Erotica# Chick Lit# Adult# Fiction# Drama", "B00DAHSFYI", "English", 292, 1067 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2729, 1107, "The Necromancer", "The Necromancer", "Nicholas Flamel# Perenelle Flamel# Josh Newman# Sophie Newman# Sgàthach# the Warrior Maid# Dr. John Dee# Niten# Aoife", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Mythology# Adventure# Urban Fantasy# Young Adult Fantasy# Audiobook# Teen", "9780000000000", "English", 416, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2730, 2731, "In the Time of the Butterflies", "In the Time of the Butterflies", "Patria Mirabal de Gonzalez# Minerva Mirabal de Tavarez# Maria Teresa Mirabal de Guzman# Bélgica Adela Mirabal de Reyes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# School# Classics# Novels# Adult Fiction# Book Club# Latin American# Adult", "9780000000000", "English", 324, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2731, 2732, "Save Yourself", "Save Yourself", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Dark# Suspense# Mystery Thriller# Contemporary# Drama# Adult Fiction# Adult", "9780000000000", "English", 320, 215 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2732, 2733, "Lord of Light", "Lord of Light", "Mahasamatman# Yama# Ratri", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fantasy# Fiction# Science Fiction Fantasy# Mythology# Hugo Awards# Classics# Religion# Speculative Fiction# Novels", "9780000000000", "English", 296, 733 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2733, 2734, "Mystical Trash", "Mystical Trash", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Novels# Fiction# Epic", "B082PXVRTP", "", 202, 2734 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2734, 347, "The Memoirs of Sherlock Holmes", "The Memoirs of Sherlock Holmes", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.31", " Owen Dudley Edwards (Series Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2735, 32, "Anne's House of Dreams", "Anne's House of Dreams", "Anne Shirley# Gilbert Blythe# James Boyd (Captain Jim)# Cornelia (Bryant) Elliott# Leslie Moore# Owen Ford# Marshall Elliot# Susan Baker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Romance# Historical# Canada# Audiobook# Middle Grade", "9780000000000", "English", 227, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2736, 2621, "The Grifters", "The Grifters", "Roy Dillon# Moira Langtry# Lilly# Bobo Justus", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Crime# Noir# Mystery# Thriller# Novels# Suspense# Drama# Mystery Thriller# Hard Boiled", "9780000000000", "", 224, 1510 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2737, 2199, "Gormenghast", "Gormenghast", "Titus Groan# Steerpike# Dr. Alfred Prunesquallor# Gertrude Groan# Fuchsia Groan# Cora Groan# Clarice Groan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Classics# Gothic# Novels# Literature# Science Fiction Fantasy# 20th Century# Speculative Fiction# British Literature", "9780000000000", "English", 505, 2738 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2738, 238, "The Secret Hour", "The Secret Hour", "Jessica Day# Rex Greene# Jonathan Martinez# Melissa Blake# Desdêmona", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Science Fiction# Fiction# Urban Fantasy# Supernatural# Teen# Magic# Young Adult Fantasy", "9780000000000", "English", 297, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2739, 2740, "All Over But the Shoutin'", "All Over But the Shoutin'", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Memoir# Nonfiction# Biography# Biography Memoir# Southern# Autobiography# History# Poverty# Book Club# Family", "9780000000000", "English", 329, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2740, 2307, "The Gospel According to Jesus Christ", "The Gospel According to Jesus Christ", "Fiction# Religion# Historical Fiction# Literature# Portuguese Literature# Portugal# Nobel Prize# Novels# Classics# Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.29", 0, 127 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2741, 2742, "The Subtle Art of Not Giving a F*ck: A Counterintuitive Approach to Living a Good Life", "The Subtle Art of Not Giving a F*ck: A Counterintuitive Approach to Living a Good Life", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Self Help# Psychology# Audiobook# Personal Development# Philosophy# Business# Humor# Adult# Unfinished", "10000000000000", "English", 224, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2742, 1425, "The Warrior Heir", "The Warrior Heir", "Linda Downey# Leander Hastings# Jack Swift# Ellen Stephenson# Alicia (Leesha) Middleton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Fiction# Urban Fantasy# Young Adult Fantasy# Adventure# Teen# Romance# Paranormal", "9780000000000", "English", 426, 2743 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2743, 2744, "Vain", "Vain", "Ian Aberdeen# Sophie Price", new DateTime(2022, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Romance# New Adult# Contemporary# Young Adult# Contemporary Romance# Chick Lit# Fiction# Drama# Realistic Fiction# Love", "10000000000000", "English", 390, 2744 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2744, 2745, "Losing It", "Losing It", "Bliss Edwards# Cade Winston# Garrick Taylor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# College# Chick Lit# Young Adult# Adult# Fiction# Humor", "9780000000000", "English", 189, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2745, 2746, "Destined", "Destined", "Vampires# Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Urban Fantasy# Magic", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.04", 0, 683 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2746, 667, "Pyramids", "Pyramids", "Teppic# Dios# Ptraci# Maldito Bastardo# Mericet# Broncalo# Ptaclusp# Koomi# Teppicamon XVII", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Magic# Novels# Science Fiction# High Fantasy", "9780000000000", "English", 341, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2747, 2748, "Lectures on Faith", "Lectures on Faith", "Religion# Lds# Nonfiction# Church# Spirituality# Lds Non Fiction# Inspirational# Faith# Theology# Mormonism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.49", 0, 2748 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2748, 2749, "Touch of Frost", "Touch of Frost", "Gwen Frost# Daphne Cruz# Logan Quinn# Carson Callahan# Oliver Hector", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Mythology# Paranormal# Urban Fantasy# Magic# Romance# Supernatural# Mystery# Paranormal Romance", "9780000000000", "English", 350, 2749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2749, 2314, "Witch & Wizard", "Witch & Wizard", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.56", " Emily Raymond\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2750, 438, "Confess", "Confess", "Auburn Mason Reed# Owen Mason Gentry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Fiction# Contemporary Romance# Young Adult# Chick Lit# Adult# Audiobook# Drama", "9780000000000", "English", 320, 296 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2751, 2752, "Ordeal", "Ordeal", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal Romance# Paranormal# Romance# Fantasy# Poetry# Young Adult", "B0038BQIE0", "English", 215, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2752, 588, "The Carnivorous Carnival", "The Carnivorous Carnival", "Fiction# Young Adult# Childrens# Fantasy# Middle Grade# Mystery# Adventure# Audiobook# Humor# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 2753 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2753, 1006, "Piercing the Darkness", "Piercing the Darkness", "Sally Roe# Ben Cole", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian Fiction# Fiction# Christian# Fantasy# Thriller# Religion# Suspense# Supernatural# Spirituality# Christianity", "9780000000000", "English", 448, 1006 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2754, 667, "Jingo", "Jingo", "Nobby Nobbs# Carrot Ironfoundersson# Sam Vimes# Havelock Vetinari# Sybil Deidre Olgivanna Ramkin# DEATH# Angua von Überwald# Cheery Littlebottom# Fred Colon# Detritus# Reg Shoe", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Comedy# Science Fiction Fantasy# Audiobook# Comic Fantasy# War# High Fantasy# Novels", "9780000000000", "English", 461, 2755 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2755, 2039, "Queen of the Darkness", "Queen of the Darkness", "Jaenelle Angelline# Daemon Sadi SaDiablo# Saetan SaDiablo# Lucivar Yaslana# Surreal SaDiablo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Magic# Fiction# Dark Fantasy# High Fantasy# Paranormal# Science Fiction Fantasy# Witches# Epic Fantasy", "9780000000000", "English", 430, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2756, 500, "ESV Study Bible", "ESV Study Bible", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.78", " Wayne Grudem (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2757, 3, "Go Set a Watchman", "Go Set a Watchman", "Scout Finch# Atticus Finch# Aunt Alexandra# Henry Hank Clinton# Jack Finch", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# Audiobook# Historical# Adult# Adult Fiction# Literature# Literary Fiction# Novels", "9780000000000", "English", 278, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2758, 1289, "The Nanny Song", "The Nanny Song", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# New Adult# Contemporary# Adult# Contemporary Romance# Romance# Novels# Love Story# Chick Lit", "B07D1CQF66", "", 318, 2759 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2759, 2760, "History of the Peloponnesian War", "History of the Peloponnesian War", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.89", " Moses I. Finley (Introduction/Notes)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2760, 2761, "I Dream of Yellow Kites", "I Dream of Yellow Kites", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Thriller# Suspense# Mystery# Short Stories# Crime", "B01D3V68GW", "English", 99, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2761, 1559, "High-Rise", "High-Rise", "Robert Laing# Charlotte Melville# Richard Wilder# Anthony Royal# Helen Wilder# Anne Royal", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Thriller# Classics# Audiobook# Horror# Novels# British Literature# Literature", "9780000000000", "English", 208, 2762 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2762, 1107, "The Magician", "The Magician", "Nicholas Flamel# Perenelle Flamel# Josh Newman# Sophie Newman# Sgàthach# the Warrior Maid# Dr. John Dee", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Mythology# Adventure# Urban Fantasy# Young Adult Fantasy# Teen# Supernatural", "9780000000000", "English", 464, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2763, 2764, "Labyrinth", "Labyrinth", "Alice Tanner# Alaïs du Mas# Paul Authié# Bertrand Pelletier# Jehan Congost# Esclarmonde de Servian# Guy dEvreux# Guilhem du Mas# Marie-Cécile de lOradore# Oriane Congost-Pelletier# Sajhë de Servian# Will Franklin# Raymond-Roger Trencavel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Fantasy# Mystery# Historical# Thriller# France# Adventure# Adult# Romance", "9780000000000", "English", 515, 1190 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2764, 2765, "Phantom", "Phantom", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Romance# Fantasy# Historical# Horror# Retellings# Gothic# Classics# Adult Fiction", "9780000000000", "English", 468, 2765 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2765, 158, "The Complete Fairy Tales", "The Complete Fairy Tales", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fantasy# Short Stories# Fiction# Fairy Tales# Childrens# Literature# 19th Century# Classic Literature# British Literature", "9780000000000", "English", 144, 2766 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2766, 2767, "Trust: A New Beginning", "Trust: A New Beginning", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# Contemporary Romance# Contemporary# Dark# Suspense# Adult# Amazon# Erotic Romance# New Adult", "9780000000000", "English", 464, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2767, 1153, "The Jungle Book", "The Jungle Book", "Mowgli (Rudyard Kipling)# Bagheera (Rudyard Kipling)# Baloo (Rudyard Kipling)# Shere Kan# Rikki Tikki Tavi# Tabaqui# Raksha# Nag# Nagaina# Darzee# Kotick# Toomai# Kala Nag# Ikki# Chuchundra", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Childrens# Fantasy# Adventure# Short Stories# Animals# Young Adult# India# Literature", "9780000000000", "English", 277, 2768 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2768, 2769, "Donde los árboles cantan", "Donde los árboles cantan", "Viana# Uri", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Spanish Literature# Fiction# Magic# Novels# Adventure# High Fantasy# Medieval", "9790000000000", "Spanish", 477, 2769 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2769, 72, "Fantastic Beasts and Where to Find Them: The Original Screenplay", "Fantastic Beasts and Where to Find Them: The Original Screenplay", "Newt Scamander# Tina Goldstein# Queenie Goldstein# Jacob Kowalski# Seraphina Picquery# Credence Barebone# Percival Graves# Gellert Grindelwald", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Magic# Plays# Adventure# Historical Fiction# Middle Grade# Childrens# Young Adult Fantasy", "9780000000000", "English", 280, 410 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2770, 2771, "\"Where'd You Go", "\"Where'd You Go", "Fiction# Humor# Contemporary# Mystery# Audiobook# Chick Lit# Adult# Adult Fiction# Book Club# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.89", 0, 2771 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2771, 986, "Hunting Ground", "Hunting Ground", "Samuel Cornick# Charles Cornick# Anna Latham# Asil The Moor (Hussan)# Dana Shea# Arthur Madden# Sunny Madden# Jean Chastel# Heinrich Postinger# Bran The Marrok Cornick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Paranormal Romance# Werewolves# Vampires# Shapeshifters# Fiction# Magic", "9780000000000", "English", 286, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2772, 860, "Thinner", "Thinner", "Horror# Fiction# Thriller# Fantasy# Supernatural# Paranormal# Suspense# Mystery# Novels# Adult", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.73", 0, 124 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2773, 915, "The Kings of Clonmel", "The Kings of Clonmel", "Will Treaty# Halt OCarrick# Horace Altman# Gilan# Crowley Meratyn# Ferris OCarrick# Sean OCarrick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Medieval# High Fantasy# Young Adult Fantasy# Teen", "9780000000000", "English", 320, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2774, 2775, "Prozac Nation", "Prozac Nation", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Psychology# Mental Health# Mental Illness# Biography# Biography Memoir# Autobiography# Health# American", "9780000000000", "English", 368, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2775, 822, "The Lunatic Cafe", "The Lunatic Cafe", "Anita Blake# Dolph Storr# Zerbrowski (Anita Blake series)# Jean-Claude (Anita Blake series)# Richard Zeeman# Edward Ted Forrester# Jason Schuyler# Bert Vaughn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Horror# Fiction# Supernatural# Werewolves", "9780000000000", "English", 352, 2237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2776, 2777, "Any Human Heart", "Any Human Heart", "Logan Mountstuart", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Historical# Literary Fiction# British Literature# Literature# Contemporary# Novels# Classics# Audiobook", "9780000000000", "English", 480, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2777, 1812, "Lord Loss", "Lord Loss", "Grubbs Grady# Bill-E Spleen# Dervish Grady# Meera Flame# Lord Loss", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Young Adult# Fiction# Paranormal# Demons# Supernatural# Magic# Werewolves# Urban Fantasy", "9780000000000", "English", 224, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2778, 1217, "Dare You To", "Dare You To", "Beth Risk# Ryan Stone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# New Adult# Contemporary Romance# High School# Realistic Fiction# Sports# Abuse# Young Adult Romance", "9780000000000", "English", 456, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2779, 2780, "\"Angus", "\"Angus", "Young Adult# Humor# Fiction# Romance# Contemporary# Chick Lit# Teen# Realistic Fiction# Childrens# Comedy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.75", 0, 2780 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2780, 2781, "The Program", "The Program", "Sloan Barstow# James Murphy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Romance# Science Fiction# Fiction# Mental Health# Fantasy# Mental Illness# Teen# Audiobook", "9780000000000", "English", 405, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2781, 2782, "\"I", "\"I", "Historical Fiction# Fiction# Classics# Historical# Literature# Novels# Italy# Politics# Ancient History# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.43", 0, 2782 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2782, 2783, "The Art of Loving", "The Art of Loving", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.03", " Rainer Funk (Afterword)\"", " Lê Phương Anh (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2783, 2784, "The Samurai's Garden", "The Samurai's Garden", "Stephen# Matsu# Kenzo# Sachi# Keiko# Stephens Father", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Japan# Asia# Historical# Asian Literature# China# Japanese Literature# Novels# Book Club", "9780000000000", "English", 211, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2784, 969, "Proven Guilty", "Proven Guilty", "Thomas Raith# Molly Carpenter# Donald Morgan# Bob (Dresden Files)# Michael Carpenter# Lasciel# Ebenezer McCoy# Gatekeeper# Karrin Murphy# Harry Dresden# Father Anthony Forthill", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Fiction# Mystery# Paranormal# Magic# Audiobook# Supernatural# Vampires# Science Fiction Fantasy", "9780000000000", "English", 489, 531 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2785, 2786, "Oscar et la dame rose", "Oscar et la dame rose", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# France# Contemporary# School# French Literature# Novels# Classics# Read For School# Literature# Childrens", "9780000000000", "French", 100, 2786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2786, 1110, "Sweet Reckoning", "Sweet Reckoning", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Angels# Demons# Paranormal Romance# Supernatural# Urban Fantasy# Fiction", "9780000000000", "English", 379, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2787, 2069, "The Well House II: The Revenge", "The Well House II: The Revenge", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Drama# Epic# Novels", "9780000000000", "", 330, 1539 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2788, 2789, "Falling into You", "Falling into You", "Nell Hawthorne# Colton Calloway# Kyle Calloway", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Young Adult# College# Erotica# Fiction# Drama# Adult", "2940000000000", "English", 240, 2789 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2789, 2790, "Dark Rooms", "Dark Rooms", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Suspense# Mystery Thriller# Drama# Adult# Contemporary# Psychological Thriller# Young Adult", "9780000000000", "English", 336, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2790, 2791, "Blue Like Jazz: Nonreligious Thoughts on Christian Spirituality", "Blue Like Jazz: Nonreligious Thoughts on Christian Spirituality", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Christian# Religion# Christianity# Faith# Spirituality# Memoir# Theology# Christian Living# Christian Non Fiction", "9780000000000", "English", 243, 2791 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2791, 2792, "Winter's Tale", "Winter's Tale", "Peter Lake# Beverly Penn# Mootfowl# Issac Penn# Willa Penn# Harry Penn# Jayga# Pearly Soames", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Historical Fiction# Magical Realism# Romance# Historical# New York# Unfinished# Steampunk# Literature", "9780000000000", "English", 748, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2792, 74, "Resurrection", "Resurrection", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.14", " Aylmer Maude (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2793, 2794, "The First Fifteen Lives of Harry August", "The First Fifteen Lives of Harry August", "Jenny# Harry August# Vincent Rankis# Franklin Phearson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Time Travel# Audiobook# Historical Fiction# Adult# Historical# Science Fiction Fantasy# Thriller", "B00ECE9OD4", "English", 417, 2794 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2794, 2489, "The Devil's Deceptions: Is There Life After Death?", "The Devil's Deceptions: Is There Life After Death?", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B07QJ83Y1B", "", 50, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2795, 2796, "Ethereal Fury", "Ethereal Fury", "Onyx# Violette# Slate# Father Darius", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Fantasy# Young Adult# Science Fiction# Romance# Dystopia# Paranormal Romance# Fiction# Demons", "9780000000000", "English", 263, 2796 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2796, 2797, "Struck By Lightning: The Carson Phillips Journal", "Struck By Lightning: The Carson Phillips Journal", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Realistic Fiction# Humor# Teen# Coming Of Age# Audiobook# High School# Young Adult Contemporary", "9780000000000", "English", 272, 2797 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2797, 2798, "The Man Who Mistook His Wife for a Hat and Other Clinical Tales", "The Man Who Mistook His Wife for a Hat and Other Clinical Tales", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Psychology# Science# Medicine# Neuroscience# Medical# Short Stories# Essays# Health# Mental Health", "9780000000000", "English", 243, 2798 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2798, 2721, "And the Ass Saw the Angel", "And the Ass Saw the Angel", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Horror# Novels# Gothic# Southern Gothic# Contemporary# Music# Cult Classics# Dark# Drama", "9780000000000", "English", 320, 2799 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2799, 2800, "Forever", "Forever", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Fantasy# New York# Historical# Magical Realism# Time Travel# Ireland# Novels# Book Club", "9780000000000", "English", 613, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2800, 996, "The Poetry of Pablo Neruda", "The Poetry of Pablo Neruda", "Poetry# Classics# Romance# Literature# Fiction# Spanish Literature# Nobel Prize# Latin American# Latin American Literature# Poetry Plays", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.44", 0, 2801 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2801, 2802, "I Hunt Killers", "I Hunt Killers", "Connie# Jasper Jazz Dent# Billy Dent# G. William Tanner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Thriller# Horror# Crime# Fiction# Mystery Thriller# Contemporary# Suspense# Teen", "9780000000000", "English", 359, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2802, 1091, "The Lying Game", "The Lying Game", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Mystery# Contemporary# Fiction# Romance# Chick Lit# Thriller# Teen# Mystery Thriller# Realistic Fiction", "9780000000000", "English", 307, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2803, 2804, "Snow Country", "Snow Country", "Fiction# Japan# Japanese Literature# Classics# Literature# Asia# Novels# Romance# Nobel Prize# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.67", 0, 2716 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2804, 438, "Verity", "Verity", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Romance# Mystery# Fiction# Mystery Thriller# Contemporary# Suspense# Adult# Dark# New Adult", "B07HJYTRMD", "English", 324, 2805 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2805, 1373, "Caressed by Ice", "Caressed by Ice", "Sascha Duncan# Lucas Hunter# Brenna Shane Kincaid# Judd Lauren# Andrew Liam Kincaid# Riley Aedan Kincaid# Hawke Snow# Indigo Riviere# Sienna Lauren# Dorian Christensen# Nikita Duncan# Kaleb Krycheck# Vaughn DAngelo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Urban Fantasy# Shapeshifters# Adult# Science Fiction# Fiction# Werewolves", "9780000000000", "English", 352, 1373 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2806, 371, "Winter's Heart", "Winter's Heart", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Min Farshaw# Elayne Trakand", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 780, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2807, 2030, "The Waste Land and Other Poems", "The Waste Land and Other Poems", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Classics# Fiction# Literature# 20th Century# American# School# British Literature# College# Classic Literature", "9780000000000", "English", 88, 1247 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2808, 2809, "Cruel Beauty", "Cruel Beauty", "Ignifex# Shade# Nyx Triskelion", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Retellings# Fairy Tales# Mythology# Magic# Young Adult Fantasy# Fiction# Paranormal", "9780000000000", "English", 346, 795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2809, 2810, "Batman: The Long Halloween", "Batman: The Long Halloween", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.32", " Richard Starkings (Letterer)\"", " Gregory Wright (Colorist)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2810, 2811, "Kitchen", "Kitchen", "Fiction# Japan# Japanese Literature# Short Stories# Contemporary# Asia# Novels# Asian Literature# Literature# Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.86", 0, 1192 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2811, 2812, "The Age of Miracles", "The Age of Miracles", "Julia# Hanna# Seth Moreno# Michaela", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Science Fiction# Dystopia# Coming Of Age# Fantasy# Post Apocalyptic# Adult Fiction# Audiobook# Adult", "9780000000000", "English", 294, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2812, 77, "Fantastic Mr. Fox", "Fantastic Mr. Fox", "Childrens# Fiction# Fantasy# Classics# Animals# Middle Grade# Young Adult# Humor# Audiobook# Adventure", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 1237 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2813, 2187, "Audition", "Audition", "Horror# Fiction# Japanese Literature# Japan# Thriller# Mystery# Drama# Suspense# Contemporary# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.47", 0, 354 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2814, 2815, "The Kindly Ones", "The Kindly Ones", "Fiction# Historical Fiction# War# World War II# France# Historical# Holocaust# Literature# Novels# Germany", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.08", 0, 2815 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2815, 2816, "The Cost of Discipleship", "The Cost of Discipleship", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Theology# Christianity# Religion# Nonfiction# Christian Living# Faith# Spirituality# Discipleship# Classics", "9780000000000", "English", 320, 2798 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2816, 554, "The Fall of Five", "The Fall of Five", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Science Fiction# Aliens# Fiction# Adventure# Paranormal# Romance# Teen# Action", "9780000000000", "English", 355, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2817, 2818, "My Favorite Mistake", "My Favorite Mistake", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Romance# College# Contemporary# Contemporary Romance# Young Adult# Chick Lit# Adult# Fiction# Love", "9780000000000", "English", 391, 2818 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2818, 2819, "\"Ada", "\"Ada", "Fiction# Classics# Russia# Literature# Novels# Russian Literature# Romance# 20th Century# Literary Fiction# American", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 2819 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2819, 2820, "Off the Grid: The Catalyst", "Off the Grid: The Catalyst", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Suspense# Thriller# Mystery# Modern# Young Adult# Speculative Fiction# Adventure# 21st Century# Drama", "9780000000000", "English", 270, 2820 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2820, 70, "Eight Cousins", "Eight Cousins", "Rose Campbell# Dr. Alec Campbell# Aunt Peace Campbell# Aunt Plenty Campbell# Archie Campbell# Charlie Campbell# Mac Campbell# Steve Campbell# Will Campbell# Geordie Campbell# Jamie Campbell (the Baby)# Phebe Moore# Uncle Mac Campbell# Uncle Jem Campbell# Uncle Steve Campbell# Aunt Myra Campbell# Aunt Clara Campbell# Aunt Jane Campbell# Aunt Jessie Campbell# Whang Lo# Fun See# Pokey (Eight Cousins)# Ariadne Blish# Debby the cook", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Historical# Middle Grade# Literature# 19th Century# Childrens Classics", "9780000000000", "English", 224, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2821, 1533, "The Queen of Attolia", "The Queen of Attolia", "Eugenides# Attolia# The Magus# Eddis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Adventure# Romance# Young Adult Fantasy# High Fantasy# Historical Fiction# Mythology# Audiobook", "9780000000000", "English", 362, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2822, 2823, "Lost in the Crowd", "Lost in the Crowd", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Drama# Book Club# Thriller# Mystery# Young Adult# Suspense# Psychological Thriller# Dark# Adult Fiction", "B07D6WPKH6", "", 418, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2823, 2824, "Finnegans Wake", "Finnegans Wake", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Literature# Irish Literature# Ireland# Novels# Literary Fiction# 20th Century# Classic Literature# Unfinished", "9780000000000", "English", 628, 428 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2824, 2825, "Backstage Pass", "Backstage Pass", "Brian Sinclair# Myrna Evans", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# Contemporary# Contemporary Romance# Adult# Erotic Romance# Music# Menage# BDSM# Musicians", "9780000000000", "English", 344, 2825 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2825, 2826, "A Fire Upon the Deep", "A Fire Upon the Deep", "Pham Nuwen# Peregrine Wickwrackrum# Tyrathect# Scriber Jaqueramaphan# Flenser# Ravna Bergsndot# Jefri Olsndot# Johanna Olsndot# Steel# Blueshell# Greenstalk", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Science Fiction Fantasy# Fantasy# Hugo Awards# Space# Aliens# Speculative Fiction# Novels", "9780000000000", "English", 613, 2826 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2826, 2827, "Welcome to the Monkey House", "Welcome to the Monkey House", "Fiction# Short Stories# Science Fiction# Classics# Literature# Humor# American# Dystopia# Novels# Anthologies", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.12", 0, 57 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2827, 570, "In The Afterlight", "In The Afterlight", "Charles Chubs Carrington Meriwether IV (The Darkest Minds)# Ruby Elizabeth Daly (The Darkest Minds)# Vida (The Darkest Minds)# Cole (The Darkest Minds)# Liam Stewart (The Darkest Minds)# Suzume Kimura", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Fantasy# Science Fiction# Romance# Paranormal# Fiction# Audiobook# Supernatural# Adventure", "9780000000000", "English", 535, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2828, 2829, "Jemima J", "Jemima J", "Jemima Jones# Ben Williams# Geraldine Turner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Chick Lit# Fiction# Adult# Contemporary Romance# Adult Fiction# Contemporary# Humor# British Literature# Novels", "9780000000000", "English", 373, 289 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2829, 2830, "الرحيق المختوم", "الرحيق المختوم", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Islam# Religion# History# Biography# Nonfiction# Spirituality# Historical# Unfinished# Biography Memoir", "10000000000000", "Arabic", 498, 2830 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2830, 2831, "Bloody Jack", "Bloody Jack", "Jacky Faber# James Emerson Jaimy Fletcher# Davy Jones", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Young Adult# Adventure# Pirates# Fiction# Historical# Audiobook# Teen# Romance# Fantasy", "9780000000000", "English", 304, 262 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2831, 1133, "Haunted", "Haunted", "Hector de Silva (Jesse)# Father Dominic# Susannah Suze Simon# Paul Slater# Kelly Prescott# Rick Slater# Andy Ackerman# Jake Ackerman (Sleepy)# Brad Ackerman (Dopey)# David Ackerman (Doc)# Neil Jankow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Supernatural# Fiction# Teen# Chick Lit# Mystery", "9780000000000", "English", 263, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2832, 2833, "Into the Darkest Corner", "Into the Darkest Corner", "Catherine Cathy Bailey# Stuart Richardson# Lee Brightman# Sylvia Bartlett", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Mystery# Fiction# Suspense# Crime# Mystery Thriller# Drama# Psychological Thriller# Contemporary# Adult", "9780000000000", "English", 450, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2833, 385, "Elixir", "Elixir", "Seth# Aiden St. Delphi# Deacon St. Delphi# Alexandria Alex Andros", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Mythology# Romance# Paranormal Romance# Novella# Greek Mythology# Urban Fantasy# Supernatural", "9780000000000", "English", 74, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2834, 332, "The Last Juror", "The Last Juror", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Crime# Suspense# Drama# Legal Thriller# Novels# Mystery Thriller# Adult Fiction", "9780000000000", "English", 278, 483 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2835, 1019, "The Night Angel Trilogy", "The Night Angel Trilogy", "", new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Magic# High Fantasy# Dark Fantasy# Adult# Science Fiction Fantasy# Adventure# Epic", "9780000000000", "English", 1392, 2836 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2836, 2837, "Leviathan Wakes", "Leviathan Wakes", "James Jim Holden# Josephus Joe Aloisus Miller# Julie Mao# Naomi Nagata# Alex Kamal# Amos Burton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Space# Science Fiction Fantasy# Audiobook# Mystery# Fantasy# Horror# Adult", "9780000000000", "English", 561, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2837, 1019, "The Blinding Knife", "The Blinding Knife", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Epic Fantasy# Fiction# High Fantasy# Magic# Audiobook# Adventure# Epic# Science Fiction Fantasy# Adult", "9780000000000", "English", 671, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2838, 1375, "Here Be Dragons", "Here Be Dragons", "Llywelyn the Great# Joan# Lady of Wales# John of England", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Medieval# Fantasy# Romance# British Literature# Historical Romance# 13th Century# Adult", "9780000000000", "English", 704, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2839, 1516, "The Dead-Tossed Waves", "The Dead-Tossed Waves", "Mary# Elias# Harry Adams# Gabry# Catcher# Cira", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Zombies# Dystopia# Horror# Fantasy# Post Apocalyptic# Fiction# Romance# Paranormal# Science Fiction", "9780000000000", "English", 416, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2840, 2841, "Forsaken", "Forsaken", "Riley Blackthorne# Paul Blackthorne# Denver Beck# Simon Adler", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Demons# Urban Fantasy# Angels# Romance# Supernatural# Magic# Paranormal Romance", "9780000000000", "English", 422, 2841 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2841, 1073, "Breathing Lessons", "Breathing Lessons", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Literary Fiction# Novels# Adult Fiction# Literature# American# Adult# Family# 20th Century", "9780000000000", "English", 350, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2842, 1449, "The Darkest Kiss", "The Darkest Kiss", "Anya - Goddess of Anarchy# Lucien / Death# William (Lords of the Underworld)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Demons# Adult# Mythology# Urban Fantasy# Supernatural# Fiction", "9780000000000", "English", 368, 2843 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2843, 748, "It's Not Summer Without You", "It's Not Summer Without You", "Jeremiah Fisher# Conrad Fisher# Isabel Belly Conklin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Romance# Contemporary# Chick Lit# Fiction# Realistic Fiction# Young Adult Contemporary# Teen# Young Adult Romance# Audiobook", "9780000000000", "English", 288, 1234 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2844, 2845, "The Marriage Bargain", "The Marriage Bargain", "Alexa Maria McKenzie# Nicholas Ryan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Adult# Chick Lit# Erotica# New Adult# Fiction# Humor# Love", "9780000000000", "English", 160, 2845 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2845, 2846, "The Art of Fielding", "The Art of Fielding", "Henry Skrimshander# Mike Schwartz# Owen Dunne# Guert Affenlight# Pella Affenlight", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Sports# Baseball# Contemporary# Literary Fiction# Audiobook# Adult Fiction# Novels# Coming Of Age# Literature", "9780000000000", "English", 512, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2846, 2847, "Playing with Fire", "Playing with Fire", "Skulduggery Pleasant# Valkyrie Cain", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Urban Fantasy# Magic# Mystery# Fiction# Adventure# Middle Grade# Paranormal# Humor", "9780000000000", "English", 389, 184 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2847, 2848, "Deadly Little Secret", "Deadly Little Secret", "Matt Zander# Camelia Hammond# Kimmie# Spencer# Ben Carter# Wes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Mystery# Fantasy# Romance# Fiction# Supernatural# Teen# Paranormal Romance# Thriller", "9780000000000", "English", 252, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2848, 785, "Selected Poems", "Selected Poems", "Poetry# Classics# Literature# American# Nonfiction# School# 20th Century# Collections# High School# College", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.18", 0, 476 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2849, 2850, "Goodbye to All That", "Goodbye to All That", "Robert Graves", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Biography# Memoir# War# World War I# Classics# Autobiography# Biography Memoir# 20th Century", "10000000000000", "English", 281, 2850 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2850, 112, "The Outsider", "The Outsider", "Holly Gibney", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Mystery# Thriller# Crime# Audiobook# Mystery Thriller# Fantasy# Suspense# Supernatural", "9780000000000", "English", 561, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2851, 124, "The Book of Laughter and Forgetting", "The Book of Laughter and Forgetting", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Serena Vitale (translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2852, 1216, "The Thief of Always", "The Thief of Always", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Horror# Fiction# Young Adult# Childrens# Adventure# Middle Grade# Supernatural# Dark Fantasy# Magic", "9780000000000", "English", 225, 13 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2853, 445, "The Opal Deception", "The Opal Deception", "Artemis Fowl II# Domovoi Butler# Captain Holly Short# Commander Julius Root# Foaly# Mulch Diggums# Angeline Fowl# Opal Koboi# Artemis Fowl Sr.# Captain Trouble Kelp# Ark Sool# Wing Commander Vinyáya# Corporal Grub Kelp# Dr Jerbal Argon# Chix Verbil# Brill Brothers# Giovanni Zito", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Adventure# Middle Grade# Childrens# Magic# Urban Fantasy# Audiobook", "9780000000000", "English", 416, 2854 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2854, 2855, "Bridget Jones: The Edge of Reason", "Bridget Jones: The Edge of Reason", "Bridget Jones# Mark Darcy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Chick Lit# Fiction# Romance# Humor# Contemporary# British Literature# Comedy# Adult# Adult Fiction# Novels", "9780000000000", "English", 352, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2855, 2856, "Out Stealing Horses", "Out Stealing Horses", "Fiction# Historical Fiction# Scandinavian Literature# Novels# Book Club# Literary Fiction# Contemporary# Literature# Coming Of Age# Adult Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 1921 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2856, 2857, "Three Weeks With My Brother", "Three Weeks With My Brother", "Nonfiction# Memoir# Biography# Travel# Romance# Biography Memoir# Autobiography# Adult# Chick Lit# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 727 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2857, 1249, "Remy", "Remy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Fighters# Sports# Contemporary Romance# Contemporary# Erotica# Sports Romance# Adult# Mixed Martial Arts", "B00D0MZXE8", "English", 272, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2858, 2859, "Lost Souls", "Lost Souls", "Twig# Zillah# Nothing# Molochai", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Vampires# Fiction# Fantasy# LGBT# Paranormal# Gothic# Supernatural# Urban Fantasy# M M Romance", "9780000000000", "English", 356, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2859, 2860, "The Club Dumas", "The Club Dumas", "Fiction# Mystery# Thriller# Historical Fiction# Books About Books# Spain# Mystery Thriller# Spanish Literature# Adventure# Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.81", 0, 2860 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2860, 1757, "The Demigod Diaries", "The Demigod Diaries", "4.18", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Joann Hill (Cover Illustrator)", " Steve James (Illustrator)", " Antonio Caparo (Illustrator)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2861, 2862, "Eliza and Her Monsters", "Eliza and Her Monsters", "Eliza Mirk# Wallace Warland", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Young Adult# Romance# Mental Health# Fiction# Young Adult Contemporary# Mental Illness# Realistic Fiction# High School# Audiobook", "9780000000000", "English", 385, 1533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2862, 416, "Night Star", "Night Star", "Ever Bloom# Damen Auguste# Miles# Haven Turner# Misa# Jude (The Immortals)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Romance# Supernatural# Paranormal Romance# Fiction# Magic# Urban Fantasy# Vampires", "9780000000000", "English", 302, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2863, 2864, "The Age of Reason", "The Age of Reason", "Mathieu Delarue", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Philosophy# Fiction# Classics# France# Literature# French Literature# Novels# 20th Century# Nobel Prize# Unfinished", "9780000000000", "English", 408, 250 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2864, 2633, "Silk", "Silk", "Fiction# Historical Fiction# Romance# Italian Literature# Japan# Italy# Historical# Literature# Novels# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.85", 0, 2865 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2865, 1455, "The White Dragon", "The White Dragon", "Jaxom# Ruth (The White Dragon)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Dragons# Fiction# Science Fiction Fantasy# Young Adult# High Fantasy# Adult# Speculative Fiction# Adventure", "9780000000000", "English", 468, 2866 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2866, 445, "The Time Paradox", "The Time Paradox", "Artemis Fowl II# Domovoi Butler# Captain Holly Short# Foaly# Mulch Diggums# Angeline Fowl# Opal Koboi# Artemis Fowl Sr.", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Science Fiction# Adventure# Middle Grade# Magic# Childrens# Time Travel# Urban Fantasy", "10000000000000", "English", 391, 2867 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2867, 381, "Maniac Magee", "Maniac Magee", "Maniac Magee", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Childrens# Realistic Fiction# Middle Grade# School# Classics# Juvenile# Read For School# Historical Fiction", "9780000000000", "English", 184, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2868, 915, "The Siege of Macindaw", "The Siege of Macindaw", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Medieval# Teen# Young Adult Fantasy# High Fantasy", "9780000000000", "English", 320, 122 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2869, 135, "Fragile Things: Short Fictions and Wonders", "Fragile Things: Short Fictions and Wonders", "Shadow Moon", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Short Stories# Fiction# Horror# Science Fiction# Poetry# Anthologies# Science Fiction Fantasy# Audiobook# Urban Fantasy", "9780000000000", "English", 360, 135 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2870, 535, "Crime", "Crime", "Ray Lennox", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Suspense# Mystery# Crime# Drama# Cult Classics# Dark# Adult# Adult Fiction", "9780000000000", "English", 344, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2871, 2221, "The King's Men", "The King's Men", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "LGBT# Contemporary# Young Adult# Sports# Romance# M M Romance# New Adult# Fiction# Queer# College", "10000000000000", "English", 556, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2872, 645, "In the Hand of the Goddess", "In the Hand of the Goddess", "Alanna of Trebond# Thom of Trebond# Coram Smythesson# George Cooper# Jonathan of Conte# Raoul of Goldenlake# Gareth of Naxen the Second (Gary)# Alex of Tirrigan# Duke Roger of Conte# Dain of Melor", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Adventure# Young Adult Fantasy# Romance# High Fantasy# Childrens# Teen", "9780000000000", "English", 264, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2873, 2874, "Saving CeeCee Honeycutt", "Saving CeeCee Honeycutt", "Fiction# Historical Fiction# Chick Lit# Southern# Coming Of Age# Adult Fiction# Audiobook# Adult# Young Adult# Book Club", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.94", 0, 2874 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2874, 2875, "Motherless Brooklyn", "Motherless Brooklyn", "Lionel Essrog# Frank Minna", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Crime# Novels# New York# Contemporary# Literature# Literary Fiction# Mystery Thriller# American", "9780000000000", "English", 311, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2875, 2876, "Monument 14", "Monument 14", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Dystopia# Science Fiction# Post Apocalyptic# Survival# Fiction# Apocalyptic# Teen# Adventure# Fantasy", "9780000000000", "English", 304, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2876, 245, "1Q84", "1Q84", "Fiction# Fantasy# Japan# Japanese Literature# Magical Realism# Novels# Contemporary# Science Fiction# Literature# Asia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "Japanese", "4", 0, 2877 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2877, 2705, "Mystery Man", "Mystery Man", "Cabe “Hawk” Delgado# Gwendolyn Piper Kidd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Adult# Romantic Suspense# Erotica# Suspense# Military Fiction# Chick Lit# Mystery", "B005CHQT3S", "English", 494, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2878, 2879, "\"The Spirit Catches You and You Fall Down: A Hmong Child", "\"The Spirit Catches You and You Fall Down: A Hmong Child", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.17", "Anne Fadiman", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2879, 2880, "Love & Misadventure", "Love & Misadventure", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry# Romance# Young Adult# Contemporary# Love# Fiction# Adult", "9780000000000", "English", 176, 2880 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2880, 2881, "Plainsong", "Plainsong", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literary Fiction# Contemporary# Literature# Adult Fiction# Novels# Book Club# Adult# Family# American", "9780000000000", "English", 301, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2881, 927, "The Outlaw Demon Wails", "The Outlaw Demon Wails", "Rachel Morgan# Ivy Tamwood# Jenks# Trent Kalamack# Algaliarept# Marshal# David Hue# Detective Glenn# Ceri# Newt# Rynn Cormel# Tom Bansen# Minias# Jonathan# Quen# Bis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Vampires# Witches# Magic# Demons# Fiction# Supernatural# Romance", "9780000000000", "English", 455, 1216 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2882, 1067, "Twisted Perfection", "Twisted Perfection", "Della Sloane# Woods Kerrington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "New Adult# Romance# Contemporary# Contemporary Romance# Young Adult# Erotica# Abuse# Chick Lit# Adult# Drama", "B00CGI6QXE", "English", 290, 1067 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2883, 1865, "La ciudad y los perros", "La ciudad y los perros", "Ricardo Arana “El Esclavo”# El Jaguar# Alberto Fernández “El Poeta”# El Boa”# Porfirio Cava El Serrano# El Rulos”# Brigadier Arróspide# El Negro Vallano# Teniente Gamboa# Pies Dorados# Paulino El Injerto", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Spanish Literature# Latin American# Latin American Literature# Classics# Novels# Literature# Nobel Prize# 20th Century# Contemporary", "9790000000000", "Spanish", 446, 2884 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2884, 2885, "The Boys in the Boat: Nine Americans and Their Epic Quest for Gold at the 1936 Berlin Olympics", "The Boys in the Boat: Nine Americans and Their Epic Quest for Gold at the 1936 Berlin Olympics", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Sports# Biography# Historical# Audiobook# Book Club# World War II# American History# Memoir", "9780000000000", "English", 404, 461 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2885, 2886, "Hunting and Gathering", "Hunting and Gathering", "Fiction# France# Contemporary# Romance# Roman# Novels# French Literature# Literary Fiction# Adult# Chick Lit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.1", 0, 376 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2886, 307, "The Orange Girl", "The Orange Girl", "Fiction# Philosophy# Young Adult# Novels# Romance# Scandinavian Literature# Contemporary# Literature# Roman# Mystery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.92", 0, 2887 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2887, 2726, "Darkest Hour", "Darkest Hour", "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Supernatural# Fiction# Teen# Mystery# Chick Lit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.16", 0, 519 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2888, 2889, "Abraham Lincoln: Vampire Hunter", "Abraham Lincoln: Vampire Hunter", "Abraham Lincoln# John Wilkes Booth# Mary Todd Lincoln# Henry Sturges", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Fantasy# Historical Fiction# Horror# Vampires# Paranormal# Historical# Supernatural# Alternate History# Humor", "9780000000000", "English", 336, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2889, 667, "A Hat Full of Sky", "A Hat Full of Sky", "Tiffany Aching# DEATH# Nac Mac Feegle# Granny Weatherwax", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Humor# Magic# Witches# Childrens# Comedy# Audiobook# Science Fiction Fantasy", "9780000000000", "English", 352, 1107 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2890, 2891, "Vampire Kisses: The Beginning", "Vampire Kisses: The Beginning", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Fantasy# Romance# Paranormal# Supernatural# Paranormal Romance# Teen# Fiction# Urban Fantasy", "9780000000000", "English", 562, 22 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2891, 2892, "Six Days of the Condor", "Six Days of the Condor", "Ronald Malcolm", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Drama# Crime# Suspense# Espionage# Novels# Mystery Thriller# Adult Fiction", "9780000000000", "English", 192, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2892, 506, "Soul of the Fire", "Soul of the Fire", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Magic# Adventure# Romance# Epic# Adult", "9780000000000", "English", 788, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2893, 144, "The Long Winter", "The Long Winter", "Historical Fiction# Classics# Childrens# Fiction# Young Adult# Historical# Middle Grade# Juvenile# Family# Chapter Books", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.14", 0, 1187 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2894, 2895, "The Twilight Saga", "The Twilight Saga", "3.89", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Matt Walters (Goodreads Author) (Narrator)", " Sylke Hachmeister (Translator)", " Karsten Kredel (Translator)", 0, 382 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2895, 2243, "The Glass Lake", "The Glass Lake", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Chick Lit# Ireland# Romance# Irish Literature# Contemporary# Drama# Novels# Womens Fiction# Adult Fiction", "9780000000000", "English", 704, 2896 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2896, 355, "Holy Bible: The New King James Version", "Holy Bible: The New King James Version", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Religion# Christian# Nonfiction# Reference# Classics# Christianity# Spirituality# History# Christian Non Fiction# Theology", "9780000000000", "", 1536, 2791 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2897, 2726, "Ninth Key", "Ninth Key", "Young Adult# Paranormal# Fantasy# Romance# Ghosts# Supernatural# Fiction# Mystery# Teen# Chick Lit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.06", 0, 1739 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2898, 2899, "Sugar Daddy", "Sugar Daddy", "Hardy Cates# Liberty Jones# Gage Travis", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Chick Lit# Adult# Fiction# Audiobook# Adult Fiction# New Adult# Family", "9780000000000", "English", 371, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2899, 47, "A Song of Ice and Fire", "A Song of Ice and Fire", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Adventure# Science Fiction Fantasy# Science Fiction# Novels# Epic# High Fantasy# Adult", "9780000000000", "English", 4081, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2900, 2901, "The Blind Owl", "The Blind Owl", "Fiction# Iran# Novels# Literature# Classics# Horror# Novella# Roman# Asia# Philosophy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.99", 0, 2901 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2901, 2902, "The Humans", "The Humans", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Fantasy# Humor# Contemporary# Audiobook# Adult# Aliens# Adult Fiction# Novels", "9780000000000", "English", 285, 270 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2902, 2903, "Matterhorn", "Matterhorn", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# War# Military Fiction# Historical# Audiobook# Asia# Literature# Novels# Literary Fiction", "9780000000000", "English", 663, 2903 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2903, 1161, "Awake at Dawn", "Awake at Dawn", "Lucas Ross# Kylie Galen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Vampires# Romance# Werewolves# Supernatural# Magic# Witches# Paranormal Romance", "9780000000000", "English", 383, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2904, 5, "The Twilight Saga Complete Collection", "The Twilight Saga Complete Collection", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Vampires# Romance# Paranormal# Fiction# Paranormal Romance# Supernatural# Werewolves# Teen", "9780000000000", "English", 2752, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2905, 2906, "Awoken", "Awoken", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction", "9780000000000", "", 321, 1021 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2906, 2907, "Meeting With Christ and Other Poems", "Meeting With Christ and Other Poems", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Poetry", "B00EDRJK34", "English", 80, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2907, 2908, "Letters From Your Soul", "Letters From Your Soul", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Spirituality# Poetry", "9780000000000", "English", 166, 2908 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2908, 2909, "The Fall of the Phoenix", "The Fall of the Phoenix", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Epic# Novels# Suspense# Young Adult# New Adult# Book Club# Fiction", "9780000000000", "English", 244, 2909 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2909, 52, "Dr. Seuss's ABC", "Dr. Seuss's ABC", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Childrens# Picture Books# Fiction# Classics# Poetry# Kids# Fantasy# Humor# Juvenile# Animals", "9780000000000", "English", 21, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2910, 542, "Unleash the Night", "Unleash the Night", "Wren Tigarian# Marguerite D‘Aubert Goudeau# Savitar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Paranormal# Romance# Fantasy# Vampires# Urban Fantasy# Shapeshifters# Adult# Mythology# Fiction", "9780000000000", "English", 378, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2911, 2912, "The Rising", "The Rising", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Werewolves# Urban Fantasy# Shapeshifters", "9780000000000", "English", 0, 2912 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2912, 1832, "Where I'm Calling From: New and Selected Stories", "Where I'm Calling From: New and Selected Stories", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Short Stories# Fiction# Literature# Classics# American# Literary Fiction# Contemporary# Short Story Collection# Americana# The United States Of America", "9780000000000", "English", 544, 1700 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2913, 2914, "Dealing with Dragons", "Dealing with Dragons", "Fantasy# Young Adult# Dragons# Fiction# Childrens# Middle Grade# Magic# Adventure# Humor# Fairy Tales", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.13", 0, 2495 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2914, 2915, "Brooklyn", "Brooklyn", "Eilis Lacey# Father Flood# Mrs Kehoe# Rose Lacey# Antonio Tony Giuseppe Fiorello# Jim Farrell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Ireland# Historical# Romance# Irish Literature# Audiobook# New York# Adult Fiction# Adult", "9780000000000", "English", 262, 95 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2915, 2916, "\"Yours Truly", "\"Yours Truly", "Romance# New Adult# Contemporary Romance# Contemporary# Menage# Erotica# Humor# Young Adult# Erotic Romance# M F Romance", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B00JN3ATHY", "English", "3.66", 0, 517 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2916, 2917, "The Rings of Saturn", "The Rings of Saturn", "Fiction# Travel# German Literature# Literature# Novels# Germany# Essays# 20th Century# British Literature# Walking", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.25", 0, 147 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2917, 313, "The Confessions of Nat Turner", "The Confessions of Nat Turner", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# Classics# Literature# Historical# African American# Novels# Literary Fiction# American# American History", "9780000000000", "English", 453, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2918, 2919, "The Arrival", "The Arrival", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Comics# Fantasy# Picture Books# Fiction# Young Adult# Art# Childrens# Graphic Novels Comics# Historical Fiction", "10000000000000", "English", 132, 2919 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2919, 2920, "Zeno's Conscience", "Zeno's Conscience", "Fiction# Classics# Italian Literature# Italy# Literature# Novels# 20th Century# Literary Fiction# Psychology# School", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.82", 0, 2920 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2920, 2912, "Deep World Fire", "Deep World Fire", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Epic Fantasy", "9780000000000", "English", 0, 2921 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2921, 2922, "Consequences", "Consequences", "Claire Nichols# Anthony Tony Rawlings", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Dark# Romance# Abuse# Contemporary# Adult# Thriller# Erotica# Suspense# BDSM# Fiction", "9780000000000", "English", 368, 2922 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2922, 976, "A Thousand Pieces of You", "A Thousand Pieces of You", "Marguerite Caine# Theo Beck# Paul Markov", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Fantasy# Romance# Time Travel# Fiction# Audiobook# Adventure# Mystery# Dystopia", "9780000000000", "English", 368, 2923 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2923, 2307, "Baltasar and Blimunda", "Baltasar and Blimunda", "Fiction# Historical Fiction# Classics# Portuguese Literature# Portugal# Romance# Nobel Prize# Literature# Historical# Novels", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.93", 0, 2924 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2924, 207, "The Queen's Fool", "The Queen's Fool", "Will Somers# Robert Dudley# 1st Earl of Leicester# Hannah the Fool# Elizabeth I of England# Mary I of England", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Romance# Tudor Period# British Literature# Adult# Historical Romance# Adult Fiction# Chick Lit", "9780000000000", "English", 490, 342 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2925, 2926, "Me and Earl and the Dying Girl", "Me and Earl and the Dying Girl", "Greg Gaines# Earl Jackson# Rachel Kushner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Fiction# Humor# Realistic Fiction# Young Adult Contemporary# Death# Teen# Audiobook# Coming Of Age", "9780000000000", "English", 295, 2348 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2926, 2927, "The Secret of the Old Clock", "The Secret of the Old Clock", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.99", " Sara Paretsky (Goodreads Author) (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2927, 645, "Terrier", "Terrier", "Beka Cooper", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Mystery# Adventure# High Fantasy# Teen# Science Fiction Fantasy", "9780000000000", "English", 581, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2928, 2705, "The Gamble", "The Gamble", "Nina Sheridan# Holden Max Maxwell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Contemporary# Adult# Romantic Suspense# Suspense# Chick Lit# Mystery# Erotica# Fiction", "B004X6TMLA", "English", 629, 1285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2929, 2930, "The Recruit", "The Recruit", "James Adams# Lauren Adams# Kyle Blueman# Kerry Chang# Bruce Norris# Amy Collins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Adventure# Fiction# Action# Espionage# Mystery# Thriller# Teen# Middle Grade# Childrens", "9780000000000", "English", 342, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2930, 1329, "Hometown Girl After All", "Hometown Girl After All", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# New Adult# Fiction# Love Story# Adult# Romance# Contemporary Romance# Novels# Chick Lit", "9780000000000", "English", 352, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2931, 2932, "Rot & Ruin", "Rot & Ruin", "Benjamin Imura# Tom Imura# Nix Riley", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Zombies# Young Adult# Horror# Dystopia# Post Apocalyptic# Fiction# Fantasy# Science Fiction# Paranormal# Teen", "9780000000000", "English", 458, 2932 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2932, 2933, "Thr3e", "Thr3e", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Christian Fiction# Thriller# Mystery# Christian# Suspense# Horror# Mystery Thriller# Adult# Fantasy", "9780000000000", "English", 423, 2933 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2933, 668, "The Circle", "The Circle", "Mae Holland# Annie Allerton# Francis Garaventa# Kaden (The Circle)# Eamon Bailey# Tom Stenton# Mercer Medeiros", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Contemporary# Audiobook# Adult# Novels# Thriller# Technology# Adult Fiction", "9780000000000", "English", 493, 550 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2934, 650, "The Farthest Shore", "The Farthest Shore", "Lebannen# Ged", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Science Fiction Fantasy# Classics# High Fantasy# Science Fiction# Magic# Adventure# Dragons", "9780000000000", "English", 259, 740 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2935, 1124, "The Taking of Peggy Martin", "The Taking of Peggy Martin", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Mystery# New Adult# Young Adult# Fiction# Adult# Drama# Contemporary# Novels# 21st Century", "B07466DS5H", "", 243, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2936, 356, "Brief Lives", "Brief Lives", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.54", " Peter Straub (Goodreads Author) (Introduction)\"", " Vince Locke (Illustrator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2937, 2938, "The Steward", "The Steward", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fae# Young Adult# Urban Fantasy# Paranormal# Magic# Fiction# Romance# Fairies# Action", "B008U4QGXS", "English", 336, 2938 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2938, 710, "Winter Garden", "Winter Garden", "Meredith Whitson# Nina Whitson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Chick Lit# Historical# Contemporary# Russia# Romance# Adult Fiction# World War II# Adult", "9780000000000", "English", 454, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2939, 2940, "Samarkand", "Samarkand", "Fiction# Historical Fiction# Novels# Literature# France# Historical# Roman# Classics# Lebanon# Iran", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.23", 0, 2940 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2940, 2941, "Resilience: Adapt and Plan for the New Abnormal of the Covid-19 Coronavirus Pandemic", "Resilience: Adapt and Plan for the New Abnormal of the Covid-19 Coronavirus Pandemic", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Psychology# Self Help# Nonfiction", "9780000000000", "", 96, 2941 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2941, 1133, "Abandon", "Abandon", "Pierce Oliviera# John Hayden# Richard Smith# Alex Cabrero# Kayla Rivera", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Mythology# Romance# Paranormal# Fiction# Supernatural# Paranormal Romance# Greek Mythology# Retellings", "9780000000000", "English", 304, 2650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2942, 2943, "Heart of a Warrior Angel", "Heart of a Warrior Angel", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Book Club# Young Adult# Drama# Contemporary# Epic# New Adult", "B07T792VT1", "English", 183, 2943 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2943, 737, "The Golden Bowl", "The Golden Bowl", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.79", " Patricia Crick (Notes)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2944, 1576, "Invisible", "Invisible", "Adam Walker# Gwyn Walker# Rudolf Born# James Freeman", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# American# Literature# Literary Fiction# Mystery# The United States Of America# Drama# New York", "9780000000000", "English", 308, 2945 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2945, 2946, "Homo Faber", "Homo Faber", "Walter Faber# Sabeth# Hanna Piper# Joachim Hencke# Herbert Hencke", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# German Literature# School# Literature# Novels# Roman# 20th Century# Read For School# Germany", "9780000000000", "English", 228, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2946, 645, "Lady Knight", "Lady Knight", "Keladry", new DateTime(2022, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Adventure# Teen# High Fantasy# Science Fiction Fantasy# Childrens", "10000000000000", "English", 416, 2947 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2947, 1310, "Gone for Good", "Gone for Good", "Will Klein# Carrex# Ken Klein", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Suspense# Crime# Mystery Thriller# Drama# Novels# Psychological Thriller# Adult Fiction", "9780000000000", "English", 432, 75 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2948, 2949, "The Memoirs of Cleopatra", "The Memoirs of Cleopatra", "Cleopatra# Marcus Antonius# Julius Caesar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Egypt# Romance# Adult# Africa# Adult Fiction# Novels# Egyptian Literature", "9780000000000", "English", 1139, 2949 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2949, 1707, "What the Wind Knows", "What the Wind Knows", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Romance# Time Travel# Fiction# Historical# Historical Romance# Fantasy# Ireland# Audiobook# Science Fiction", "B07DHMNY7H", "English", 411, 1873 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2950, 2951, "The Basketball Diaries", "The Basketball Diaries", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Thriller# Drama# Autobiography# Suspense# Mystery# Dark# Biography Memoir", "10000000000000", "English", 224, 2951 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2951, 914, "Fire and Ice", "Fire and Ice", "Lionheart# Graystripe# Fireheart# Bluestar# Tigerclaw# Whitestorm# Crookedstar# Ravenpaw# Spottedleaf# Darkstripe# Longtail# Runningwind# Willowpelt# Mousefur# Frostfur# Brindleface# Goldenflower# Speckletail# Halftail# Patchpelt# One-eye# Dappletail# Brokenstar# Runningnose# Dawncloud# Ashfur# Tallstar# Blackfoot# Boulder# Wetfoot# Cinderfur# Littlecloud# Deadfoot# Barkface# Mudclaw# Tornear# Onewhisker# Ashfoot# Morningflower# Leopardfur# Mudfur# Blackclaw# Stonefur# Mistyfoot# Loudbelly# Silverstream# Whiteclaw# Cloudkit# Brackenpaw# Cinderpaw# Dustpaw# Sandpaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Animals# Fiction# Young Adult# Middle Grade# Childrens# Adventure# Cats# Animal Fiction# Action", "9780000000000", "English", 317, 68 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2952, 126, "Summer of the Monkeys", "Summer of the Monkeys", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Classics# Childrens# Historical Fiction# Animals# Adventure# Middle Grade# Realistic Fiction# School", "9780000000000", "English", 288, 126 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2953, 317, "A Touch of Dead", "A Touch of Dead", "Sookie Stackhouse# Bill Compton# Sam Merlotte# Jason Stackhouse# Eric Northman# Tara Thornton# Pam Ravenscroft# Sophie-Anne LeClerq", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Fantasy# Paranormal# Urban Fantasy# Fiction# Romance# Mystery# Short Stories# Paranormal Romance# Supernatural", "9780000000000", "English", 192, 261 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2954, 2792, "A Soldier of the Great War", "A Soldier of the Great War", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Historical Fiction# War# Italy# World War I# Historical# Novels# Literary Fiction# Audiobook# Military Fiction", "9780000000000", "English", 860, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2955, 2956, "The Siren", "The Siren", "Nora Sutherlin# Zachary Easton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "BDSM# Romance# Erotica# Dark# Contemporary# Adult# Contemporary Romance# Erotic Romance# Fiction# M F Romance", "9780000000000", "English", 432, 607 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2956, 1339, "The Magician's Apprentice", "The Magician's Apprentice", "Tessia", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Magic# Fiction# Young Adult# High Fantasy# Epic Fantasy# Adventure# Science Fiction Fantasy# Romance# Epic", "9780000000000", "English", 593, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2957, 2958, "\"Hyperbole and a Half: Unfortunate Situations", "\"Hyperbole and a Half: Unfortunate Situations", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.15", "Allie Brosh (Goodreads Author)", " and Other Things That Happened\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2958, 2959, "SSN Seadragon: The Crucible of Leviathan", "SSN Seadragon: The Crucible of Leviathan", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Epic# Fiction", "B0758GTJD6", "", 977, 2959 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2959, 66, "Song of Susannah", "Song of Susannah", "Fantasy# Fiction# Horror# Science Fiction# Westerns# Adventure# Science Fiction Fantasy# Audiobook# Novels# Epic Fantasy", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "3.97", 0, 1427 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2960, 2961, "Frisk", "Frisk", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# LGBT# Queer# Horror# Dark# Gay# Thriller# Cult Classics# Drama# Adult Fiction", "9780000000000", "English", 144, 2961 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2961, 535, "The Sex Lives of Siamese Twins", "The Sex Lives of Siamese Twins", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Drama# Contemporary# Dark# Psychological Thriller# Adult Fiction# Cult Classics", "9780000000000", "English", 468, 905 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2962, 2963, "Prep", "Prep", "Lee Fiora# Cross Sugarman# Martha Porter# Aspeth Montgomery# Dede Schwartz# Sin Jun# Conchita Maxwell# David Bardo# Aubrey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Young Adult# Chick Lit# Contemporary# Coming Of Age# Boarding School# Adult Fiction# Adult# Novels# Realistic Fiction", "9780000000000", "English", 420, 1551 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2963, 2964, "Sold", "Sold", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fiction# Realistic Fiction# Poetry# Historical Fiction# Teen# Abuse# India# Contemporary# Cultural", "9780000000000", "English", 268, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2964, 2965, "Life and Fate", "Life and Fate", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.44", " Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2965, 1516, "The Dark and Hollow Places", "The Dark and Hollow Places", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Zombies# Dystopia# Horror# Fantasy# Post Apocalyptic# Fiction# Romance# Paranormal# Science Fiction", "9780000000000", "English", 384, 749 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2966, 2967, "Stepbrother Dearest", "Stepbrother Dearest", "Elec ORourke# Greta Hansen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Erotica# Adult# Young Adult# High School# Abuse# Drama", "9780000000000", "English", 230, 2075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2967, 1452, "We Should All Be Feminists", "We Should All Be Feminists", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Feminism# Essays# Audiobook# Politics# Womens# Africa# Social Justice# Adult# Gender", "B00L0F01NK", "English", 52, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2968, 2969, "Visions", "Visions", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Adventure# Young Adult# Urban Fantasy# Fiction# Action# Paranormal# Suspense# Science Fiction# Magic", "9780000000000", "English", 0, 1213 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2969, 1081, "Before They Are Hanged", "Before They Are Hanged", "Logen Ninefingers# Jezal dan Luthar# Ferro Maljinn# The Dogman# Shylo Vitari# Nicomo Cosca# Bayaz# Malacus Quai# Ardee West# Collem West# Black Dow# Brother Longfoot# Marshal Burr# Arch Lector Sult# Rudd Threetrees# Cathil# Pike (2)# Harding Grim# Tul Duru# Carlot dan Eider# General Vissbruck# Practical Frost# Practical Severard# Mauthis# Sand dan Glokta", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Dark Fantasy# High Fantasy# Audiobook# Adventure# Science Fiction Fantasy# Magic# Epic", "9780000000000", "English", 441, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2970, 2971, "Letters to a Young Poet", "Letters to a Young Poet", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.31", " Franz Xaver Kappus (Introduction)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2971, 2972, "Edenbrooke", "Edenbrooke", "Marianne Daventry# Philip Wyndham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Historical Fiction# Historical Romance# Historical# Fiction# Regency# Clean Romance# Chick Lit# Regency Romance# Adult", "9780000000000", "English", 264, 863 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2972, 2973, "A Raisin in the Sun", "A Raisin in the Sun", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Plays# Classics# Fiction# Drama# School# Read For School# African American# Historical Fiction# High School# Theatre", "9780000000000", "English", 162, 318 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2973, 1329, "Hometown Girl Forever", "Hometown Girl Forever", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Love Story# New Adult# Fiction# Adult# Romance# Novels# Contemporary Romance# Chick Lit", "10000000000000", "English", 297, 1464 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2974, 1736, "Echo", "Echo", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fantasy# Horror# Aliens# Wildlife# Thriller# Post Apocalyptic# Young Adult Science Fiction# Science Fiction Romance# Historical Fiction", "B0092PPR5M", "English", 219, 2975 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2975, 112, "Desperation", "Desperation", "Collie Entragian# David Carver", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Fantasy# Suspense# Supernatural# Paranormal# Novels# Audiobook# Adult", "10000000000000", "English", 547, 32 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2976, 76, "Small Great Things", "Small Great Things", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Audiobook# Adult Fiction# Adult# Book Club# Realistic Fiction# Race# Drama# Literary Fiction", "B01AQNYZ3I", "English", 510, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2977, 1425, "The Dragon Heir", "The Dragon Heir", "Linda Downey# Leander Hastings# Seph McCauley# Jason Haley# Madison Moss# Ellen Stephenson# Alicia (Leesha) Middleton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Magic# Urban Fantasy# Fiction# Young Adult Fantasy# Dragons# Adventure# Romance# Teen", "9780000000000", "English", 499, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2978, 2979, "Defiance", "Defiance", "Rachel Adams# Logan McEntire# Jared Adams", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Dystopia# Romance# Paranormal# Science Fiction# Adventure# Fiction# Young Adult Fantasy# Post Apocalyptic", "9780000000000", "English", 403, 795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2979, 1130, "\"Dark Guardian (Dark Guardian", "\"Dark Guardian (Dark Guardian", "Thriller# Action# Superheroes# Mystery# Crime", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.2", 0, 726 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2980, 2548, "Nick & Norah's Infinite Playlist", "Nick & Norah's Infinite Playlist", "Young Adult# Romance# Contemporary# Fiction# Music# Realistic Fiction# Teen# Young Adult Contemporary# Audiobook# Chick Lit", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.7", 0, 2981 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2981, 2982, "Little Brother", "Little Brother", "Marcus W1n5t0n Yallow# Masha Maximow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Fiction# Dystopia# Teen# Cyberpunk# Technology# Thriller# Speculative Fiction# Politics", "9780000000000", "English", 382, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2982, 2983, "Providence", "Providence", "Paranormal# Romance# Fantasy# Young Adult# Angels# New Adult# Paranormal Romance# Supernatural# Demons# College", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 242 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2983, 2984, "\"Conversations with God: An Uncommon Dialogue", "\"Conversations with God: An Uncommon Dialogue", "Spirituality# Nonfiction# Religion# Philosophy# Self Help# Inspirational# New Age# Personal Development# Christian# Psychology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.17", 0, 77 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2984, 2985, "The Autobiography of Benjamin Franklin", "The Autobiography of Benjamin Franklin", "Biography# History# Nonfiction# Classics# Autobiography# Memoir# American History# Biography Memoir# Politics# Historical", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.84", 0, 228 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2985, 2986, "My Family and Other Animals", "My Family and Other Animals", "Gerald Durrell# Lawrence Durrell# Margo Durrell# Leslie Durrell", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Humor# Animals# Travel# Classics# Nature# Greece# Autobiography", "9780000000000", "English", 273, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2986, 80, "My Cousin Rachel", "My Cousin Rachel", "Philip Ashley# Ambrose Ashley# Rachel Ashley# Signor Rainaldi# Nicholas Kendall# Louise Kendall# Father Pascoe# Mrs. Pascoe# Seecombe# Tamlyn# Wellington (My Cousin Rachel)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Mystery# Historical Fiction# Gothic# Romance# Historical# Suspense# Audiobook# Mystery Thriller", "9780000000000", "English", 352, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2987, 1520, "Barely Breathing", "Barely Breathing", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# New Adult# Contemporary# Abuse# Contemporary Romance# High School# Fiction# Drama# Realistic Fiction", "9780000000000", "English", 385, 1249 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2988, 2989, "The Case for Christ", "The Case for Christ", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christian# Nonfiction# Religion# Christianity# Faith# Theology# Spirituality# Christian Non Fiction# Christian Living# History", "9780000000000", "English", 367, 2989 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2989, 2990, "The Jewel in the Crown", "The Jewel in the Crown", "Daphne Manners# Hari Kumar# Edwina Crane# Lili Chatterjee# Ronald Merrick", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# India# Classics# Historical# Literature# British Literature# Asia# 20th Century# Novels", "9780000000000", "English", 472, 2990 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2990, 256, "Portrait in Sepia", "Portrait in Sepia", "Fiction# Historical Fiction# Romance# Historical# Magical Realism# Novels# Spanish Literature# Latin American# Literature# Womens", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.96", 0, 1204 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2991, 645, "Sandry's Book", "Sandry's Book", "Rosethorn# Sandrilene fa Toren# Trisana Chandler# Briar Moss# Daja Kisubo# Niklaren Goldeye# Frostpine# Lark", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Middle Grade# Childrens# High Fantasy# Science Fiction Fantasy# Teen", "9780000000000", "English", 252, 139 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2992, 2993, "On Liberty", "On Liberty", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Philosophy# Politics# Nonfiction# Classics# History# Political Science# Economics# Essays# 19th Century# School", "10000000000000", "English", 187, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2993, 2994, "The Gray House", "The Gray House", "Fantasy# Fiction# Magical Realism# Russia# Young Adult# Russian Literature# Contemporary# Audiobook# Unfinished# Cultural", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "B01JZAKPF0", "English", "4.18", 0, 2994 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2994, 2995, "The Fairy-Tale Detectives", "The Fairy-Tale Detectives", "Fantasy# Mystery# Middle Grade# Childrens# Fairy Tales# Fiction# Young Adult# Adventure# Magic# Juvenile", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.03", 0, 676 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2995, 2996, "The Yearling", "The Yearling", "Jody Baxter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Animals# Historical Fiction# Childrens# Literature# Coming Of Age# Historical# Middle Grade", "9780000000000", "English", 513, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2996, 2997, "Freak the Mighty", "Freak the Mighty", "Maxwell Kane# Tony D# Kevin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Realistic Fiction# Fiction# Middle Grade# School# Childrens# Read For School# Contemporary# Coming Of Age# Chapter Books", "9780000000000", "English", 192, 345 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2997, 915, "The Emperor of Nihon-Ja", "The Emperor of Nihon-Ja", "Will Treaty# Halt OCarrick# Alyss Mainwaring# Horace Altman# George Carter# Evanlyn# Shigeru Motodato# Selethen# Gundar Hardstriker# Shukin Motodato# Arisaka Shimonseki", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Adventure# Fiction# Middle Grade# Action# Medieval# Childrens# Young Adult Fantasy# Historical Fiction", "9780000000000", "English", 487, 2709 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2998, 2999, "Ever Yours: The Essential Letters", "Ever Yours: The Essential Letters", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.43", " Nienke Bakker (Editor)\"", " Hans Luijten (Editor)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 2999, 32, "Rilla of Ingleside", "Rilla of Ingleside", "Gilbert Blythe# Bertha Marilla (Rilla) Blythe# Anne Shirley# James Matthew Blythe# Walter Blythe# Anne (Nan) Blythe# Diana Blythe# Shirley Blythe# Jerry Meredith# Faith Meredith# Una Meredith# Carl Meredith# Susan Baker# Miller Douglas# Kenneth Ford# James Kitchener (Jims) Anderson# Irene Howard# Gertrude Oliver# Sophia Crawford# Fred Arnold# Josiah Pryor# Miranda Pryor# Joe Milgrave# Bruce Meredith", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Fiction# Young Adult# Historical Fiction# Childrens# Romance# Historical# Canada# Audiobook# Middle Grade", "9780000000000", "English", 277, 430 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3000, 1090, "The Charterhouse of Parma", "The Charterhouse of Parma", "3.82", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Robert Andrew Parker (Illustrations)", " Charles Kenneth Scott Moncrieff (Translator)", " Richard Howard (Translator)", 0, 3001 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3001, 3002, "East", "East", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fairy Tales# Romance# Retellings# Fiction# Adventure# Magic# Middle Grade# Young Adult Fantasy", "9780000000000", "English", 507, 262 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3002, 2847, "The Faceless Ones", "The Faceless Ones", "Skulduggery Pleasant# Valkyrie Cain", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Urban Fantasy# Magic# Mystery# Fiction# Adventure# Paranormal# Middle Grade# Horror", "9780000000000", "English", 395, 152 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3003, 3004, "The Sweet Gum Tree", "The Sweet Gum Tree", "Alix French# Nick Anderson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Contemporary Romance# New Adult# Chick Lit# Adult# Fiction# Abuse# Young Adult# Drama", "9780000000000", "English", 314, 3004 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3004, 1261, "The Hard Way", "The Hard Way", "Lauren Pauling# Edward Lane (Jack Reacher)# Kate Lane# Graham Taylor (Jack Reacher)# Patricia Patti Joseph# John Gregory (Jack Reacher)# Jack Reacher", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Crime# Suspense# Action# Mystery Thriller# Audiobook# Drama# Adventure", "9780000000000", "English", 371, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3005, 3006, "Hawksong", "Hawksong", "Danica Shardae# Zane Cobriana", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Shapeshifters# Fiction# Young Adult Fantasy# Supernatural# Teen# Magic", "9780000000000", "English", 243, 334 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3006, 2240, "Nobody Move", "Nobody Move", "Jimmy Luntz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Crime# Mystery# Drama# Suspense# Noir# Novels# Contemporary# Mystery Thriller", "9780000000000", "English", 196, 363 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3007, 872, "The Initiation / The Captive Part I", "The Initiation / The Captive Part I", "Nick Armstrong# Cassie Blake# Faye Chamberlain# Diana Meade# Adam Conant# Laurel Quincey# Melanie Glaser# Deborah Armstrong# Chris Henderson# Doug Henderson# Sean Dulany# Suzan Whittier", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Paranormal# Witches# Romance# Supernatural# Magic# Fiction# Paranormal Romance# Urban Fantasy", "9780000000000", "English", 396, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3008, 1539, "And Come Day's End: A Michael McKaybees Mystery", "And Come Day's End: A Michael McKaybees Mystery", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "B07JL6XV1V", "", 253, 2267 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3009, 1521, "Midnight Rising", "Midnight Rising", "Rio (Midnight Rising)# Dylan Alexander", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal Romance# Vampires# Paranormal# Romance# Fantasy# Urban Fantasy# Adult# Fiction# Supernatural# Contemporary", "9780000000000", "English", 356, 202 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3010, 1032, "Kushiel's Avatar", "Kushiel's Avatar", "Phèdre nó Delaunay# Joscelin Verreuil# Melisande Shahrizai# Imriel de la Courcel# Hyacinthe (Jacqueline Carey)# Ysandre de la Courcel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Erotica# Adult# Alternate History# BDSM", "9780000000000", "English", 702, 1630 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3011, 29, "Queen of Air and Darkness", "Queen of Air and Darkness", "Livia Blackthorn# Arthur Blackthorn# Helen Blackthorn# Tiberius Blackthorn# Emma Cordelia Carstairs# Julian Atticus Blackthorn# Mark Blackthorn# Cristina Rosales", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Urban Fantasy# Paranormal# Young Adult Fantasy# LGBT# Fiction# Angels# Magic", "B075RS5MSP", "English", 912, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3012, 1216, "The Great and Secret Show", "The Great and Secret Show", "Randolph Jaffe# Richard Fletcher# William Witt# Howard (Howie) Katz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Fiction# Dark Fantasy# Science Fiction# Thriller# Supernatural# Urban Fantasy# Suspense# Science Fiction Fantasy", "9780000000000", "English", 658, 3013 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3013, 88, "Succubus Heat", "Succubus Heat", "Georgina Kincaid# Jerome# Doug Sato# Cody# Seth Mortensen# Hugh Mitchell# Carter# Roman Smith# Maddie Sato# Dante Moriarty# Tawny Johnson# Peter Gwel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Romance# Paranormal Romance# Demons# Vampires# Adult# Angels# Supernatural", "9780000000000", "English", 304, 2658 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3014, 486, "Naked", "Naked", "David Sedaris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Humor# Nonfiction# Memoir# Essays# Short Stories# Comedy# Biography# Audiobook# Biography Memoir# Autobiography", "10000000000000", "English", 304, 41 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3015, 3016, "Winger", "Winger", "Ryan Dean West", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Realistic Fiction# Humor# Fiction# Romance# LGBT# Sports# Coming Of Age# Teen", "9780000000000", "English", 439, 388 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3016, 645, "The Realms of the Gods", "The Realms of the Gods", "Veralidaine Sarrasri# Numair Salmalín# Rikash Moonsword# Ozorne# Skysong (Kitten)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction Fantasy# Fiction# Childrens# Young Adult Fantasy# Magic# Dragons# Audiobook# Epic Fantasy", "9780000000000", "English", 347, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3017, 312, "Landline", "Landline", "Georgie McCool# Neal Grafton# Seth# Heather Wisner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Romance# Contemporary# Adult# Chick Lit# Adult Fiction# Audiobook# Magical Realism# Fantasy# Young Adult", "9780000000000", "English", 310, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3018, 885, "Homo Deus: A History of Tomorrow", "Homo Deus: A History of Tomorrow", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# History# Science# Philosophy# Audiobook# Anthropology# Sociology# Technology# Politics# Psychology", "10000000000000", "English", 450, 397 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3019, 986, "River Marked", "River Marked", "Adam Hauptman# Samuel Cornick# Zee (Siebold Adelbertsmiter)# Mercy Thompson# Jesse Hauptman# Darryl Zao# Warren Smith# Kyle Brooks# Stefan Uccello# Coyote (Mercy Thompson)# Auriele Zao# Uncle Mike# Margi Thompson# Ben Shaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Fantasy# Paranormal# Romance# Werewolves# Vampires# Paranormal Romance# Shapeshifters# Fiction# Magic", "9780000000000", "English", 326, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3020, 645, "Wolf-Speaker", "Wolf-Speaker", "Veralidaine Sarrasri# Numair Salmalín# Rikash Moonsword# Skysong (Kitten)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Magic# Young Adult Fantasy# Adventure# High Fantasy# Dragons# Science Fiction Fantasy# Teen", "9780000000000", "English", 344, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3021, 1452, "Purple Hibiscus", "Purple Hibiscus", "Kambili# Jaja# Eugene# Beatrice...", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Africa# Historical Fiction# Nigeria# Contemporary# Literary Fiction# African Literature# Novels# Young Adult# Coming Of Age", "9780000000000", "English", 336, 56 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3022, 3023, "Treacherous Estate", "Treacherous Estate", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "", "9780000000000", "English", 314, 498 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3023, 135, "Norse Mythology", "Norse Mythology", "Odin# Thor (Norse Mythology)# Loki", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Mythology# Fiction# Audiobook# Short Stories# Classics# Adult# Historical Fiction# Retellings# Religion", "10000000000000", "English", 301, 84 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3024, 2233, "Betrayal High", "Betrayal High", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Drama# Contemporary# Epic", "B08BX5DXD6", "English", 0, 3025 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3025, 3026, "We Were the Mulvaneys", "We Were the Mulvaneys", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Literary Fiction# Contemporary# Novels# Adult Fiction# Family# Literature# Classics# Drama# Adult", "9780000000000", "English", 454, 333 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3026, 3027, "The Charm School", "The Charm School", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Espionage# Suspense# Mystery Thriller# Historical Fiction# Russia# Action# Spy Thriller", "9780000000000", "English", 816, 3027 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3027, 914, "Forest of Secrets", "Forest of Secrets", "Graystripe# Fireheart# Sandstorm# Bluestar# Tigerclaw# Whitestorm# Dustpelt# Crookedstar# Darkstripe# Longtail# Runningwind# Willowpelt# Mousefur# Frostfur# Brindleface# Goldenflower# Speckletail# Halftail# Patchpelt# One-eye# Dappletail# Brokenstar# Runningnose# Nightpelt# Dawncloud# Tallstar# Smallear# Yellowfang# Wetfoot# Cinderfur# Littlecloud# Deadfoot# Barkface# Mudclaw# Tornear# Onewhisker# Ashfoot# Morningflower# Leopardfur# Mudfur# Blackclaw# Stonefur# Mistyfoot# Loudbelly# Silverstream# Swiftpaw# Cloudpaw# Brightpaw# Thornpaw# Darkflower# Tallpoppy# Graypool# Nightstar# Brackenpaw", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Animals# Fiction# Middle Grade# Young Adult# Childrens# Adventure# Cats# Animal Fiction# Action", "9780000000000", "English", 312, 522 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3028, 3029, "Dead Poets Society", "Dead Poets Society", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.21", " Nuten Hatırnaz (Translator)\"", " Suzan Cenani Alioğlu (Translator)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3029, 3030, "الإسلام بين الشرق والغرب", "الإسلام بين الشرق والغرب", "9790000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Arabic", "4.46", " عبد الوهاب المسيري (Introducer)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3030, 3031, "\"Naruto", "\"Naruto", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.39", " Katy Bridges (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3031, 2352, "Princess of the Midnight Ball", "Princess of the Midnight Ball", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fairy Tales# Romance# Retellings# Fiction# Magic# Fairy Tale Retellings# Young Adult Fantasy# Teen", "9780000000000", "English", 280, 323 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3032, 831, "Tricks", "Tricks", "Eden Streit# Seth Parnell# Whitney Lang# Ginger Cordell# Cody Bennett", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Realistic Fiction# LGBT# Teen# Abuse# Romance# Mental Health", "9780000000000", "English", 627, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3033, 3034, "The Girl Who Circumnavigated Fairyland in a Ship of Her Own Making", "The Girl Who Circumnavigated Fairyland in a Ship of Her Own Making", "Iago# September# A-Through-L# Saturday (a Marid)# The Green Wind# Leopard of Little Breezes# Queen Mallow# The Marquess", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Middle Grade# Childrens# Fairy Tales# Adventure# Magic# Dragons# Science Fiction Fantasy", "9780000000000", "English", 247, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3034, 3035, "Luck in the Shadows", "Luck in the Shadows", "Alec í Amasa of Kerry# Seregil í Korit Solun Meringil Bôkthersa", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# LGBT# M M Romance# Fiction# Romance# High Fantasy# Queer# Magic# Adventure# Gay", "9780000000000", "English", 479, 650 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3035, 2618, "Tommaso", "Tommaso", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Fantasy# Mythology# Vampires# Demons# Humor# Gods# Urban Fantasy", "9780000000000", "English", 334, 2618 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3036, 3037, "The Reluctant Fundamentalist", "The Reluctant Fundamentalist", "Changez# Érica", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Pakistan# Contemporary# Literary Fiction# Novels# Literature# Asia# Religion# Adult# School", "B004IPPINW", "English", 228, 3037 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3037, 3038, "The Ransom of Red Chief", "The Ransom of Red Chief", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Short Stories# Fiction# Humor# Young Adult# Childrens# Literature# School# American# Comedy", "9780000000000", "", 32, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3038, 2649, "Once and Always", "Once and Always", "Jason Fielding# Victoria Seaton", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Romance# Romance# Historical# Historical Fiction# Regency# Fiction# Adult# Regency Romance# Chick Lit# British Literature", "9780000000000", "English", 400, 241 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3039, 3040, "Jack Who?: Perfect Storms", "Jack Who?: Perfect Storms", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Music# Contemporary Romance# Contemporary# Chick Lit# Rock N Roll# New Adult# Adult# Musicians# Fiction", "9780000000000", "English", 185, 3040 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3040, 486, "Dress Your Family in Corduroy and Denim", "Dress Your Family in Corduroy and Denim", "David Sedaris", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Humor# Nonfiction# Memoir# Essays# Short Stories# Comedy# Audiobook# Biography# Biography Memoir# Autobiography", "9780000000000", "English", 257, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3041, 3042, "Savvy", "Savvy", "Mibs Beaumont", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Middle Grade# Young Adult# Fiction# Childrens# Adventure# Magic# Juvenile# Family# Coming Of Age", "9780000000000", "English", 342, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3042, 216, "Sula", "Sula", "Nel Wright Greene# Sula Peace# Helene Wright# Eva Peace# Hannah Peace", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Historical Fiction# African American# Literature# Novels# Literary Fiction# School# Race# Feminism", "9780000000000", "English", 174, 883 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3043, 236, "Hannibal Rising", "Hannibal Rising", "Hannibal Lecter", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fiction# Thriller# Mystery# Crime# Suspense# Drama# Novels# Mystery Thriller# Psychological Thriller", "9780000000000", "English", 336, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3044, 3045, "The Temple of the Golden Pavilion", "The Temple of the Golden Pavilion", "Fiction# Japan# Japanese Literature# Classics# Literature# Historical Fiction# Asia# Novels# 20th Century# Asian Literature", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.98", 0, 2780 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3045, 3046, "The Looking Glass Wars", "The Looking Glass Wars", "Alyss Heart# Hatter Madigan# Dodge Anderson# Bibwit Hare# Redd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Retellings# Adventure# Steampunk# Magic# Fairy Tales# Young Adult Fantasy# Teen", "9780000000000", "English", 364, 657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3046, 1813, "The Eighth Sister", "The Eighth Sister", "Charles Jenkins", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Mystery Thriller# Espionage# Audiobook# Suspense# Contemporary# Crime# Novels", "B07D6PZ6P1", "English", 437, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3047, 1983, "Gardens of the Moon", "Gardens of the Moon", "Kalam Mekhar# Quick Ben# Raest# Kruppe# Baruk# Anomander Rake# Whiskeyjack# Crokus# Sorry", new DateTime(2022, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Epic# Science Fiction Fantasy# Dark Fantasy# Magic# Adult# Audiobook", "9780000000000", "English", 657, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3048, 440, "The Promise", "The Promise", "Reuven Malter# Danny Saunders", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Jewish# Classics# Historical Fiction# Religion# Judaism# Literature# Novels# Young Adult# Literary Fiction", "9780000000000", "English", 368, 61 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3049, 3050, "All the Ugly and Wonderful Things", "All the Ugly and Wonderful Things", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Romance# Adult# Adult Fiction# Literary Fiction# Abuse# Dark# Audiobook# Coming Of Age", "9780000000000", "English", 346, 3050 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3050, 3051, "La tregua", "La tregua", "Martín Santomé", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Romance# Spanish Literature# Novels# Latin American# Literature# Latin American Literature# Drama# School", "9790000000000", "Spanish", 368, 2884 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3051, 1282, "Dirty Red", "Dirty Red", "Olivia Kaspen# Caleb Drake# Leah Smith# Noah Stein# Cammie Chase# Samuel Foster# Seth Drake", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Contemporary# Contemporary Romance# Adult# Drama# Chick Lit# Dark# Fiction# Young Adult", "B00ARNWQ98", "English", 265, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3052, 2271, "This Savage Song", "This Savage Song", "August Flynn# Katherine Kate Olivia Harker# Henry Flynn# Callum Harker# Leo Flynn# Sloan# Ilsa Flynn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Paranormal# Dystopia# Urban Fantasy# Fiction# Young Adult Fantasy# Audiobook# Horror# Science Fiction", "B013PKDS5A", "English", 469, 1533 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3053, 656, "Golden Fool", "Golden Fool", "The Fool# FitzChivalry Farseer# Chade Fallstar# Kettricken# Dutiful Farseer# Thick", new DateTime(2022, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Adventure# Magic# Dragons# Epic# Adult", "9780000000000", "English", 709, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3054, 3055, "The Alice Network", "The Alice Network", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Historical# Audiobook# World War II# War# France# World War I# Adult# Book Club", "9780000000000", "English", 503, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3055, 3056, "\"The Chronicles of Thomas Covenant", "\"The Chronicles of Thomas Covenant", "Fantasy# Fiction# Epic Fantasy# Science Fiction# Science Fiction Fantasy# High Fantasy# Adventure# Epic# Magic# Unfinished", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.8", 0, 3056 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3056, 368, "Covet", "Covet", "Jim Heron# Vin DiPietro# Adrian Vogel# Eddie Blackhawk# Devina Avale# Marie-Terese Boudreau", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Paranormal Romance# Romance# Angels# Fantasy# Urban Fantasy# Demons# Adult# Fiction# Supernatural", "9780000000000", "English", 474, 73 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3057, 125, "Baudolino", "Baudolino", "Fiction# Historical Fiction# Fantasy# Literature# Historical# Italian Literature# Italy# Novels# Medieval# Classics", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.75", 0, 3058 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3058, 3059, "Three Day Road", "Three Day Road", "Xavier Bird# Niska# Elijah Whiskeyjack", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Canada# War# Historical# World War I# Canadian Literature# Novels# Literature# Book Club", "9780000000000", "English", 384, 3059 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3059, 3060, "The Essential Rumi", "The Essential Rumi", "Poetry# Spirituality# Classics# Philosophy# Religion# Nonfiction# Islam# Literature# Inspirational# Mysticism", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.41", 0, 3060 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3060, 3061, "The Elfstones of Shannara", "The Elfstones of Shannara", "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Adventure# Magic# Young Adult# Adult# Science Fiction", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.95", 0, 3061 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3061, 3062, "The Monk", "The Monk", "Matilda# Agnes# Ambrosio# Antonia Wyndham# Raymond# Lorenzo", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Gothic# Horror# Fiction# 18th Century# Literature# Fantasy# Historical Fiction# British Literature# Novels", "9780000000000", "English", 431, 786 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3062, 3063, "Radio Silence", "Radio Silence", "Contemporary# Young Adult# LGBT# Fiction# Audiobook# Queer# Mental Health# Young Adult Contemporary# Realistic Fiction# Coming Of Age", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.17", 0, 307 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3063, 3064, "Laskar Pelangi", "Laskar Pelangi", "A Ling# Lintang# Ikal# Muslimah Hafsari# Harfan Effendy Noor# Floriana# Mahar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Fiction# Indonesian Literature# Childrens# Asia# Young Adult# Education# Literature# Adventure# Inspirational", "9790000000000", "Indonesian", 534, 3064 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3064, 371, "Crossroads of Twilight", "Crossroads of Twilight", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# AlLan Mandragoran# Matrim Cauthon# Moiraine Damodred# Min Farshaw# Elayne Trakand# Aviendha# Siuan Sanche# Birgitte Silverbow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Science Fiction Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 704, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3065, 2192, "The Concrete Blonde", "The Concrete Blonde", "Hieronymus Harry Bosch# Jerry Edgar# Irvin Irving# Harvey Ninety Eight Pounds# Sylvia Moore# Joel Bremmer# Honey Chandler# Ray Mora# Larry Sakai# Art Donovan# Frankie Sheehan# Rod Belk# Alva Keyes# Dr. John Locke# Tom Cerrone# Mike Opelt# Victor Amado# Hans Rollenberger# Dan Daly# Terry Lloyd", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Crime# Thriller# Detective# Mystery Thriller# Suspense# Audiobook# Police# Murder Mystery", "9780000000000", "English", 484, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3066, 3067, "Wasted: A Memoir of Anorexia and Bulimia", "Wasted: A Memoir of Anorexia and Bulimia", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Psychology# Mental Health# Mental Illness# Biography# Biography Memoir# Autobiography# Health# Adult", "9780000000000", "English", 298, 87 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3067, 3068, "The Dark Divine", "The Dark Divine", "Grace Divine# Daniel Kalbi# Jude Divine", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Fantasy# Werewolves# Romance# Paranormal Romance# Supernatural# Fiction# Urban Fantasy# Young Adult Paranormal", "9780000000000", "English", 372, 2368 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3068, 1455, "Dragonsong", "Dragonsong", "Menolly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Dragons# Young Adult# Fiction# Science Fiction Fantasy# Adventure# High Fantasy# Speculative Fiction# Teen", "9780000000000", "English", 192, 1205 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3069, 830, "The Screaming Staircase", "The Screaming Staircase", "Lucy Carlyle# Anthony Lockwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mystery# Horror# Paranormal# Middle Grade# Ghosts# Fiction# Supernatural# Adventure", "9780000000000", "English", 440, 3070 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3070, 2462, "Fueled", "Fueled", "Rylee Thomas# Colton Donovan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary Romance# Sports# Erotica# Contemporary# Sports Romance# New Adult# Adult# Erotic Romance# Abuse", "B00ESJ3S94", "English", 356, 2462 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3071, 3072, "ترانيم في ظل تمارا", "ترانيم في ظل تمارا", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Short Stories# Literature# Anthologies# Egyptian Literature# Spirituality# Romantic# Egypt# Romance", "10000000000000", "Arabic", 160, 1526 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3072, 3073, "How to Kill a Rock Star", "How to Kill a Rock Star", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Contemporary# Music# New Adult# Contemporary Romance# Fiction# Chick Lit# Adult# Young Adult# Musicians", "9780000000000", "English", 417, 3073 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3073, 1917, "The Hundred Thousand Kingdoms", "The Hundred Thousand Kingdoms", "Dekarta Arameri# Kinneth Arameri (post mortem)# Yeine Darr/Arameri# Scimina Arameri# Relad Arameri# Itempas# Nahadoth# Enefa (post mortem)# Sieh# Tvril Arameri", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Romance# High Fantasy# Epic Fantasy# Adult# Magic# Science Fiction Fantasy# Young Adult# Science Fiction", "9780000000000", "English", 427, 3074 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3074, 3075, "Kurintor Nyusi: Diverse Epic Fantasy", "Kurintor Nyusi: Diverse Epic Fantasy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Contemporary# Drama# Fiction# Novels", "B07BFXFT92", "", 304, 3075 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3075, 293, "All Things Wise and Wonderful", "All Things Wise and Wonderful", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Animals# Memoir# Biography# Classics# Humor# Autobiography# Biography Memoir# British Literature# Short Stories", "9780000000000", "English", 448, 312 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3076, 3077, "\"Flow My Tears", "\"Flow My Tears", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.91", " Chris Moore (Illustrator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3077, 3078, "Bone: The Complete Edition", "Bone: The Complete Edition", "Rose# Fone Bone# Smiley Bone# Phoney Bone", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Graphic Novels# Comics# Fantasy# Fiction# Graphic Novels Comics# Young Adult# Adventure# Comic Book# Humor# Childrens", "9780000000000", "English", 1344, 3078 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3078, 1813, "In the Clearing", "In the Clearing", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Crime# Mystery Thriller# Suspense# Audiobook# Contemporary# Adult# Detective", "B013UVNZ7A", "English", 335, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3079, 656, "Assassin's Quest", "Assassin's Quest", "Verity Farseer# The Fool# FitzChivalry Farseer# Regal Farseer# Nighteyes# Kettricken", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# High Fantasy# Adventure# Dragons# Science Fiction Fantasy# Magic# Audiobook# Epic", "10000000000000", "English", 757, 512 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3080, 18, "Through the Looking-Glass and What Alice Found There", "Through the Looking-Glass and What Alice Found There", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.06", " Peter Glassman (Afterword)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3081, 3082, "Snow Like Ashes", "Snow Like Ashes", "Meira# Mather Dynam# Theron Haskar# Sir William Loren# Angra Manu", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Magic# Young Adult Fantasy# High Fantasy# Fiction# Adventure# Dystopia# Audiobook", "9780000000000", "English", 422, 795 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3082, 2891, "Vampire Kisses", "Vampire Kisses", "Raven# Trevor Mitchell# Alexander Sterling", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Romance# Paranormal Romance# Supernatural# Fiction# Teen# Urban Fantasy", "9780000000000", "English", 253, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3083, 3084, "Let's Pretend This Never Happened: A Mostly True Memoir", "Let's Pretend This Never Happened: A Mostly True Memoir", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Humor# Biography# Audiobook# Comedy# Biography Memoir# Autobiography# Adult# Mental Health", "9780000000000", "English", 318, 3084 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3084, 1194, "Dragon Rider", "Dragon Rider", "Ben# Sorrel# Firedrake", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Dragons# Young Adult# Fiction# Childrens# Adventure# Middle Grade# Magic# Audiobook# Juvenile", "9780000000000", "English", 527, 1194 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3085, 88, "The Ruby Circle", "The Ruby Circle", "Sydney Sage# Vasilisa Lissa Dragomir# Dimitri Belikov# Christian Ozera# Edison Eddie Castile# Rosemarie Rose Hathaway# Adrian Ivashkov# Sonya Karp# Daniella Ivashkov# Marcus Finch", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Vampires# Fantasy# Paranormal# Romance# Magic# Urban Fantasy# Supernatural# Paranormal Romance# Witches", "9780000000000", "English", 348, 88 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3086, 3087, "Paula", "Paula", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Spanish Literature# Biography Memoir# Autobiography# Magical Realism# Literature# Latin American# Womens", "9790000000000", "Spanish", 432, 3087 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3087, 1247, "Wise Blood", "Wise Blood", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Southern Gothic# Literature# Novels# Southern# American# Gothic# Religion# Literary Fiction", "9780000000000", "English", 256, 3088 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3088, 3089, "The Body Reader", "The Body Reader", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Fiction# Crime# Suspense# Mystery Thriller# Audiobook# Contemporary# Adult# Detective", "9780000000000", "English", 302, 1813 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3089, 3090, "D'Aulaires' Book of Greek Myths", "D'Aulaires' Book of Greek Myths", "Mythology# Classics# Childrens# Fantasy# Fiction# Picture Books# Greek Mythology# Young Adult# Religion# Greece", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.41", 0, 517 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3090, 3091, "Women Who Run With the Wolves: Myths and Stories of the Wild Woman Archetype", "Women Who Run With the Wolves: Myths and Stories of the Wild Woman Archetype", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Feminism# Psychology# Spirituality# Mythology# Womens# Self Help# Philosophy# Gender# Gender Studies", "9780000000000", "English", 560, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3091, 3092, "Hounded", "Hounded", "Atticus OSullivan# Oberon (Iron Druid)# Granuaile# The Morrigan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Urban Fantasy# Paranormal# Fiction# Magic# Mythology# Vampires# Audiobook# Supernatural# Adult", "9780000000000", "English", 304, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3092, 3093, "The Magic Faraway Tree", "The Magic Faraway Tree", "", new DateTime(2022, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Childrens# Fantasy# Fiction# Classics# Adventure# Young Adult# Magic# Middle Grade# Childrens Classics# British Literature", "9780000000000", "English", 177, 3093 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3093, 3094, "Finding Sky", "Finding Sky", "Zed Benedict# Sky Bright# Xavier Xav Benedict# Victor Benedict# Yves Benedict# Trace Benedict# Will Benedict", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Paranormal Romance# Supernatural# Urban Fantasy# Magic# Fiction# Mystery# Contemporary# High School", "9780000000000", "English", 320, 67 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3094, 3095, "Bad Things", "Bad Things", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotica# New Adult# Contemporary Romance# Contemporary# Adult# BDSM# Erotic Romance# Drama# Musicians", "10000000000000", "English", 367, 3095 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3095, 3096, "Number 13", "Number 13", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Adventure# Mystery# Young Adult# Magic# Paranormal# Drama# Action# Middle Grade# Fiction", "9780000000000", "English", 192, 3096 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3096, 610, "Cancer Ward", "Cancer Ward", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.22", " David Burg (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3097, 3098, "Caged", "Caged", "Dark# Erotica# Romance# Adult# New York# Novels# Crime# Contemporary# Love", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.71", 0, 2877 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3098, 2262, "The Enlightenment of Alexander", "The Enlightenment of Alexander", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Erotic Romance# LGBT# BDSM# M M Romance# Erotica# Fiction# Hockey", "B07DSR8P22", "", 430, 3099 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3099, 1076, "Nicu II and Victoria's Incestuous Romance", "Nicu II and Victoria's Incestuous Romance", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Plays# Contemporary# Historical Fiction# Drama# Romance# Theatre# Tragedy# Suspense# Thriller", "9780000000000", "English", 74, 3100 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3100, 1108, "Hades", "Hades", "Bethany Church# Xavier Woods# Gabriel Church# Ivy Church# Jake Thorn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Angels# Young Adult# Fantasy# Romance# Paranormal# Paranormal Romance# Demons# Supernatural# Fiction# Teen", "9780000000000", "English", 425, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3101, 3102, "A Hidden Fire", "A Hidden Fire", "Beatrice De Novo# Giovanni Gio Vecchio# Carwyn ap Bryn# Tenzin", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Paranormal# Romance# Fantasy# Vampires# Paranormal Romance# Urban Fantasy# Mystery# Adult# Fiction# Supernatural", "B005VTVE0U", "English", 398, 3102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3102, 3103, "Leap of Faith (The Rufino Factor Book One)", "Leap of Faith (The Rufino Factor Book One)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mystery# Fiction# Adventure# Novels# Love Story# New Adult# Adult# Teen", "9780000000000", "", 268, 3103 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3103, 1121, "The Girl Who Chased the Moon", "The Girl Who Chased the Moon", "Emily Benedict# Vance Shelby# Julia Winterson# Win Coffey# Sawyer Anderson", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Magical Realism# Fantasy# Romance# Chick Lit# Contemporary# Magic# Adult# Southern# Adult Fiction", "9780000000000", "English", 269, 47 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3104, 3105, "Supernatural Hero", "Supernatural Hero", "", new DateTime(2022, 10, 13, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fiction# Middle Grade# Fantasy# Childrens# Young Adult", "9780000000000", "English", 155, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3105, 1282, "Mud Vein", "Mud Vein", "Senna Richards", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Dark# New Adult# Contemporary# Mystery# Thriller# Suspense# Adult# Fiction# Mystery Thriller", "B00JHVUQ70", "English", 283, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3106, 338, "Notes from a Small Island", "Notes from a Small Island", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Travel# Nonfiction# Humor# Memoir# British Literature# Biography# Audiobook# Comedy# Travelogue# History", "9780000000000", "English", 324, 279 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3107, 3108, "Loving Frank", "Loving Frank", "Frank Lloyd Wright# Mamah Borthwick Cheney", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Book Club# Historical# Architecture# Romance# Adult Fiction# Adult# Art# Audiobook", "9780000000000", "English", 384, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3108, 506, "Chainfire", "Chainfire", "", new DateTime(2022, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Magic# Adventure# Epic# Romance# Adult", "9780000000000", "English", 756, 1032 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3109, 3110, "Ancillary Justice", "Ancillary Justice", "Breq# Anaander Mianaai# Seivarden Vendaai# Lieutenant Awn", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Science Fiction Fantasy# Space# Fantasy# Adult# Speculative Fiction# Audiobook# Hugo Awards", "9780000000000", "English", 416, 705 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3110, 3111, "Life: A User's Manual", "Life: A User's Manual", "Fiction# France# Classics# French Literature# Novels# Literature# 20th Century# Literary Fiction# Philosophy# Contemporary", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.22", 0, 3111 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3111, 908, "Mossflower", "Mossflower", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Young Adult# Childrens# Animals# Adventure# Middle Grade# Science Fiction Fantasy# Juvenile# Classics", "9780000000000", "English", 373, 3112 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3112, 3113, "....Și la sfârșit a mai rămas coșmarul (...And Then The Nightmare Came At Last)", "....Și la sfârșit a mai rămas coșmarul (...And Then The Nightmare Came At Last)", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Horror# Fantasy# Romanian Literature# Vampires# Werewolves# Crime# Medieval", "9790000000000", "Romanian", 384, 3113 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3113, 3114, "The Christmas Sweater", "The Christmas Sweater", "Eddie", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Christmas# Fiction# Inspirational# Holiday# Christian Fiction# Adult Fiction# Christian# Adult# Family# Book Club", "9780000000000", "English", 284, 3114 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3114, 3115, "At Home in Mitford", "At Home in Mitford", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Christian Fiction# Christian# Adult Fiction# Contemporary# Inspirational# Novels# Adult# Romance# Religion", "9780000000000", "English", 413, 3115 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3115, 3116, "Wings of Fire: An Autobiography", "Wings of Fire: An Autobiography", "Biography# Nonfiction# Autobiography# India# Indian Literature# Inspirational# Memoir# Science# Biography Memoir# Self Help", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9790000000000", "English", "4.24", 0, 1069 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3116, 3117, "How Not to Murder Your Grumpy", "How Not to Murder Your Grumpy", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Humor# Nonfiction", "9780000000000", "English", 106, 3117 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3117, 3118, "Van Laven Chronicles: Throne of Novoxos", "Van Laven Chronicles: Throne of Novoxos", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fantasy# Romance", "10000000000000", "", 437, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3118, 803, "Child of the Prophecy", "Child of the Prophecy", "Lady Oonagh# Darragh# Fainne# Ciaran# Clodagh# Liadan# Eamonn# Niamh# Deirdre", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Romance# Historical Fiction# Fiction# Historical# Magic# Historical Fantasy# Young Adult# Science Fiction Fantasy# Adult", "9780000000000", "English", 596, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3119, 3120, "Novecento. Un monologo", "Novecento. Un monologo", "Novecento", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Italian Literature# Plays# Italy# Classics# Novels# Theatre# Contemporary# School# Drama", "9790000000000", "Italian", 62, 3120 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3120, 635, "The Bourne Supremacy", "The Bourne Supremacy", "Jason Bourne", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Thriller# Mystery# Suspense# Espionage# Action# Adventure# Drama# Crime# Mystery Thriller", "9780000000000", "English", 688, 635 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3121, 1107, "The Enchantress", "The Enchantress", "Billy the Kid# Nicholas Flamel# Perenelle Flamel# Josh Newman# Sophie Newman# Sgàthach# the Warrior Maid# Doctor John Dee# Machiavelli# St. Germaine# Joan of Arc", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Mythology# Fiction# Magic# Adventure# Urban Fantasy# Young Adult Fantasy# Audiobook# Teen", "9780000000000", "English", 513, 188 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3122, 3123, "The Blindspots Between Us: How to Overcome Unconscious Cognitive Bias and Build Better Relationships", "The Blindspots Between Us: How to Overcome Unconscious Cognitive Bias and Build Better Relationships", "Psychology# Nonfiction# Self Help# Personal Development# Relationships# Leadership# Mental Health# Business# Communication# Sociology", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "", "4.27", 0, 449 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3123, 371, "A Crown of Swords", "A Crown of Swords", "Rand alThor# Nynaeve alMeara# Egwene alVere# Perrin Aybara# Matrim Cauthon# Min Farshaw# Elayne Trakand# Aviendha# Siuan Sanche# Birgitte Silverbow", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Science Fiction Fantasy# High Fantasy# Epic# Adventure# Audiobook# Magic# Adult", "9780000000000", "English", 880, 343 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3124, 1378, "The Member of the Wedding", "The Member of the Wedding", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Coming Of Age# Novels# Southern# Young Adult# Literature# American# Southern Gothic# Literary Fiction", "9780000000000", "English", 163, 203 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3125, 246, "Fairest", "Fairest", "Princess Winter# Linh Cinder# Queen Levana# Jacin Clay# Queen Channery", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Science Fiction# Retellings# Dystopia# Fiction# Fairy Tales# Romance# Audiobook# Novella", "9780000000000", "English", 222, 246 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3126, 3127, "\"Never Go With Your Gut: How Pioneering Leaders Make the Best Decisions and Avoid Business Disasters (Avoid Terrible Advice", "\"Never Go With Your Gut: How Pioneering Leaders Make the Best Decisions and Avoid Business Disasters (Avoid Terrible Advice", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.44", " Howard J. Ross (Goodreads Author) (Foreword)\"", "\"Gleb Tsipursky (Goodreads Author)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3127, 1001, "At the Mountains of Madness", "At the Mountains of Madness", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.87", " S.T. Joshi (Editor)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3128, 3129, "\"Memories", "\"Memories", " Clara Winston (Translator)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, " Richard Winston (Translator)", " Aniela Jaffé (Editor)", "\"C.G. Jung", 0, 3129 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3129, 2826, "A Deepness in the Sky", "A Deepness in the Sky", "Pham Nuwen", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Space Opera# Hugo Awards# Science Fiction Fantasy# Aliens# Fantasy# Speculative Fiction# Space# Hard Science Fiction", "9780000000000", "English", 775, 2826 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3130, 3131, "Generation X: Tales for an Accelerated Culture", "Generation X: Tales for an Accelerated Culture", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Canada# Novels# Literature# Classics# Literary Fiction# Short Stories# 20th Century# American", "9780000000000", "English", 211, 3131 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3131, 3132, "\"The End of Faith: Religion", "\"The End of Faith: Religion", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.91", "Sam Harris", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3132, 3133, "The Year of Magical Thinking", "The Year of Magical Thinking", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Memoir# Biography# Biography Memoir# Death# Autobiography# Audiobook# Essays# American# Psychology", "9780000000000", "English", 227, 121 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3133, 497, "The Lost Prince", "The Lost Prince", "Meghan Chase# Ethan Chase# MacKenzie Kenzie St. James", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Romance# Paranormal# Fairies# Fae# Magic# Urban Fantasy# Fiction# Adventure", "9780000000000", "English", 377, 497 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3134, 3135, "The Tender Bar: A Memoir", "The Tender Bar: A Memoir", "J.R. Moehringer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Memoir# Nonfiction# Biography# Autobiography# Biography Memoir# Coming Of Age# Book Club# New York# Adult# Audiobook", "9780000000000", "English", 416, 132 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3135, 3136, "\"Capital", "\"Capital", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "4.22", " Ben Fowkes (Translator)\"", " Ernest Mandel (Introduction)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3136, 3137, "Find You in the Dark", "Find You in the Dark", "Maggie Young# Clayton Reed", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# New Adult# Young Adult# Contemporary# Contemporary Romance# High School# Dark# Mental Illness# Abuse# Drama", "B009PBUUDC", "English", 290, 1285 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3137, 3138, "Stepping Beyond Intention", "Stepping Beyond Intention", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Epic# Novels# Fiction# Book Club# Contemporary", "10000000000000", "", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3138, 2969, "Whispers", "Whispers", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Action# Fantasy# Suspense# Adventure", "9780000000000", "", 0, 1213 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3139, 3140, "The Good Girl", "The Good Girl", "Mia Dennett# Colin Thatcher# Eve Dennett# James Dennett# Gabe Hoffman# Grace Dennett# Ayanna Jackson# Dalmar", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Suspense# Mystery Thriller# Audiobook# Crime# Adult# Contemporary# Psychological Thriller", "9780000000000", "English", 352, 3140 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3140, 3141, "Still Missing", "Still Missing", "Annie OSullivan", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Suspense# Mystery Thriller# Crime# Drama# Contemporary# Adult Fiction# Adult", "9780000000000", "English", 352, 102 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3141, 3142, "Democracy in America", "Democracy in America", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.03", " Gerald Bevan (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3142, 839, "The Mysterious Stranger", "The Mysterious Stranger", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Classics# Fantasy# Short Stories# Literature# Philosophy# American# Religion# Novels# Horror", "9780000000000", "English", 121, 3143 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3143, 1133, "Jinx", "Jinx", "Jean Honeychurch# Zach Rosen# Evelyn Gardiner# Ted Gardiner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Fantasy# Romance# Paranormal# Chick Lit# Magic# Fiction# Witches# Teen# Supernatural", "9780000000000", "English", 262, 2923 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3144, 3145, "Shadows of Atlantis: Awakening", "Shadows of Atlantis: Awakening", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Novels# Book Club# Contemporary# Fantasy# Drama# Adult# Adventure# Magic# Young Adult", "9780000000000", "", 0, 3145 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3145, 1455, "Dragonsinger", "Dragonsinger", "Menolly", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Science Fiction# Dragons# Fiction# Young Adult# Science Fiction Fantasy# Adventure# High Fantasy# Teen# Young Adult Fantasy", "9780000000000", "English", 288, 1364 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3146, 335, "The Three Stigmata of Palmer Eldritch", "The Three Stigmata of Palmer Eldritch", "Palmer Eldritch", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Science Fiction# Fiction# Science Fiction Fantasy# Novels# Speculative Fiction# Dystopia# American# Classics# Religion# Fantasy", "9780000000000", "English", 231, 685 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3147, 3148, "Worm", "Worm", "Fantasy# Science Fiction# Fiction# Superheroes# Urban Fantasy# Dystopia# Young Adult# Horror# Unfinished# Thriller", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "10000000000000", "English", "4.63", 0, 3148 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3148, 3149, "Those Who Save Us", "Those Who Save Us", "Anna Schlemmer", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Holocaust# World War II# Historical# War# Germany# Book Club# Adult Fiction# Adult", "9780000000000", "English", 479, 3149 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3149, 3150, "A Job From Hell", "A Job From Hell", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Paranormal# Young Adult# Romance# Fantasy# Paranormal Romance# Supernatural# Demons# Magic# Urban Fantasy", "9780000000000", "English", 371, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3150, 1422, "The Apprentice", "The Apprentice", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Thriller# Crime# Fiction# Suspense# Mystery Thriller# Detective# Audiobook# Adult# Murder Mystery", "9780000000000", "English", 376, 9 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3151, 158, "An Ideal Husband", "An Ideal Husband", "Robert Chiltern# Lady Chiltern# Lord Goring# Mrs. Cheveley# Mable Chiltern# Lord Caversham", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Classics# Plays# Fiction# Drama# Humor# 19th Century# Literature# Theatre# Romance# British Literature", "9780000000000", "English", 78, 660 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3152, 645, "Page", "Page", "Keladry", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Fiction# Young Adult Fantasy# Magic# Adventure# High Fantasy# Teen# Science Fiction Fantasy# Childrens", "10000000000000", "English", 290, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3153, 3154, "Arrow of the Mist", "Arrow of the Mist", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Middle Grade# Young Adult Fantasy# Fiction# Childrens# Paranormal# Adventure# Magic# High Fantasy", "B00BTK0136", "English", 257, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3154, 3155, "\"Love", "\"Love", "New Adult# Romance# Contemporary# Erotica# Contemporary Romance# Young Adult# Humor# Fiction# Amazon# Coming Of Age", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "3.26", 0, 1386 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3155, 751, "Into the Water", "Into the Water", "Jules (Julia) Abbott# Lena Abbott# Sean Townsend# Patrick Townsend# Helen Townsend# Erin Morgan# Mark Henderson# Nickie Stage# Louise Whittaker# Josh Whittaker", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Fiction# Thriller# Mystery Thriller# Audiobook# Crime# Suspense# Adult# Contemporary# Adult Fiction", "9780000000000", "English", 386, 45 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3156, 3157, "Waterfall", "Waterfall", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Time Travel# Young Adult# Historical Fiction# Fantasy# Romance# Historical# Christian Fiction# Christian# Fiction# Science Fiction", "9780000000000", "English", 369, 3157 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3157, 3158, "Death and the Dervish", "Death and the Dervish", "9780000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "4.54", " Stephen M. Dickey (Translation)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3158, 3159, "Scarlett", "Scarlett", "Scarlett OHara# Rhett Butler# Ashley Wilkes# Eulalie# Pauline# Mammy Abigail# Lord Colum# Old Katie Scarlett# Anne Hampton# Wade Hamilton# Mrs. Fitzpatrick# Katie Colum OHara# Lord Fenton# Suellen# Aunt Pittypat# Rosemary (Gone With the Wind)", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Romance# Classics# Historical# Historical Romance# Adult Fiction# Adult# Novels# Chick Lit", "9780000000000", "English", 896, 96 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3159, 3160, "The Fyfield Plantation", "The Fyfield Plantation", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Book Club# Contemporary# Young Adult# Epic# New Adult", "10000000000000", "English", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3160, 3161, "The Hangman's Daughter", "The Hangman's Daughter", "10000000000000", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "English", "3.72", " Sabine Marić (Translator)\"", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3161, 1645, "Rumo & His Miraculous Adventures", "Rumo & His Miraculous Adventures", "Fantasy# Fiction# Humor# German Literature# Adventure# Young Adult# Science Fiction Fantasy# Audiobook# High Fantasy# Germany", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "9780000000000", "English", "4.48", 0, 3162 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3162, 1213, "A Woman to Blame", "A Woman to Blame", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Drama# Epic", "9780000000000", "", 0, 1213 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3163, 2634, "The Place That Gave", "The Place That Gave", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Novels# Contemporary# Drama# Epic", "9800000000000", "English", 334, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3164, 3165, "The Camel Club", "The Camel Club", "Adelphia# Oliver Stone (Camel Club)# Alex Ford# Milton Farb# Caleb Shaw# Reuben Rhodes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Thriller# Fiction# Mystery# Suspense# Crime# Mystery Thriller# Drama# Audiobook# Action# Adventure", "10000000000000", "English", 606, 3165 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3165, 2368, "The Naturals", "The Naturals", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Mystery# Young Adult# Thriller# Contemporary# Crime# Romance# Fiction# Mystery Thriller# Suspense# Paranormal", "9780000000000", "English", 308, 445 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3166, 1116, "On Beauty", "On Beauty", "Howard Belsey# Kiki Belsey# Victoria Kipps# Jerome Belsey", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Contemporary# Novels# Literary Fiction# Literature# British Literature# Adult Fiction# Family# Race# Adult", "9780000000000", "English", 445, 23 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3167, 3168, "The Long Walk: The True Story of a Trek to Freedom", "The Long Walk: The True Story of a Trek to Freedom", "Slavomir Rawicz", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Biography# Travel# Survival# War# Autobiography# World War II# Memoir# Historical# Biography Memoir", "9780000000000", "English", 256, 3168 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3168, 2557, "On the Fence", "On the Fence", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Romance# Young Adult# Contemporary# Fiction# Young Adult Contemporary# High School# Young Adult Romance# Audiobook# Contemporary Romance# Teen", "9780000000000", "English", 293, 220 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3169, 3170, "The Crazy Life of a Kid from Brooklyn", "The Crazy Life of a Kid from Brooklyn", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Drama# Contemporary# Book Club", "9780000000000", "", 328, 750 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3170, 2540, "A Spell for Chameleon", "A Spell for Chameleon", "Sabrina# Cherie# Martha# Bink# Chester# Crombie# Beauregard# Chameleon# Chilk# Donald The Shade# Gap Dragon# Hastings# Hermin the Hermit# Humfrey# Jama# Justin Tree# Manticora# Munly# Numbo# Potipher# Spring of Life# Storm King# Zink# Iris (Piers Anthony)# Millie# Trent# Bigfoot# Roland# Bianca# Sally", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Humor# Science Fiction Fantasy# Young Adult# Magic# Adventure# Science Fiction# High Fantasy# Comedy", "9780000000000", "English", 344, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3171, 2649, "Something Wonderful", "Something Wonderful", "Jordan Townsende# Alexandra Lawrence", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Romance# Romance# Historical# Historical Fiction# Regency# Fiction# Adult# Regency Romance# Chick Lit# British Literature", "9780000000000", "English", 418, 137 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3172, 1550, "Hard Bitten", "Hard Bitten", "Scott Grey# Luc (Chicagoland Vampires)# Caroline Merit Merit# Morgan Greer# Ethan Sullivan# Mallory Carmichael# Catcher Bell# Jeff Christopher# Celina Desaulniers# Simon# Lindsey# Jonah# Seth Tate# Chuck Merit# Darius West# Noah Beck# Kelley (Some Girls Bite)# Malik Washington", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Vampires# Paranormal# Fantasy# Romance# Paranormal Romance# Magic# Adult# Supernatural# Shapeshifters", "9780000000000", "English", 350, 65 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3173, 831, "Fallout", "Fallout", "Autumn Rose Shepherd# Hunter Seth Haskins# Summer Lily Kenwood", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Poetry# Fiction# Contemporary# Realistic Fiction# Teen# Romance# Mental Health# Abuse# Young Adult Contemporary", "9780000000000", "English", 665, 29 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3174, 1595, "The Adoration of Jenna Fox", "The Adoration of Jenna Fox", "Matthew Fox# Ethan# Jenna Fox# Claire Fox# Allys# Dane# Clayton Bender# Locke Jenkins# Kara Manning", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Science Fiction# Dystopia# Fiction# Teen# Fantasy# Mystery# Romance# Audiobook# Futuristic", "9780000000000", "English", 266, 2945 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3175, 3176, "Double Indemnity", "Double Indemnity", "Walter Huff# Phyllis Nirdlinger# Barton Keyes", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Mystery# Noir# Crime# Classics# Thriller# Mystery Thriller# Novels# American# Hard Boiled", "9780000000000", "English", 115, 1657 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3176, 3177, "Every Last Word", "Every Last Word", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Contemporary# Mental Health# Romance# Mental Illness# Fiction# Realistic Fiction# Young Adult Contemporary# Poetry# Audiobook", "9780000000000", "English", 358, 5 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3177, 3178, "Homegoing", "Homegoing", "Cobbe Otcher# Effia Otcher# Big Man Assare# Esi Assare# Quey Collins# Richard Collins# Ness Stockham# Sam# James Richard Collins# Akosua Mensah# Kojo Freeman# Anna Foster# Abena Collins# Ohene Nyarko# H Black# Ethe Jackson# Akua Collins# Asamoah Agyekum# Eli Dalton# Willie Black# Robert Clifton# Yaw Agyekum# Esther Amoah# Carson Clifton# Amani Zulema# Marjorie Agyekum# Marcus Clifton# Maame", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Historical Fiction# Fiction# Africa# Historical# Literary Fiction# Audiobook# Adult# Race# Adult Fiction# Ghana", "9780000000000", "English", 320, 6 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3178, 3179, "Fragile Lives: A Heart Surgeon’s Stories of Life and Death on the Operating Table", "Fragile Lives: A Heart Surgeon’s Stories of Life and Death on the Operating Table", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Medicine# Medical# Science# Memoir# Biography# Autobiography# Health# Biography Memoir# Health Care", "9780000000000", "English", 349, 3179 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3179, 2769, "La resistencia", "La resistencia", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Young Adult# Spanish Literature# Romance# Fiction# Dragons# Magic# Adventure# Childrens# Epic Fantasy", "9790000000000", "Spanish", 558, 2769 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3180, 88, "Succubus Dreams", "Succubus Dreams", "Georgina Kincaid# Jerome# Doug Sato# Cody# Seth Mortensen# Hugh Mitchell# Carter# Maddie Sato# Dante Moriarty# Tawny Johnson# Erik Lancaster# Peter Gwel", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Urban Fantasy# Paranormal# Fantasy# Romance# Paranormal Romance# Demons# Vampires# Adult# Angels# Supernatural", "9780000000000", "English", 296, 2658 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3181, 3182, "Infinite Days", "Infinite Days", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Vampires# Young Adult# Paranormal# Fantasy# Romance# Urban Fantasy# Paranormal Romance# Fiction# Supernatural# Teen", "9780000000000", "English", 308, 3182 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3182, 2292, "The Haunted", "The Haunted", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Young Adult# Paranormal# Ghosts# Fantasy# Romance# Supernatural# Paranormal Romance# Mystery# Young Adult Paranormal# Urban Fantasy", "9780000000000", "English", 467, 238 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3183, 725, "In Defense of Food: An Eater's Manifesto", "In Defense of Food: An Eater's Manifesto", "", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Nonfiction# Food# Health# Science# Nutrition# Audiobook# Cooking# Environment# Foodie# Sustainability", "9780000000000", "English", 205, 2426 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3184, 61, "MaddAddam", "MaddAddam", "Toby# Ren# Crake# Zeb", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Science Fiction# Dystopia# Post Apocalyptic# Speculative Fiction# Canada# Fantasy# Audiobook# Science Fiction Fantasy# Novels", "9780000000000", "English", 394, 2009 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3185, 671, "The Republic of Thieves", "The Republic of Thieves", "Locke Lamora# Jean Tannen# Sabetha Belacoros", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fantasy# Fiction# Epic Fantasy# Adventure# High Fantasy# Audiobook# Adult# Science Fiction Fantasy# Magic# Crime", "9780000000000", "English", 650, 12 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3186, 3187, "The Nicomachean Ethics", "The Nicomachean Ethics", "English", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "3.96", " Hugh Tredennick (Editor)\"", " Jonathan Barnes (Introduction)", 0, 7 });

            migrationBuilder.InsertData(
                table: "Books",
                columns: new[] { "Id", "AutherId", "BookDescription", "BookName", "Characters", "DateOfRelease", "Edetion", "GeneresTags", "ISBN", "Language", "NumberOfPages", "PublisherId" },
                values: new object[] { 3187, 3188, "This is Where I Leave You", "This is Where I Leave You", "Judd Foxman# Paul Foxman# Phillip Foxman# Wendy Foxman# Hilary Foxman# Annie Foxman# Jen Foxman# Linda Callen# Horry Callen# Charles Grodner", new DateTime(1980, 8, 11, 0, 11, 46, 939, DateTimeKind.Local).AddTicks(8296), (byte)1, "Fiction# Humor# Contemporary# Adult Fiction# Adult# Family# Book Club# Novels# Audiobook# Literary Fiction", "9780000000000", "English", 339, 635 });

            migrationBuilder.CreateIndex(
                name: "IX_BookReviews_BookId",
                table: "BookReviews",
                column: "BookId");

            migrationBuilder.CreateIndex(
                name: "IX_Books_AutherId",
                table: "Books",
                column: "AutherId");

            migrationBuilder.CreateIndex(
                name: "IX_Books_PublisherId",
                table: "Books",
                column: "PublisherId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "BookReviews");

            migrationBuilder.DropTable(
                name: "Books");

            migrationBuilder.DropTable(
                name: "Authors");

            migrationBuilder.DropTable(
                name: "Publishers");
        }
    }
}
